// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.txt

#ifndef PROTOBUF_scene_2etxt__INCLUDED
#define PROTOBUF_scene_2etxt__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace PBMessage {
class HallInfo;
class HallInfoDefaultTypeInternal;
extern HallInfoDefaultTypeInternal _HallInfo_default_instance_;
class InviteInfo;
class InviteInfoDefaultTypeInternal;
extern InviteInfoDefaultTypeInternal _InviteInfo_default_instance_;
class PlayerInfo;
class PlayerInfoDefaultTypeInternal;
extern PlayerInfoDefaultTypeInternal _PlayerInfo_default_instance_;
class Position2D;
class Position2DDefaultTypeInternal;
extern Position2DDefaultTypeInternal _Position2D_default_instance_;
class Position3D;
class Position3DDefaultTypeInternal;
extern Position3DDefaultTypeInternal _Position3D_default_instance_;
class RoomInfo;
class RoomInfoDefaultTypeInternal;
extern RoomInfoDefaultTypeInternal _RoomInfo_default_instance_;
}  // namespace PBMessage

namespace PBMessage {

namespace protobuf_scene_2etxt {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_scene_2etxt

enum TeamType {
  Team_A = 1,
  Team_B = 2
};
bool TeamType_IsValid(int value);
const TeamType TeamType_MIN = Team_A;
const TeamType TeamType_MAX = Team_B;
const int TeamType_ARRAYSIZE = TeamType_MAX + 1;

const ::google::protobuf::EnumDescriptor* TeamType_descriptor();
inline const ::std::string& TeamType_Name(TeamType value) {
  return ::google::protobuf::internal::NameOfEnum(
    TeamType_descriptor(), value);
}
inline bool TeamType_Parse(
    const ::std::string& name, TeamType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<TeamType>(
    TeamType_descriptor(), name, value);
}
enum RoomType {
  RT_Idle = 1,
  RT_JoinRoom = 2,
  RT_Wait = 3,
  RT_OK = 4
};
bool RoomType_IsValid(int value);
const RoomType RoomType_MIN = RT_Idle;
const RoomType RoomType_MAX = RT_OK;
const int RoomType_ARRAYSIZE = RoomType_MAX + 1;

const ::google::protobuf::EnumDescriptor* RoomType_descriptor();
inline const ::std::string& RoomType_Name(RoomType value) {
  return ::google::protobuf::internal::NameOfEnum(
    RoomType_descriptor(), value);
}
inline bool RoomType_Parse(
    const ::std::string& name, RoomType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<RoomType>(
    RoomType_descriptor(), name, value);
}
enum PlayerStatus {
  PS_None = 0,
  PS_Idle = 1,
  PS_Run = 2,
  PS_Q = 3,
  PS_W = 4,
  PS_E = 5,
  PS_R = 6,
  PS_Death = 7,
  PS_CDing = 8
};
bool PlayerStatus_IsValid(int value);
const PlayerStatus PlayerStatus_MIN = PS_None;
const PlayerStatus PlayerStatus_MAX = PS_CDing;
const int PlayerStatus_ARRAYSIZE = PlayerStatus_MAX + 1;

const ::google::protobuf::EnumDescriptor* PlayerStatus_descriptor();
inline const ::std::string& PlayerStatus_Name(PlayerStatus value) {
  return ::google::protobuf::internal::NameOfEnum(
    PlayerStatus_descriptor(), value);
}
inline bool PlayerStatus_Parse(
    const ::std::string& name, PlayerStatus* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PlayerStatus>(
    PlayerStatus_descriptor(), name, value);
}
// ===================================================================

class Position2D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMessage.Position2D) */ {
 public:
  Position2D();
  virtual ~Position2D();

  Position2D(const Position2D& from);

  inline Position2D& operator=(const Position2D& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position2D& default_instance();

  static inline const Position2D* internal_default_instance() {
    return reinterpret_cast<const Position2D*>(
               &_Position2D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(Position2D* other);

  // implements Message ----------------------------------------------

  inline Position2D* New() const PROTOBUF_FINAL { return New(NULL); }

  Position2D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Position2D& from);
  void MergeFrom(const Position2D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Position2D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  const ::std::string& x() const;
  void set_x(const ::std::string& value);
  #if LANG_CXX11
  void set_x(::std::string&& value);
  #endif
  void set_x(const char* value);
  void set_x(const char* value, size_t size);
  ::std::string* mutable_x();
  ::std::string* release_x();
  void set_allocated_x(::std::string* x);

  // required string y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  const ::std::string& y() const;
  void set_y(const ::std::string& value);
  #if LANG_CXX11
  void set_y(::std::string&& value);
  #endif
  void set_y(const char* value);
  void set_y(const char* value, size_t size);
  ::std::string* mutable_y();
  ::std::string* release_y();
  void set_allocated_y(::std::string* y);

  // @@protoc_insertion_point(class_scope:PBMessage.Position2D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr x_;
  ::google::protobuf::internal::ArenaStringPtr y_;
  friend struct protobuf_scene_2etxt::TableStruct;
};
// -------------------------------------------------------------------

class Position3D : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMessage.Position3D) */ {
 public:
  Position3D();
  virtual ~Position3D();

  Position3D(const Position3D& from);

  inline Position3D& operator=(const Position3D& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Position3D& default_instance();

  static inline const Position3D* internal_default_instance() {
    return reinterpret_cast<const Position3D*>(
               &_Position3D_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(Position3D* other);

  // implements Message ----------------------------------------------

  inline Position3D* New() const PROTOBUF_FINAL { return New(NULL); }

  Position3D* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Position3D& from);
  void MergeFrom(const Position3D& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Position3D* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  const ::std::string& x() const;
  void set_x(const ::std::string& value);
  #if LANG_CXX11
  void set_x(::std::string&& value);
  #endif
  void set_x(const char* value);
  void set_x(const char* value, size_t size);
  ::std::string* mutable_x();
  ::std::string* release_x();
  void set_allocated_x(::std::string* x);

  // required string y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  const ::std::string& y() const;
  void set_y(const ::std::string& value);
  #if LANG_CXX11
  void set_y(::std::string&& value);
  #endif
  void set_y(const char* value);
  void set_y(const char* value, size_t size);
  ::std::string* mutable_y();
  ::std::string* release_y();
  void set_allocated_y(::std::string* y);

  // required string z = 3;
  bool has_z() const;
  void clear_z();
  static const int kZFieldNumber = 3;
  const ::std::string& z() const;
  void set_z(const ::std::string& value);
  #if LANG_CXX11
  void set_z(::std::string&& value);
  #endif
  void set_z(const char* value);
  void set_z(const char* value, size_t size);
  ::std::string* mutable_z();
  ::std::string* release_z();
  void set_allocated_z(::std::string* z);

  // @@protoc_insertion_point(class_scope:PBMessage.Position3D)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();
  void set_has_z();
  void clear_has_z();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr x_;
  ::google::protobuf::internal::ArenaStringPtr y_;
  ::google::protobuf::internal::ArenaStringPtr z_;
  friend struct protobuf_scene_2etxt::TableStruct;
};
// -------------------------------------------------------------------

class PlayerInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMessage.PlayerInfo) */ {
 public:
  PlayerInfo();
  virtual ~PlayerInfo();

  PlayerInfo(const PlayerInfo& from);

  inline PlayerInfo& operator=(const PlayerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PlayerInfo& default_instance();

  static inline const PlayerInfo* internal_default_instance() {
    return reinterpret_cast<const PlayerInfo*>(
               &_PlayerInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(PlayerInfo* other);

  // implements Message ----------------------------------------------

  inline PlayerInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  PlayerInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PlayerInfo& from);
  void MergeFrom(const PlayerInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PlayerInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 5;
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 5;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional .PBMessage.Position3D Pos = 16;
  bool has_pos() const;
  void clear_pos();
  static const int kPosFieldNumber = 16;
  const ::PBMessage::Position3D& pos() const;
  ::PBMessage::Position3D* mutable_pos();
  ::PBMessage::Position3D* release_pos();
  void set_allocated_pos(::PBMessage::Position3D* pos);

  // optional .PBMessage.Position3D Rot = 17;
  bool has_rot() const;
  void clear_rot();
  static const int kRotFieldNumber = 17;
  const ::PBMessage::Position3D& rot() const;
  ::PBMessage::Position3D* mutable_rot();
  ::PBMessage::Position3D* release_rot();
  void set_allocated_rot(::PBMessage::Position3D* rot);

  // optional .PBMessage.Position3D Scale = 18;
  bool has_scale() const;
  void clear_scale();
  static const int kScaleFieldNumber = 18;
  const ::PBMessage::Position3D& scale() const;
  ::PBMessage::Position3D* mutable_scale();
  ::PBMessage::Position3D* release_scale();
  void set_allocated_scale(::PBMessage::Position3D* scale);

  // optional int32 socket = 1;
  bool has_socket() const;
  void clear_socket();
  static const int kSocketFieldNumber = 1;
  ::google::protobuf::int32 socket() const;
  void set_socket(::google::protobuf::int32 value);

  // optional int32 roleId = 3;
  bool has_roleid() const;
  void clear_roleid();
  static const int kRoleIdFieldNumber = 3;
  ::google::protobuf::int32 roleid() const;
  void set_roleid(::google::protobuf::int32 value);

  // optional int32 roleType = 4;
  bool has_roletype() const;
  void clear_roletype();
  static const int kRoleTypeFieldNumber = 4;
  ::google::protobuf::int32 roletype() const;
  void set_roletype(::google::protobuf::int32 value);

  // optional int32 level = 6;
  bool has_level() const;
  void clear_level();
  static const int kLevelFieldNumber = 6;
  ::google::protobuf::int32 level() const;
  void set_level(::google::protobuf::int32 value);

  // optional float hp = 7;
  bool has_hp() const;
  void clear_hp();
  static const int kHpFieldNumber = 7;
  float hp() const;
  void set_hp(float value);

  // optional float mp = 8;
  bool has_mp() const;
  void clear_mp();
  static const int kMpFieldNumber = 8;
  float mp() const;
  void set_mp(float value);

  // optional bool isRoomCtl = 2;
  bool has_isroomctl() const;
  void clear_isroomctl();
  static const int kIsRoomCtlFieldNumber = 2;
  bool isroomctl() const;
  void set_isroomctl(bool value);

  // optional bool gameWaite = 15;
  bool has_gamewaite() const;
  void clear_gamewaite();
  static const int kGameWaiteFieldNumber = 15;
  bool gamewaite() const;
  void set_gamewaite(bool value);

  // optional float attack = 9;
  bool has_attack() const;
  void clear_attack();
  static const int kAttackFieldNumber = 9;
  float attack() const;
  void set_attack(float value);

  // optional float moveSpeed = 10;
  bool has_movespeed() const;
  void clear_movespeed();
  static const int kMoveSpeedFieldNumber = 10;
  float movespeed() const;
  void set_movespeed(float value);

  // optional int32 roomId = 13;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIdFieldNumber = 13;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 teamId = 14;
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamIdFieldNumber = 14;
  ::google::protobuf::int32 teamid() const;
  void set_teamid(::google::protobuf::int32 value);

  // optional .PBMessage.PlayerStatus playerStatus = 19;
  bool has_playerstatus() const;
  void clear_playerstatus();
  static const int kPlayerStatusFieldNumber = 19;
  ::PBMessage::PlayerStatus playerstatus() const;
  void set_playerstatus(::PBMessage::PlayerStatus value);

  // optional .PBMessage.TeamType team = 11;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 11;
  ::PBMessage::TeamType team() const;
  void set_team(::PBMessage::TeamType value);

  // optional .PBMessage.RoomType roomState = 12;
  bool has_roomstate() const;
  void clear_roomstate();
  static const int kRoomStateFieldNumber = 12;
  ::PBMessage::RoomType roomstate() const;
  void set_roomstate(::PBMessage::RoomType value);

  // @@protoc_insertion_point(class_scope:PBMessage.PlayerInfo)
 private:
  void set_has_socket();
  void clear_has_socket();
  void set_has_isroomctl();
  void clear_has_isroomctl();
  void set_has_roleid();
  void clear_has_roleid();
  void set_has_roletype();
  void clear_has_roletype();
  void set_has_name();
  void clear_has_name();
  void set_has_level();
  void clear_has_level();
  void set_has_hp();
  void clear_has_hp();
  void set_has_mp();
  void clear_has_mp();
  void set_has_attack();
  void clear_has_attack();
  void set_has_movespeed();
  void clear_has_movespeed();
  void set_has_team();
  void clear_has_team();
  void set_has_roomstate();
  void clear_has_roomstate();
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_teamid();
  void clear_has_teamid();
  void set_has_gamewaite();
  void clear_has_gamewaite();
  void set_has_pos();
  void clear_has_pos();
  void set_has_rot();
  void clear_has_rot();
  void set_has_scale();
  void clear_has_scale();
  void set_has_playerstatus();
  void clear_has_playerstatus();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::PBMessage::Position3D* pos_;
  ::PBMessage::Position3D* rot_;
  ::PBMessage::Position3D* scale_;
  ::google::protobuf::int32 socket_;
  ::google::protobuf::int32 roleid_;
  ::google::protobuf::int32 roletype_;
  ::google::protobuf::int32 level_;
  float hp_;
  float mp_;
  bool isroomctl_;
  bool gamewaite_;
  float attack_;
  float movespeed_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 teamid_;
  int playerstatus_;
  int team_;
  int roomstate_;
  friend struct protobuf_scene_2etxt::TableStruct;
};
// -------------------------------------------------------------------

class HallInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMessage.HallInfo) */ {
 public:
  HallInfo();
  virtual ~HallInfo();

  HallInfo(const HallInfo& from);

  inline HallInfo& operator=(const HallInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const HallInfo& default_instance();

  static inline const HallInfo* internal_default_instance() {
    return reinterpret_cast<const HallInfo*>(
               &_HallInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(HallInfo* other);

  // implements Message ----------------------------------------------

  inline HallInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  HallInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const HallInfo& from);
  void MergeFrom(const HallInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(HallInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBMessage.RoomInfo roomInfo = 1;
  int roominfo_size() const;
  void clear_roominfo();
  static const int kRoomInfoFieldNumber = 1;
  const ::PBMessage::RoomInfo& roominfo(int index) const;
  ::PBMessage::RoomInfo* mutable_roominfo(int index);
  ::PBMessage::RoomInfo* add_roominfo();
  ::google::protobuf::RepeatedPtrField< ::PBMessage::RoomInfo >*
      mutable_roominfo();
  const ::google::protobuf::RepeatedPtrField< ::PBMessage::RoomInfo >&
      roominfo() const;

  // @@protoc_insertion_point(class_scope:PBMessage.HallInfo)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PBMessage::RoomInfo > roominfo_;
  friend struct protobuf_scene_2etxt::TableStruct;
};
// -------------------------------------------------------------------

class RoomInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMessage.RoomInfo) */ {
 public:
  RoomInfo();
  virtual ~RoomInfo();

  RoomInfo(const RoomInfo& from);

  inline RoomInfo& operator=(const RoomInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RoomInfo& default_instance();

  static inline const RoomInfo* internal_default_instance() {
    return reinterpret_cast<const RoomInfo*>(
               &_RoomInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(RoomInfo* other);

  // implements Message ----------------------------------------------

  inline RoomInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  RoomInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const RoomInfo& from);
  void MergeFrom(const RoomInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(RoomInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .PBMessage.PlayerInfo playerInfo = 5;
  int playerinfo_size() const;
  void clear_playerinfo();
  static const int kPlayerInfoFieldNumber = 5;
  const ::PBMessage::PlayerInfo& playerinfo(int index) const;
  ::PBMessage::PlayerInfo* mutable_playerinfo(int index);
  ::PBMessage::PlayerInfo* add_playerinfo();
  ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >*
      mutable_playerinfo();
  const ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >&
      playerinfo() const;

  // required string roomName = 2;
  bool has_roomname() const;
  void clear_roomname();
  static const int kRoomNameFieldNumber = 2;
  const ::std::string& roomname() const;
  void set_roomname(const ::std::string& value);
  #if LANG_CXX11
  void set_roomname(::std::string&& value);
  #endif
  void set_roomname(const char* value);
  void set_roomname(const char* value, size_t size);
  ::std::string* mutable_roomname();
  ::std::string* release_roomname();
  void set_allocated_roomname(::std::string* roomname);

  // optional int32 roomID = 1;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // required int32 personCount = 3;
  bool has_personcount() const;
  void clear_personcount();
  static const int kPersonCountFieldNumber = 3;
  ::google::protobuf::int32 personcount() const;
  void set_personcount(::google::protobuf::int32 value);

  // required int32 freePersonCount = 4;
  bool has_freepersoncount() const;
  void clear_freepersoncount();
  static const int kFreePersonCountFieldNumber = 4;
  ::google::protobuf::int32 freepersoncount() const;
  void set_freepersoncount(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:PBMessage.RoomInfo)
 private:
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_roomname();
  void clear_has_roomname();
  void set_has_personcount();
  void clear_has_personcount();
  void set_has_freepersoncount();
  void clear_has_freepersoncount();

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo > playerinfo_;
  ::google::protobuf::internal::ArenaStringPtr roomname_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 personcount_;
  ::google::protobuf::int32 freepersoncount_;
  friend struct protobuf_scene_2etxt::TableStruct;
};
// -------------------------------------------------------------------

class InviteInfo : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PBMessage.InviteInfo) */ {
 public:
  InviteInfo();
  virtual ~InviteInfo();

  InviteInfo(const InviteInfo& from);

  inline InviteInfo& operator=(const InviteInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const InviteInfo& default_instance();

  static inline const InviteInfo* internal_default_instance() {
    return reinterpret_cast<const InviteInfo*>(
               &_InviteInfo_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    5;

  void Swap(InviteInfo* other);

  // implements Message ----------------------------------------------

  inline InviteInfo* New() const PROTOBUF_FINAL { return New(NULL); }

  InviteInfo* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const InviteInfo& from);
  void MergeFrom(const InviteInfo& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(InviteInfo* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string reqUserName = 3;
  bool has_requsername() const;
  void clear_requsername();
  static const int kReqUserNameFieldNumber = 3;
  const ::std::string& requsername() const;
  void set_requsername(const ::std::string& value);
  #if LANG_CXX11
  void set_requsername(::std::string&& value);
  #endif
  void set_requsername(const char* value);
  void set_requsername(const char* value, size_t size);
  ::std::string* mutable_requsername();
  ::std::string* release_requsername();
  void set_allocated_requsername(::std::string* requsername);

  // optional int32 roomID = 1;
  bool has_roomid() const;
  void clear_roomid();
  static const int kRoomIDFieldNumber = 1;
  ::google::protobuf::int32 roomid() const;
  void set_roomid(::google::protobuf::int32 value);

  // optional int32 reqUserId = 2;
  bool has_requserid() const;
  void clear_requserid();
  static const int kReqUserIdFieldNumber = 2;
  ::google::protobuf::int32 requserid() const;
  void set_requserid(::google::protobuf::int32 value);

  // optional int32 revUserId = 4;
  bool has_revuserid() const;
  void clear_revuserid();
  static const int kRevUserIdFieldNumber = 4;
  ::google::protobuf::int32 revuserid() const;
  void set_revuserid(::google::protobuf::int32 value);

  // optional int32 teamId = 6;
  bool has_teamid() const;
  void clear_teamid();
  static const int kTeamIdFieldNumber = 6;
  ::google::protobuf::int32 teamid() const;
  void set_teamid(::google::protobuf::int32 value);

  // optional .PBMessage.TeamType team = 5;
  bool has_team() const;
  void clear_team();
  static const int kTeamFieldNumber = 5;
  ::PBMessage::TeamType team() const;
  void set_team(::PBMessage::TeamType value);

  // @@protoc_insertion_point(class_scope:PBMessage.InviteInfo)
 private:
  void set_has_roomid();
  void clear_has_roomid();
  void set_has_requserid();
  void clear_has_requserid();
  void set_has_requsername();
  void clear_has_requsername();
  void set_has_revuserid();
  void clear_has_revuserid();
  void set_has_team();
  void clear_has_team();
  void set_has_teamid();
  void clear_has_teamid();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr requsername_;
  ::google::protobuf::int32 roomid_;
  ::google::protobuf::int32 requserid_;
  ::google::protobuf::int32 revuserid_;
  ::google::protobuf::int32 teamid_;
  int team_;
  friend struct protobuf_scene_2etxt::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// Position2D

// required string x = 1;
inline bool Position2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position2D::clear_x() {
  x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_x();
}
inline const ::std::string& Position2D::x() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position2D.x)
  return x_.GetNoArena();
}
inline void Position2D::set_x(const ::std::string& value) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position2D.x)
}
#if LANG_CXX11
inline void Position2D::set_x(::std::string&& value) {
  set_has_x();
  x_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position2D.x)
}
#endif
inline void Position2D::set_x(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position2D.x)
}
inline void Position2D::set_x(const char* value, size_t size) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position2D.x)
}
inline ::std::string* Position2D::mutable_x() {
  set_has_x();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position2D.x)
  return x_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position2D::release_x() {
  // @@protoc_insertion_point(field_release:PBMessage.Position2D.x)
  clear_has_x();
  return x_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position2D::set_allocated_x(::std::string* x) {
  if (x != NULL) {
    set_has_x();
  } else {
    clear_has_x();
  }
  x_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), x);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position2D.x)
}

// required string y = 2;
inline bool Position2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position2D::clear_y() {
  y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_y();
}
inline const ::std::string& Position2D::y() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position2D.y)
  return y_.GetNoArena();
}
inline void Position2D::set_y(const ::std::string& value) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position2D.y)
}
#if LANG_CXX11
inline void Position2D::set_y(::std::string&& value) {
  set_has_y();
  y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position2D.y)
}
#endif
inline void Position2D::set_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position2D.y)
}
inline void Position2D::set_y(const char* value, size_t size) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position2D.y)
}
inline ::std::string* Position2D::mutable_y() {
  set_has_y();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position2D.y)
  return y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position2D::release_y() {
  // @@protoc_insertion_point(field_release:PBMessage.Position2D.y)
  clear_has_y();
  return y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position2D::set_allocated_y(::std::string* y) {
  if (y != NULL) {
    set_has_y();
  } else {
    clear_has_y();
  }
  y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), y);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position2D.y)
}

// -------------------------------------------------------------------

// Position3D

// required string x = 1;
inline bool Position3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Position3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Position3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Position3D::clear_x() {
  x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_x();
}
inline const ::std::string& Position3D::x() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position3D.x)
  return x_.GetNoArena();
}
inline void Position3D::set_x(const ::std::string& value) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position3D.x)
}
#if LANG_CXX11
inline void Position3D::set_x(::std::string&& value) {
  set_has_x();
  x_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position3D.x)
}
#endif
inline void Position3D::set_x(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position3D.x)
}
inline void Position3D::set_x(const char* value, size_t size) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position3D.x)
}
inline ::std::string* Position3D::mutable_x() {
  set_has_x();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position3D.x)
  return x_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position3D::release_x() {
  // @@protoc_insertion_point(field_release:PBMessage.Position3D.x)
  clear_has_x();
  return x_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position3D::set_allocated_x(::std::string* x) {
  if (x != NULL) {
    set_has_x();
  } else {
    clear_has_x();
  }
  x_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), x);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position3D.x)
}

// required string y = 2;
inline bool Position3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Position3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Position3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Position3D::clear_y() {
  y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_y();
}
inline const ::std::string& Position3D::y() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position3D.y)
  return y_.GetNoArena();
}
inline void Position3D::set_y(const ::std::string& value) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position3D.y)
}
#if LANG_CXX11
inline void Position3D::set_y(::std::string&& value) {
  set_has_y();
  y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position3D.y)
}
#endif
inline void Position3D::set_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position3D.y)
}
inline void Position3D::set_y(const char* value, size_t size) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position3D.y)
}
inline ::std::string* Position3D::mutable_y() {
  set_has_y();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position3D.y)
  return y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position3D::release_y() {
  // @@protoc_insertion_point(field_release:PBMessage.Position3D.y)
  clear_has_y();
  return y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position3D::set_allocated_y(::std::string* y) {
  if (y != NULL) {
    set_has_y();
  } else {
    clear_has_y();
  }
  y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), y);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position3D.y)
}

// required string z = 3;
inline bool Position3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Position3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Position3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Position3D::clear_z() {
  z_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_z();
}
inline const ::std::string& Position3D::z() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position3D.z)
  return z_.GetNoArena();
}
inline void Position3D::set_z(const ::std::string& value) {
  set_has_z();
  z_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position3D.z)
}
#if LANG_CXX11
inline void Position3D::set_z(::std::string&& value) {
  set_has_z();
  z_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position3D.z)
}
#endif
inline void Position3D::set_z(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_z();
  z_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position3D.z)
}
inline void Position3D::set_z(const char* value, size_t size) {
  set_has_z();
  z_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position3D.z)
}
inline ::std::string* Position3D::mutable_z() {
  set_has_z();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position3D.z)
  return z_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* Position3D::release_z() {
  // @@protoc_insertion_point(field_release:PBMessage.Position3D.z)
  clear_has_z();
  return z_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void Position3D::set_allocated_z(::std::string* z) {
  if (z != NULL) {
    set_has_z();
  } else {
    clear_has_z();
  }
  z_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), z);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position3D.z)
}

// -------------------------------------------------------------------

// PlayerInfo

// optional int32 socket = 1;
inline bool PlayerInfo::has_socket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void PlayerInfo::set_has_socket() {
  _has_bits_[0] |= 0x00000010u;
}
inline void PlayerInfo::clear_has_socket() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void PlayerInfo::clear_socket() {
  socket_ = 0;
  clear_has_socket();
}
inline ::google::protobuf::int32 PlayerInfo::socket() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.socket)
  return socket_;
}
inline void PlayerInfo::set_socket(::google::protobuf::int32 value) {
  set_has_socket();
  socket_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.socket)
}

// optional bool isRoomCtl = 2;
inline bool PlayerInfo::has_isroomctl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void PlayerInfo::set_has_isroomctl() {
  _has_bits_[0] |= 0x00000400u;
}
inline void PlayerInfo::clear_has_isroomctl() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void PlayerInfo::clear_isroomctl() {
  isroomctl_ = false;
  clear_has_isroomctl();
}
inline bool PlayerInfo::isroomctl() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.isRoomCtl)
  return isroomctl_;
}
inline void PlayerInfo::set_isroomctl(bool value) {
  set_has_isroomctl();
  isroomctl_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.isRoomCtl)
}

// optional int32 roleId = 3;
inline bool PlayerInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void PlayerInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void PlayerInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void PlayerInfo::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
inline ::google::protobuf::int32 PlayerInfo::roleid() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roleId)
  return roleid_;
}
inline void PlayerInfo::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roleId)
}

// optional int32 roleType = 4;
inline bool PlayerInfo::has_roletype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void PlayerInfo::set_has_roletype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void PlayerInfo::clear_has_roletype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void PlayerInfo::clear_roletype() {
  roletype_ = 0;
  clear_has_roletype();
}
inline ::google::protobuf::int32 PlayerInfo::roletype() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roleType)
  return roletype_;
}
inline void PlayerInfo::set_roletype(::google::protobuf::int32 value) {
  set_has_roletype();
  roletype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roleType)
}

// optional string name = 5;
inline bool PlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& PlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.name)
  return name_.GetNoArena();
}
inline void PlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.name)
}
#if LANG_CXX11
inline void PlayerInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.PlayerInfo.name)
}
#endif
inline void PlayerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.PlayerInfo.name)
}
inline void PlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.PlayerInfo.name)
}
inline ::std::string* PlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.name)
}

// optional int32 level = 6;
inline bool PlayerInfo::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void PlayerInfo::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
inline void PlayerInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void PlayerInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
inline ::google::protobuf::int32 PlayerInfo::level() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.level)
  return level_;
}
inline void PlayerInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.level)
}

// optional float hp = 7;
inline bool PlayerInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void PlayerInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000100u;
}
inline void PlayerInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void PlayerInfo::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
inline float PlayerInfo::hp() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.hp)
  return hp_;
}
inline void PlayerInfo::set_hp(float value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.hp)
}

// optional float mp = 8;
inline bool PlayerInfo::has_mp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void PlayerInfo::set_has_mp() {
  _has_bits_[0] |= 0x00000200u;
}
inline void PlayerInfo::clear_has_mp() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void PlayerInfo::clear_mp() {
  mp_ = 0;
  clear_has_mp();
}
inline float PlayerInfo::mp() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.mp)
  return mp_;
}
inline void PlayerInfo::set_mp(float value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.mp)
}

// optional float attack = 9;
inline bool PlayerInfo::has_attack() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void PlayerInfo::set_has_attack() {
  _has_bits_[0] |= 0x00001000u;
}
inline void PlayerInfo::clear_has_attack() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void PlayerInfo::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
inline float PlayerInfo::attack() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.attack)
  return attack_;
}
inline void PlayerInfo::set_attack(float value) {
  set_has_attack();
  attack_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.attack)
}

// optional float moveSpeed = 10;
inline bool PlayerInfo::has_movespeed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void PlayerInfo::set_has_movespeed() {
  _has_bits_[0] |= 0x00002000u;
}
inline void PlayerInfo::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void PlayerInfo::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
inline float PlayerInfo::movespeed() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.moveSpeed)
  return movespeed_;
}
inline void PlayerInfo::set_movespeed(float value) {
  set_has_movespeed();
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.moveSpeed)
}

// optional .PBMessage.TeamType team = 11;
inline bool PlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void PlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00020000u;
}
inline void PlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void PlayerInfo::clear_team() {
  team_ = 1;
  clear_has_team();
}
inline ::PBMessage::TeamType PlayerInfo::team() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.team)
  return static_cast< ::PBMessage::TeamType >(team_);
}
inline void PlayerInfo::set_team(::PBMessage::TeamType value) {
  assert(::PBMessage::TeamType_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.team)
}

// optional .PBMessage.RoomType roomState = 12;
inline bool PlayerInfo::has_roomstate() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
inline void PlayerInfo::set_has_roomstate() {
  _has_bits_[0] |= 0x00040000u;
}
inline void PlayerInfo::clear_has_roomstate() {
  _has_bits_[0] &= ~0x00040000u;
}
inline void PlayerInfo::clear_roomstate() {
  roomstate_ = 1;
  clear_has_roomstate();
}
inline ::PBMessage::RoomType PlayerInfo::roomstate() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roomState)
  return static_cast< ::PBMessage::RoomType >(roomstate_);
}
inline void PlayerInfo::set_roomstate(::PBMessage::RoomType value) {
  assert(::PBMessage::RoomType_IsValid(value));
  set_has_roomstate();
  roomstate_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roomState)
}

// optional int32 roomId = 13;
inline bool PlayerInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void PlayerInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void PlayerInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void PlayerInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 PlayerInfo::roomid() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roomId)
  return roomid_;
}
inline void PlayerInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roomId)
}

// optional int32 teamId = 14;
inline bool PlayerInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void PlayerInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00008000u;
}
inline void PlayerInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void PlayerInfo::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 PlayerInfo::teamid() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.teamId)
  return teamid_;
}
inline void PlayerInfo::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.teamId)
}

// optional bool gameWaite = 15;
inline bool PlayerInfo::has_gamewaite() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void PlayerInfo::set_has_gamewaite() {
  _has_bits_[0] |= 0x00000800u;
}
inline void PlayerInfo::clear_has_gamewaite() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void PlayerInfo::clear_gamewaite() {
  gamewaite_ = false;
  clear_has_gamewaite();
}
inline bool PlayerInfo::gamewaite() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.gameWaite)
  return gamewaite_;
}
inline void PlayerInfo::set_gamewaite(bool value) {
  set_has_gamewaite();
  gamewaite_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.gameWaite)
}

// optional .PBMessage.Position3D Pos = 16;
inline bool PlayerInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PlayerInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PlayerInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PlayerInfo::clear_pos() {
  if (pos_ != NULL) pos_->::PBMessage::Position3D::Clear();
  clear_has_pos();
}
inline const ::PBMessage::Position3D& PlayerInfo::pos() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.Pos)
  return pos_ != NULL ? *pos_
                         : *::PBMessage::Position3D::internal_default_instance();
}
inline ::PBMessage::Position3D* PlayerInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.Pos)
  return pos_;
}
inline ::PBMessage::Position3D* PlayerInfo::release_pos() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.Pos)
  clear_has_pos();
  ::PBMessage::Position3D* temp = pos_;
  pos_ = NULL;
  return temp;
}
inline void PlayerInfo::set_allocated_pos(::PBMessage::Position3D* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.Pos)
}

// optional .PBMessage.Position3D Rot = 17;
inline bool PlayerInfo::has_rot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void PlayerInfo::set_has_rot() {
  _has_bits_[0] |= 0x00000004u;
}
inline void PlayerInfo::clear_has_rot() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void PlayerInfo::clear_rot() {
  if (rot_ != NULL) rot_->::PBMessage::Position3D::Clear();
  clear_has_rot();
}
inline const ::PBMessage::Position3D& PlayerInfo::rot() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.Rot)
  return rot_ != NULL ? *rot_
                         : *::PBMessage::Position3D::internal_default_instance();
}
inline ::PBMessage::Position3D* PlayerInfo::mutable_rot() {
  set_has_rot();
  if (rot_ == NULL) {
    rot_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.Rot)
  return rot_;
}
inline ::PBMessage::Position3D* PlayerInfo::release_rot() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.Rot)
  clear_has_rot();
  ::PBMessage::Position3D* temp = rot_;
  rot_ = NULL;
  return temp;
}
inline void PlayerInfo::set_allocated_rot(::PBMessage::Position3D* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    set_has_rot();
  } else {
    clear_has_rot();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.Rot)
}

// optional .PBMessage.Position3D Scale = 18;
inline bool PlayerInfo::has_scale() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void PlayerInfo::set_has_scale() {
  _has_bits_[0] |= 0x00000008u;
}
inline void PlayerInfo::clear_has_scale() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void PlayerInfo::clear_scale() {
  if (scale_ != NULL) scale_->::PBMessage::Position3D::Clear();
  clear_has_scale();
}
inline const ::PBMessage::Position3D& PlayerInfo::scale() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.Scale)
  return scale_ != NULL ? *scale_
                         : *::PBMessage::Position3D::internal_default_instance();
}
inline ::PBMessage::Position3D* PlayerInfo::mutable_scale() {
  set_has_scale();
  if (scale_ == NULL) {
    scale_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.Scale)
  return scale_;
}
inline ::PBMessage::Position3D* PlayerInfo::release_scale() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.Scale)
  clear_has_scale();
  ::PBMessage::Position3D* temp = scale_;
  scale_ = NULL;
  return temp;
}
inline void PlayerInfo::set_allocated_scale(::PBMessage::Position3D* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    set_has_scale();
  } else {
    clear_has_scale();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.Scale)
}

// optional .PBMessage.PlayerStatus playerStatus = 19;
inline bool PlayerInfo::has_playerstatus() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void PlayerInfo::set_has_playerstatus() {
  _has_bits_[0] |= 0x00010000u;
}
inline void PlayerInfo::clear_has_playerstatus() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void PlayerInfo::clear_playerstatus() {
  playerstatus_ = 0;
  clear_has_playerstatus();
}
inline ::PBMessage::PlayerStatus PlayerInfo::playerstatus() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.playerStatus)
  return static_cast< ::PBMessage::PlayerStatus >(playerstatus_);
}
inline void PlayerInfo::set_playerstatus(::PBMessage::PlayerStatus value) {
  assert(::PBMessage::PlayerStatus_IsValid(value));
  set_has_playerstatus();
  playerstatus_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.playerStatus)
}

// -------------------------------------------------------------------

// HallInfo

// repeated .PBMessage.RoomInfo roomInfo = 1;
inline int HallInfo::roominfo_size() const {
  return roominfo_.size();
}
inline void HallInfo::clear_roominfo() {
  roominfo_.Clear();
}
inline const ::PBMessage::RoomInfo& HallInfo::roominfo(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.HallInfo.roomInfo)
  return roominfo_.Get(index);
}
inline ::PBMessage::RoomInfo* HallInfo::mutable_roominfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.HallInfo.roomInfo)
  return roominfo_.Mutable(index);
}
inline ::PBMessage::RoomInfo* HallInfo::add_roominfo() {
  // @@protoc_insertion_point(field_add:PBMessage.HallInfo.roomInfo)
  return roominfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBMessage::RoomInfo >*
HallInfo::mutable_roominfo() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.HallInfo.roomInfo)
  return &roominfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMessage::RoomInfo >&
HallInfo::roominfo() const {
  // @@protoc_insertion_point(field_list:PBMessage.HallInfo.roomInfo)
  return roominfo_;
}

// -------------------------------------------------------------------

// RoomInfo

// optional int32 roomID = 1;
inline bool RoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 RoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.roomID)
  return roomid_;
}
inline void RoomInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.roomID)
}

// required string roomName = 2;
inline bool RoomInfo::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RoomInfo::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RoomInfo::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RoomInfo::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
inline const ::std::string& RoomInfo::roomname() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.roomName)
  return roomname_.GetNoArena();
}
inline void RoomInfo::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.roomName)
}
#if LANG_CXX11
inline void RoomInfo::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.RoomInfo.roomName)
}
#endif
inline void RoomInfo::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.RoomInfo.roomName)
}
inline void RoomInfo::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.RoomInfo.roomName)
}
inline ::std::string* RoomInfo::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:PBMessage.RoomInfo.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* RoomInfo::release_roomname() {
  // @@protoc_insertion_point(field_release:PBMessage.RoomInfo.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void RoomInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.RoomInfo.roomName)
}

// required int32 personCount = 3;
inline bool RoomInfo::has_personcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RoomInfo::set_has_personcount() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RoomInfo::clear_has_personcount() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RoomInfo::clear_personcount() {
  personcount_ = 0;
  clear_has_personcount();
}
inline ::google::protobuf::int32 RoomInfo::personcount() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.personCount)
  return personcount_;
}
inline void RoomInfo::set_personcount(::google::protobuf::int32 value) {
  set_has_personcount();
  personcount_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.personCount)
}

// required int32 freePersonCount = 4;
inline bool RoomInfo::has_freepersoncount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RoomInfo::set_has_freepersoncount() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RoomInfo::clear_has_freepersoncount() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RoomInfo::clear_freepersoncount() {
  freepersoncount_ = 0;
  clear_has_freepersoncount();
}
inline ::google::protobuf::int32 RoomInfo::freepersoncount() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.freePersonCount)
  return freepersoncount_;
}
inline void RoomInfo::set_freepersoncount(::google::protobuf::int32 value) {
  set_has_freepersoncount();
  freepersoncount_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.freePersonCount)
}

// repeated .PBMessage.PlayerInfo playerInfo = 5;
inline int RoomInfo::playerinfo_size() const {
  return playerinfo_.size();
}
inline void RoomInfo::clear_playerinfo() {
  playerinfo_.Clear();
}
inline const ::PBMessage::PlayerInfo& RoomInfo::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.playerInfo)
  return playerinfo_.Get(index);
}
inline ::PBMessage::PlayerInfo* RoomInfo::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.RoomInfo.playerInfo)
  return playerinfo_.Mutable(index);
}
inline ::PBMessage::PlayerInfo* RoomInfo::add_playerinfo() {
  // @@protoc_insertion_point(field_add:PBMessage.RoomInfo.playerInfo)
  return playerinfo_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >*
RoomInfo::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.RoomInfo.playerInfo)
  return &playerinfo_;
}
inline const ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >&
RoomInfo::playerinfo() const {
  // @@protoc_insertion_point(field_list:PBMessage.RoomInfo.playerInfo)
  return playerinfo_;
}

// -------------------------------------------------------------------

// InviteInfo

// optional int32 roomID = 1;
inline bool InviteInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void InviteInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void InviteInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void InviteInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
inline ::google::protobuf::int32 InviteInfo::roomid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.roomID)
  return roomid_;
}
inline void InviteInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.roomID)
}

// optional int32 reqUserId = 2;
inline bool InviteInfo::has_requserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void InviteInfo::set_has_requserid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void InviteInfo::clear_has_requserid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void InviteInfo::clear_requserid() {
  requserid_ = 0;
  clear_has_requserid();
}
inline ::google::protobuf::int32 InviteInfo::requserid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.reqUserId)
  return requserid_;
}
inline void InviteInfo::set_requserid(::google::protobuf::int32 value) {
  set_has_requserid();
  requserid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.reqUserId)
}

// optional string reqUserName = 3;
inline bool InviteInfo::has_requsername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void InviteInfo::set_has_requsername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void InviteInfo::clear_has_requsername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void InviteInfo::clear_requsername() {
  requsername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_requsername();
}
inline const ::std::string& InviteInfo::requsername() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.reqUserName)
  return requsername_.GetNoArena();
}
inline void InviteInfo::set_requsername(const ::std::string& value) {
  set_has_requsername();
  requsername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.reqUserName)
}
#if LANG_CXX11
inline void InviteInfo::set_requsername(::std::string&& value) {
  set_has_requsername();
  requsername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.InviteInfo.reqUserName)
}
#endif
inline void InviteInfo::set_requsername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_requsername();
  requsername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.InviteInfo.reqUserName)
}
inline void InviteInfo::set_requsername(const char* value, size_t size) {
  set_has_requsername();
  requsername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.InviteInfo.reqUserName)
}
inline ::std::string* InviteInfo::mutable_requsername() {
  set_has_requsername();
  // @@protoc_insertion_point(field_mutable:PBMessage.InviteInfo.reqUserName)
  return requsername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* InviteInfo::release_requsername() {
  // @@protoc_insertion_point(field_release:PBMessage.InviteInfo.reqUserName)
  clear_has_requsername();
  return requsername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void InviteInfo::set_allocated_requsername(::std::string* requsername) {
  if (requsername != NULL) {
    set_has_requsername();
  } else {
    clear_has_requsername();
  }
  requsername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requsername);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.InviteInfo.reqUserName)
}

// optional int32 revUserId = 4;
inline bool InviteInfo::has_revuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void InviteInfo::set_has_revuserid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void InviteInfo::clear_has_revuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void InviteInfo::clear_revuserid() {
  revuserid_ = 0;
  clear_has_revuserid();
}
inline ::google::protobuf::int32 InviteInfo::revuserid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.revUserId)
  return revuserid_;
}
inline void InviteInfo::set_revuserid(::google::protobuf::int32 value) {
  set_has_revuserid();
  revuserid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.revUserId)
}

// optional .PBMessage.TeamType team = 5;
inline bool InviteInfo::has_team() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void InviteInfo::set_has_team() {
  _has_bits_[0] |= 0x00000020u;
}
inline void InviteInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void InviteInfo::clear_team() {
  team_ = 1;
  clear_has_team();
}
inline ::PBMessage::TeamType InviteInfo::team() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.team)
  return static_cast< ::PBMessage::TeamType >(team_);
}
inline void InviteInfo::set_team(::PBMessage::TeamType value) {
  assert(::PBMessage::TeamType_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.team)
}

// optional int32 teamId = 6;
inline bool InviteInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void InviteInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void InviteInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void InviteInfo::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
inline ::google::protobuf::int32 InviteInfo::teamid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.teamId)
  return teamid_;
}
inline void InviteInfo::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.teamId)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace PBMessage

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::PBMessage::TeamType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBMessage::TeamType>() {
  return ::PBMessage::TeamType_descriptor();
}
template <> struct is_proto_enum< ::PBMessage::RoomType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBMessage::RoomType>() {
  return ::PBMessage::RoomType_descriptor();
}
template <> struct is_proto_enum< ::PBMessage::PlayerStatus> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::PBMessage::PlayerStatus>() {
  return ::PBMessage::PlayerStatus_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_scene_2etxt__INCLUDED
