// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: command.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "command.txt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PBMessage {
class CMD_ReleaseSkillDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_ReleaseSkill> {
} _CMD_ReleaseSkill_default_instance_;
class CMD_MoveToPointDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CMD_MoveToPoint> {
} _CMD_MoveToPoint_default_instance_;
class DisconnectDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Disconnect> {
} _Disconnect_default_instance_;
class KeepAliveMsgDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<KeepAliveMsg> {
} _KeepAliveMsg_default_instance_;
class LoginRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginRequest> {
} _LoginRequest_default_instance_;
class LoginReturnDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LoginReturn> {
} _LoginReturn_default_instance_;
class RegisterRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterRequest> {
} _RegisterRequest_default_instance_;
class RegisterReturnDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RegisterReturn> {
} _RegisterReturn_default_instance_;
class CreateRoleRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRoleRequest> {
} _CreateRoleRequest_default_instance_;
class CreateRoleReturnDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CreateRoleReturn> {
} _CreateRoleReturn_default_instance_;
class SelectRoleRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelectRoleRequest> {
} _SelectRoleRequest_default_instance_;
class SelectRoleReturnDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<SelectRoleReturn> {
} _SelectRoleReturn_default_instance_;
class HallRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HallRequest> {
} _HallRequest_default_instance_;
class HallReturnDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HallReturn> {
} _HallReturn_default_instance_;
class GameMainRequestDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GameMainRequest> {
} _GameMainRequest_default_instance_;
class GameMainReturnDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<GameMainReturn> {
} _GameMainReturn_default_instance_;
class PacketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Packet> {
} _Packet_default_instance_;
class UnPacketDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<UnPacket> {
} _UnPacket_default_instance_;

namespace protobuf_command_2etxt {


namespace {

::google::protobuf::Metadata file_level_metadata[18];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[8];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ReleaseSkill, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ReleaseSkill, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ReleaseSkill, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ReleaseSkill, skillid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_ReleaseSkill, mouseposition_),
  1,
  2,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_MoveToPoint, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_MoveToPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_MoveToPoint, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_MoveToPoint, position_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_MoveToPoint, direction_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CMD_MoveToPoint, destination_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disconnect, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disconnect, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Disconnect, roleid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveMsg, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveMsg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(KeepAliveMsg, curscene_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginRequest, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReturn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReturn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReturn, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReturn, returntype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LoginReturn, playerinfo_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, username_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterRequest, password_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReturn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReturn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RegisterReturn, returntype_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleRequest, playerinfo_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleReturn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleReturn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleReturn, returntype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CreateRoleReturn, playerinfo_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectRoleRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectRoleRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectRoleRequest, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectRoleRequest, roletype_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectRoleReturn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectRoleReturn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(SelectRoleReturn, userid_),
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallRequest, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallRequest, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallRequest, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallRequest, userid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallRequest, inviteinfo_),
  0,
  3,
  1,
  4,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, hallinfo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, friendlist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallReturn, inviteinfo_),
  1,
  3,
  0,
  4,
  ~0u,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainRequest, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainRequest, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainRequest, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainRequest, playerinfo_),
  0,
  2,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainReturn, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainReturn, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainReturn, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(GameMainReturn, friendlist_),
  0,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, curscene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, loginrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, loginreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, registerrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, registerreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, createrolerequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, createrolereturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, selectrolerequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, selectrolereturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, hallrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, hallreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, gamemainrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, gamemainreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Packet, keepalive_),
  13,
  14,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, curscene_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, msgtype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, loginrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, loginreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, registerrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, registerreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, createrolerequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, createrolereturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, selectrolerequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, selectrolereturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, hallrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, hallreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, gamemainrequest_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, gamemainreturn_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(UnPacket, keepalive_),
  13,
  14,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 8, sizeof(CMD_ReleaseSkill)},
  { 11, 20, sizeof(CMD_MoveToPoint)},
  { 24, 30, sizeof(Disconnect)},
  { 31, 37, sizeof(KeepAliveMsg)},
  { 38, 45, sizeof(LoginRequest)},
  { 47, 55, sizeof(LoginReturn)},
  { 58, 65, sizeof(RegisterRequest)},
  { 67, 73, sizeof(RegisterReturn)},
  { 74, 81, sizeof(CreateRoleRequest)},
  { 83, 90, sizeof(CreateRoleReturn)},
  { 92, 99, sizeof(SelectRoleRequest)},
  { 101, 107, sizeof(SelectRoleReturn)},
  { 108, 118, sizeof(HallRequest)},
  { 123, 134, sizeof(HallReturn)},
  { 140, 148, sizeof(GameMainRequest)},
  { 151, 158, sizeof(GameMainReturn)},
  { 160, 180, sizeof(Packet)},
  { 195, 215, sizeof(UnPacket)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_ReleaseSkill_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CMD_MoveToPoint_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Disconnect_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_KeepAliveMsg_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LoginReturn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RegisterReturn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_CreateRoleReturn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectRoleRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_SelectRoleReturn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HallRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HallReturn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameMainRequest_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_GameMainReturn_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Packet_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_UnPacket_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "command.txt", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 18);
}

}  // namespace

void TableStruct::Shutdown() {
  _CMD_ReleaseSkill_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _CMD_MoveToPoint_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Disconnect_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _KeepAliveMsg_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _LoginRequest_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _LoginReturn_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _RegisterRequest_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _RegisterReturn_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _CreateRoleRequest_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
  _CreateRoleReturn_default_instance_.Shutdown();
  delete file_level_metadata[9].reflection;
  _SelectRoleRequest_default_instance_.Shutdown();
  delete file_level_metadata[10].reflection;
  _SelectRoleReturn_default_instance_.Shutdown();
  delete file_level_metadata[11].reflection;
  _HallRequest_default_instance_.Shutdown();
  delete file_level_metadata[12].reflection;
  _HallReturn_default_instance_.Shutdown();
  delete file_level_metadata[13].reflection;
  _GameMainRequest_default_instance_.Shutdown();
  delete file_level_metadata[14].reflection;
  _GameMainReturn_default_instance_.Shutdown();
  delete file_level_metadata[15].reflection;
  _Packet_default_instance_.Shutdown();
  delete file_level_metadata[16].reflection;
  _UnPacket_default_instance_.Shutdown();
  delete file_level_metadata[17].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  ::PBMessage::protobuf_scene_2etxt::InitDefaults();
  _CMD_ReleaseSkill_default_instance_.DefaultConstruct();
  _CMD_MoveToPoint_default_instance_.DefaultConstruct();
  _Disconnect_default_instance_.DefaultConstruct();
  _KeepAliveMsg_default_instance_.DefaultConstruct();
  _LoginRequest_default_instance_.DefaultConstruct();
  _LoginReturn_default_instance_.DefaultConstruct();
  _RegisterRequest_default_instance_.DefaultConstruct();
  _RegisterReturn_default_instance_.DefaultConstruct();
  _CreateRoleRequest_default_instance_.DefaultConstruct();
  _CreateRoleReturn_default_instance_.DefaultConstruct();
  _SelectRoleRequest_default_instance_.DefaultConstruct();
  _SelectRoleReturn_default_instance_.DefaultConstruct();
  _HallRequest_default_instance_.DefaultConstruct();
  _HallReturn_default_instance_.DefaultConstruct();
  _GameMainRequest_default_instance_.DefaultConstruct();
  _GameMainReturn_default_instance_.DefaultConstruct();
  _Packet_default_instance_.DefaultConstruct();
  _UnPacket_default_instance_.DefaultConstruct();
  _CMD_ReleaseSkill_default_instance_.get_mutable()->mouseposition_ = const_cast< ::PBMessage::Position3D*>(
      ::PBMessage::Position3D::internal_default_instance());
  _CMD_MoveToPoint_default_instance_.get_mutable()->position_ = const_cast< ::PBMessage::Position3D*>(
      ::PBMessage::Position3D::internal_default_instance());
  _CMD_MoveToPoint_default_instance_.get_mutable()->direction_ = const_cast< ::PBMessage::Position3D*>(
      ::PBMessage::Position3D::internal_default_instance());
  _CMD_MoveToPoint_default_instance_.get_mutable()->destination_ = const_cast< ::PBMessage::Position3D*>(
      ::PBMessage::Position3D::internal_default_instance());
  _CreateRoleRequest_default_instance_.get_mutable()->playerinfo_ = const_cast< ::PBMessage::PlayerInfo*>(
      ::PBMessage::PlayerInfo::internal_default_instance());
  _HallRequest_default_instance_.get_mutable()->inviteinfo_ = const_cast< ::PBMessage::InviteInfo*>(
      ::PBMessage::InviteInfo::internal_default_instance());
  _HallReturn_default_instance_.get_mutable()->hallinfo_ = const_cast< ::PBMessage::HallInfo*>(
      ::PBMessage::HallInfo::internal_default_instance());
  _HallReturn_default_instance_.get_mutable()->inviteinfo_ = const_cast< ::PBMessage::InviteInfo*>(
      ::PBMessage::InviteInfo::internal_default_instance());
  _GameMainRequest_default_instance_.get_mutable()->playerinfo_ = const_cast< ::PBMessage::PlayerInfo*>(
      ::PBMessage::PlayerInfo::internal_default_instance());
  _Packet_default_instance_.get_mutable()->loginrequest_ = const_cast< ::PBMessage::LoginRequest*>(
      ::PBMessage::LoginRequest::internal_default_instance());
  _Packet_default_instance_.get_mutable()->loginreturn_ = const_cast< ::PBMessage::LoginReturn*>(
      ::PBMessage::LoginReturn::internal_default_instance());
  _Packet_default_instance_.get_mutable()->registerrequest_ = const_cast< ::PBMessage::RegisterRequest*>(
      ::PBMessage::RegisterRequest::internal_default_instance());
  _Packet_default_instance_.get_mutable()->registerreturn_ = const_cast< ::PBMessage::RegisterReturn*>(
      ::PBMessage::RegisterReturn::internal_default_instance());
  _Packet_default_instance_.get_mutable()->createrolerequest_ = const_cast< ::PBMessage::CreateRoleRequest*>(
      ::PBMessage::CreateRoleRequest::internal_default_instance());
  _Packet_default_instance_.get_mutable()->createrolereturn_ = const_cast< ::PBMessage::CreateRoleReturn*>(
      ::PBMessage::CreateRoleReturn::internal_default_instance());
  _Packet_default_instance_.get_mutable()->selectrolerequest_ = const_cast< ::PBMessage::SelectRoleRequest*>(
      ::PBMessage::SelectRoleRequest::internal_default_instance());
  _Packet_default_instance_.get_mutable()->selectrolereturn_ = const_cast< ::PBMessage::SelectRoleReturn*>(
      ::PBMessage::SelectRoleReturn::internal_default_instance());
  _Packet_default_instance_.get_mutable()->hallrequest_ = const_cast< ::PBMessage::HallRequest*>(
      ::PBMessage::HallRequest::internal_default_instance());
  _Packet_default_instance_.get_mutable()->hallreturn_ = const_cast< ::PBMessage::HallReturn*>(
      ::PBMessage::HallReturn::internal_default_instance());
  _Packet_default_instance_.get_mutable()->gamemainrequest_ = const_cast< ::PBMessage::GameMainRequest*>(
      ::PBMessage::GameMainRequest::internal_default_instance());
  _Packet_default_instance_.get_mutable()->gamemainreturn_ = const_cast< ::PBMessage::GameMainReturn*>(
      ::PBMessage::GameMainReturn::internal_default_instance());
  _Packet_default_instance_.get_mutable()->keepalive_ = const_cast< ::PBMessage::KeepAliveMsg*>(
      ::PBMessage::KeepAliveMsg::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->loginrequest_ = const_cast< ::PBMessage::LoginRequest*>(
      ::PBMessage::LoginRequest::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->loginreturn_ = const_cast< ::PBMessage::LoginReturn*>(
      ::PBMessage::LoginReturn::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->registerrequest_ = const_cast< ::PBMessage::RegisterRequest*>(
      ::PBMessage::RegisterRequest::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->registerreturn_ = const_cast< ::PBMessage::RegisterReturn*>(
      ::PBMessage::RegisterReturn::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->createrolerequest_ = const_cast< ::PBMessage::CreateRoleRequest*>(
      ::PBMessage::CreateRoleRequest::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->createrolereturn_ = const_cast< ::PBMessage::CreateRoleReturn*>(
      ::PBMessage::CreateRoleReturn::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->selectrolerequest_ = const_cast< ::PBMessage::SelectRoleRequest*>(
      ::PBMessage::SelectRoleRequest::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->selectrolereturn_ = const_cast< ::PBMessage::SelectRoleReturn*>(
      ::PBMessage::SelectRoleReturn::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->hallrequest_ = const_cast< ::PBMessage::HallRequest*>(
      ::PBMessage::HallRequest::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->hallreturn_ = const_cast< ::PBMessage::HallReturn*>(
      ::PBMessage::HallReturn::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->gamemainrequest_ = const_cast< ::PBMessage::GameMainRequest*>(
      ::PBMessage::GameMainRequest::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->gamemainreturn_ = const_cast< ::PBMessage::GameMainReturn*>(
      ::PBMessage::GameMainReturn::internal_default_instance());
  _UnPacket_default_instance_.get_mutable()->keepalive_ = const_cast< ::PBMessage::KeepAliveMsg*>(
      ::PBMessage::KeepAliveMsg::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\013command.txt\022\tPBMessage\032\tscene.txt\"a\n\020C"
      "MD_ReleaseSkill\022\016\n\006roleId\030\001 \002(\005\022\017\n\007skill"
      "Id\030\002 \002(\005\022,\n\rmouseposition\030\003 \002(\0132\025.PBMess"
      "age.Position3D\"\240\001\n\017CMD_MoveToPoint\022\016\n\006ro"
      "leId\030\001 \002(\005\022\'\n\010position\030\002 \002(\0132\025.PBMessage"
      ".Position3D\022(\n\tdirection\030\003 \002(\0132\025.PBMessa"
      "ge.Position3D\022*\n\013destination\030\004 \002(\0132\025.PBM"
      "essage.Position3D\"\034\n\nDisconnect\022\016\n\006roleI"
      "d\030\001 \002(\005\"5\n\014KeepAliveMsg\022%\n\010curScene\030\001 \002("
      "\0162\023.PBMessage.CurScene\"2\n\014LoginRequest\022\020"
      "\n\010userName\030\001 \002(\t\022\020\n\010passWord\030\002 \002(\t\"{\n\013Lo"
      "ginReturn\022\021\n\tsessionID\030\001 \002(\t\022.\n\nreturnTy"
      "pe\030\002 \002(\0162\032.PBMessage.LoginReturnType\022)\n\n"
      "playerInfo\030\003 \003(\0132\025.PBMessage.PlayerInfo\""
      "5\n\017RegisterRequest\022\020\n\010userName\030\001 \002(\t\022\020\n\010"
      "passWord\030\002 \002(\t\"C\n\016RegisterReturn\0221\n\nretu"
      "rnType\030\001 \002(\0162\035.PBMessage.RegisterReturnT"
      "ype\"Q\n\021CreateRoleRequest\022\021\n\tsessionID\030\001 "
      "\002(\t\022)\n\nplayerInfo\030\002 \002(\0132\025.PBMessage.Play"
      "erInfo\"r\n\020CreateRoleReturn\0223\n\nreturnType"
      "\030\001 \002(\0162\037.PBMessage.CreateRoleReturnType\022"
      ")\n\nplayerInfo\030\002 \003(\0132\025.PBMessage.PlayerIn"
      "fo\"8\n\021SelectRoleRequest\022\021\n\tsessionID\030\001 \002"
      "(\t\022\020\n\010roleType\030\002 \002(\005\"\"\n\020SelectRoleReturn"
      "\022\016\n\006userId\030\001 \002(\005\"\226\001\n\013HallRequest\022\021\n\tsess"
      "ionID\030\001 \002(\t\022\'\n\007MsgType\030\002 \002(\0162\026.PBMessage"
      ".HallMsgType\022\020\n\010roomName\030\003 \001(\t\022\016\n\006userId"
      "\030\004 \001(\005\022)\n\ninviteInfo\030\005 \001(\0132\025.PBMessage.I"
      "nviteInfo\"\324\001\n\nHallReturn\022%\n\010hallInfo\030\001 \001"
      "(\0132\023.PBMessage.HallInfo\022\'\n\007MsgType\030\002 \001(\016"
      "2\026.PBMessage.HallMsgType\022\020\n\010roomName\030\003 \001"
      "(\t\022\016\n\006roomID\030\004 \001(\005\022)\n\nfriendList\030\005 \003(\0132\025"
      ".PBMessage.PlayerInfo\022)\n\ninviteInfo\030\006 \001("
      "\0132\025.PBMessage.InviteInfo\"|\n\017GameMainRequ"
      "est\022\021\n\tsessionID\030\001 \002(\t\022+\n\007msgType\030\002 \002(\0162"
      "\032.PBMessage.GameMainMsgType\022)\n\nplayerInf"
      "o\030\003 \001(\0132\025.PBMessage.PlayerInfo\"h\n\016GameMa"
      "inReturn\022+\n\007msgType\030\001 \002(\0162\032.PBMessage.Ga"
      "meMainMsgType\022)\n\nfriendList\030\002 \003(\0132\025.PBMe"
      "ssage.PlayerInfo\"\350\005\n\006Packet\022%\n\010curScene\030"
      "\001 \002(\0162\023.PBMessage.CurScene\022\'\n\007msgType\030\002 "
      "\001(\0162\026.PBMessage.MessageType\022-\n\014loginRequ"
      "est\030\003 \001(\0132\027.PBMessage.LoginRequest\022+\n\013lo"
      "ginReturn\030\004 \001(\0132\026.PBMessage.LoginReturn\022"
      "3\n\017registerRequest\030\005 \001(\0132\032.PBMessage.Reg"
      "isterRequest\0221\n\016registerReturn\030\006 \001(\0132\031.P"
      "BMessage.RegisterReturn\0227\n\021createRoleReq"
      "uest\030\007 \001(\0132\034.PBMessage.CreateRoleRequest"
      "\0225\n\020createRoleReturn\030\010 \001(\0132\033.PBMessage.C"
      "reateRoleReturn\0227\n\021selectRoleRequest\030\t \001"
      "(\0132\034.PBMessage.SelectRoleRequest\0225\n\020sele"
      "ctRoleReturn\030\n \001(\0132\033.PBMessage.SelectRol"
      "eReturn\022+\n\013hallRequest\030\013 \001(\0132\026.PBMessage"
      ".HallRequest\022)\n\nhallReturn\030\014 \001(\0132\025.PBMes"
      "sage.HallReturn\0223\n\017gameMainRequest\030\r \001(\013"
      "2\032.PBMessage.GameMainRequest\0221\n\016gameMain"
      "Return\030\016 \001(\0132\031.PBMessage.GameMainReturn\022"
      "*\n\tkeepAlive\030\017 \001(\0132\027.PBMessage.KeepAlive"
      "Msg\"\352\005\n\010UnPacket\022%\n\010curScene\030\001 \002(\0162\023.PBM"
      "essage.CurScene\022\'\n\007msgType\030\002 \001(\0162\026.PBMes"
      "sage.MessageType\022-\n\014loginRequest\030\003 \001(\0132\027"
      ".PBMessage.LoginRequest\022+\n\013loginReturn\030\004"
      " \001(\0132\026.PBMessage.LoginReturn\0223\n\017register"
      "Request\030\005 \001(\0132\032.PBMessage.RegisterReques"
      "t\0221\n\016registerReturn\030\006 \001(\0132\031.PBMessage.Re"
      "gisterReturn\0227\n\021createRoleRequest\030\007 \001(\0132"
      "\034.PBMessage.CreateRoleRequest\0225\n\020createR"
      "oleReturn\030\010 \001(\0132\033.PBMessage.CreateRoleRe"
      "turn\0227\n\021selectRoleRequest\030\t \001(\0132\034.PBMess"
      "age.SelectRoleRequest\0225\n\020selectRoleRetur"
      "n\030\n \001(\0132\033.PBMessage.SelectRoleReturn\022+\n\013"
      "hallRequest\030\013 \001(\0132\026.PBMessage.HallReques"
      "t\022)\n\nhallReturn\030\014 \001(\0132\025.PBMessage.HallRe"
      "turn\0223\n\017gameMainRequest\030\r \001(\0132\032.PBMessag"
      "e.GameMainRequest\0221\n\016gameMainReturn\030\016 \001("
      "\0132\031.PBMessage.GameMainReturn\022*\n\tkeepAliv"
      "e\030\017 \001(\0132\027.PBMessage.KeepAliveMsg*.\n\tComm"
      "andID\022\020\n\014ReleaseSkill\020\001\022\017\n\013MoveToPoint\020\002"
      "*\250\001\n\010CurScene\022\013\n\007CS_None\020\000\022\014\n\010CS_Login\020\001"
      "\022\017\n\013CS_Register\020\002\022\021\n\rCS_CreateRole\020\003\022\021\n\r"
      "CS_SelectRole\020\004\022\017\n\013CS_WaitRoom\020\005\022\020\n\014CS_M"
      "ainScene\020\006\022\020\n\014CS_KeepAlive\020\007\022\025\n\021CS_Break"
      "LineRecon\020\010*d\n\013MessageType\022\n\n\006IdInfo\020\000\022\016"
      "\n\nCreateInfo\020\001\022\014\n\010TextInfo\020\002\022\014\n\010MoveInfo"
      "\020\003\022\017\n\013DestroyInfo\020\004\022\014\n\010AsynInfo\020\005*\?\n\017Log"
      "inReturnType\022\010\n\004Fail\020\000\022\020\n\014ToCreateRole\020\001"
      "\022\020\n\014ToSelectRole\020\002*1\n\022RegisterReturnType"
      "\022\013\n\007RT_Fail\020\000\022\016\n\nRT_Success\020\001*5\n\024CreateR"
      "oleReturnType\022\014\n\010CRT_Fail\020\000\022\017\n\013CRT_Succe"
      "ss\020\001*\221\002\n\013HallMsgType\022\021\n\rHST_AutoMatch\020\000\022"
      "\022\n\016HST_CreateRoom\020\001\022\023\n\017HST_GetRoomList\020\002"
      "\022\020\n\014HST_JoinRoom\020\003\022\021\n\rHST_GameStart\020\004\022\023\n"
      "\017HST_WaitTimeout\020\005\022\021\n\rHST_LeaveRoom\020\006\022\026\n"
      "\022HST_CreateRoomFail\020\007\022\024\n\020HST_OnlineFrien"
      "d\020\010\022\023\n\017HST_RequestTeam\020\t\022\020\n\014HST_JoinTeam"
      "\020\n\022\021\n\rHST_GameWaite\020\013\022\021\n\rHST_KeepAlive\020\014"
      "*q\n\017GameMainMsgType\022\021\n\rGMT_KeepAlive\020\000\022\021"
      "\n\rGMT_RsyncAttr\020\001\022\023\n\017GMT_RsyncStatus\020\002\022\020"
      "\n\014GMT_GameOver\020\003\022\021\n\rGMT_BreakLine\020\004"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 3955);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "command.txt", &protobuf_RegisterTypes);
  ::PBMessage::protobuf_scene_2etxt::AddDescriptors();
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_command_2etxt

const ::google::protobuf::EnumDescriptor* CommandID_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[0];
}
bool CommandID_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CurScene_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[1];
}
bool CurScene_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* MessageType_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[2];
}
bool MessageType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* LoginReturnType_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[3];
}
bool LoginReturnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RegisterReturnType_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[4];
}
bool RegisterReturnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* CreateRoleReturnType_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[5];
}
bool CreateRoleReturnType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* HallMsgType_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[6];
}
bool HallMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* GameMainMsgType_descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_enum_descriptors[7];
}
bool GameMainMsgType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_ReleaseSkill::kRoleIdFieldNumber;
const int CMD_ReleaseSkill::kSkillIdFieldNumber;
const int CMD_ReleaseSkill::kMousepositionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_ReleaseSkill::CMD_ReleaseSkill()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.CMD_ReleaseSkill)
}
CMD_ReleaseSkill::CMD_ReleaseSkill(const CMD_ReleaseSkill& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_mouseposition()) {
    mouseposition_ = new ::PBMessage::Position3D(*from.mouseposition_);
  } else {
    mouseposition_ = NULL;
  }
  ::memcpy(&roleid_, &from.roleid_,
    reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&roleid_) + sizeof(skillid_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.CMD_ReleaseSkill)
}

void CMD_ReleaseSkill::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&mouseposition_, 0, reinterpret_cast<char*>(&skillid_) -
    reinterpret_cast<char*>(&mouseposition_) + sizeof(skillid_));
}

CMD_ReleaseSkill::~CMD_ReleaseSkill() {
  // @@protoc_insertion_point(destructor:PBMessage.CMD_ReleaseSkill)
  SharedDtor();
}

void CMD_ReleaseSkill::SharedDtor() {
  if (this != internal_default_instance()) {
    delete mouseposition_;
  }
}

void CMD_ReleaseSkill::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_ReleaseSkill::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_ReleaseSkill& CMD_ReleaseSkill::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

CMD_ReleaseSkill* CMD_ReleaseSkill::New(::google::protobuf::Arena* arena) const {
  CMD_ReleaseSkill* n = new CMD_ReleaseSkill;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_ReleaseSkill::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.CMD_ReleaseSkill)
  if (has_mouseposition()) {
    GOOGLE_DCHECK(mouseposition_ != NULL);
    mouseposition_->::PBMessage::Position3D::Clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&roleid_, 0, reinterpret_cast<char*>(&skillid_) -
      reinterpret_cast<char*>(&roleid_) + sizeof(skillid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_ReleaseSkill::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.CMD_ReleaseSkill)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 skillId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_skillid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &skillid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.Position3D mouseposition = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_mouseposition()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.CMD_ReleaseSkill)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.CMD_ReleaseSkill)
  return false;
#undef DO_
}

void CMD_ReleaseSkill::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.CMD_ReleaseSkill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // required int32 skillId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->skillid(), output);
  }

  // required .PBMessage.Position3D mouseposition = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->mouseposition_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.CMD_ReleaseSkill)
}

::google::protobuf::uint8* CMD_ReleaseSkill::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.CMD_ReleaseSkill)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // required int32 skillId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->skillid(), target);
  }

  // required .PBMessage.Position3D mouseposition = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->mouseposition_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.CMD_ReleaseSkill)
  return target;
}

size_t CMD_ReleaseSkill::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.CMD_ReleaseSkill)
  size_t total_size = 0;

  if (has_mouseposition()) {
    // required .PBMessage.Position3D mouseposition = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mouseposition_);
  }

  if (has_roleid()) {
    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  if (has_skillid()) {
    // required int32 skillId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());
  }

  return total_size;
}
size_t CMD_ReleaseSkill::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.CMD_ReleaseSkill)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required .PBMessage.Position3D mouseposition = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->mouseposition_);

    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());

    // required int32 skillId = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->skillid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_ReleaseSkill::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.CMD_ReleaseSkill)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_ReleaseSkill* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_ReleaseSkill>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.CMD_ReleaseSkill)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.CMD_ReleaseSkill)
    MergeFrom(*source);
  }
}

void CMD_ReleaseSkill::MergeFrom(const CMD_ReleaseSkill& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.CMD_ReleaseSkill)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_mouseposition()->::PBMessage::Position3D::MergeFrom(from.mouseposition());
    }
    if (cached_has_bits & 0x00000002u) {
      roleid_ = from.roleid_;
    }
    if (cached_has_bits & 0x00000004u) {
      skillid_ = from.skillid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_ReleaseSkill::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.CMD_ReleaseSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_ReleaseSkill::CopyFrom(const CMD_ReleaseSkill& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.CMD_ReleaseSkill)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_ReleaseSkill::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_mouseposition()) {
    if (!this->mouseposition_->IsInitialized()) return false;
  }
  return true;
}

void CMD_ReleaseSkill::Swap(CMD_ReleaseSkill* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_ReleaseSkill::InternalSwap(CMD_ReleaseSkill* other) {
  std::swap(mouseposition_, other->mouseposition_);
  std::swap(roleid_, other->roleid_);
  std::swap(skillid_, other->skillid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_ReleaseSkill::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_ReleaseSkill

// required int32 roleId = 1;
bool CMD_ReleaseSkill::has_roleid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMD_ReleaseSkill::set_has_roleid() {
  _has_bits_[0] |= 0x00000002u;
}
void CMD_ReleaseSkill::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMD_ReleaseSkill::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
::google::protobuf::int32 CMD_ReleaseSkill::roleid() const {
  // @@protoc_insertion_point(field_get:PBMessage.CMD_ReleaseSkill.roleId)
  return roleid_;
}
void CMD_ReleaseSkill::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.CMD_ReleaseSkill.roleId)
}

// required int32 skillId = 2;
bool CMD_ReleaseSkill::has_skillid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMD_ReleaseSkill::set_has_skillid() {
  _has_bits_[0] |= 0x00000004u;
}
void CMD_ReleaseSkill::clear_has_skillid() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMD_ReleaseSkill::clear_skillid() {
  skillid_ = 0;
  clear_has_skillid();
}
::google::protobuf::int32 CMD_ReleaseSkill::skillid() const {
  // @@protoc_insertion_point(field_get:PBMessage.CMD_ReleaseSkill.skillId)
  return skillid_;
}
void CMD_ReleaseSkill::set_skillid(::google::protobuf::int32 value) {
  set_has_skillid();
  skillid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.CMD_ReleaseSkill.skillId)
}

// required .PBMessage.Position3D mouseposition = 3;
bool CMD_ReleaseSkill::has_mouseposition() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMD_ReleaseSkill::set_has_mouseposition() {
  _has_bits_[0] |= 0x00000001u;
}
void CMD_ReleaseSkill::clear_has_mouseposition() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMD_ReleaseSkill::clear_mouseposition() {
  if (mouseposition_ != NULL) mouseposition_->::PBMessage::Position3D::Clear();
  clear_has_mouseposition();
}
const ::PBMessage::Position3D& CMD_ReleaseSkill::mouseposition() const {
  // @@protoc_insertion_point(field_get:PBMessage.CMD_ReleaseSkill.mouseposition)
  return mouseposition_ != NULL ? *mouseposition_
                         : *::PBMessage::Position3D::internal_default_instance();
}
::PBMessage::Position3D* CMD_ReleaseSkill::mutable_mouseposition() {
  set_has_mouseposition();
  if (mouseposition_ == NULL) {
    mouseposition_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.CMD_ReleaseSkill.mouseposition)
  return mouseposition_;
}
::PBMessage::Position3D* CMD_ReleaseSkill::release_mouseposition() {
  // @@protoc_insertion_point(field_release:PBMessage.CMD_ReleaseSkill.mouseposition)
  clear_has_mouseposition();
  ::PBMessage::Position3D* temp = mouseposition_;
  mouseposition_ = NULL;
  return temp;
}
void CMD_ReleaseSkill::set_allocated_mouseposition(::PBMessage::Position3D* mouseposition) {
  delete mouseposition_;
  mouseposition_ = mouseposition;
  if (mouseposition) {
    set_has_mouseposition();
  } else {
    clear_has_mouseposition();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.CMD_ReleaseSkill.mouseposition)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CMD_MoveToPoint::kRoleIdFieldNumber;
const int CMD_MoveToPoint::kPositionFieldNumber;
const int CMD_MoveToPoint::kDirectionFieldNumber;
const int CMD_MoveToPoint::kDestinationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CMD_MoveToPoint::CMD_MoveToPoint()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.CMD_MoveToPoint)
}
CMD_MoveToPoint::CMD_MoveToPoint(const CMD_MoveToPoint& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_position()) {
    position_ = new ::PBMessage::Position3D(*from.position_);
  } else {
    position_ = NULL;
  }
  if (from.has_direction()) {
    direction_ = new ::PBMessage::Position3D(*from.direction_);
  } else {
    direction_ = NULL;
  }
  if (from.has_destination()) {
    destination_ = new ::PBMessage::Position3D(*from.destination_);
  } else {
    destination_ = NULL;
  }
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.CMD_MoveToPoint)
}

void CMD_MoveToPoint::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&position_, 0, reinterpret_cast<char*>(&roleid_) -
    reinterpret_cast<char*>(&position_) + sizeof(roleid_));
}

CMD_MoveToPoint::~CMD_MoveToPoint() {
  // @@protoc_insertion_point(destructor:PBMessage.CMD_MoveToPoint)
  SharedDtor();
}

void CMD_MoveToPoint::SharedDtor() {
  if (this != internal_default_instance()) {
    delete position_;
  }
  if (this != internal_default_instance()) {
    delete direction_;
  }
  if (this != internal_default_instance()) {
    delete destination_;
  }
}

void CMD_MoveToPoint::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CMD_MoveToPoint::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CMD_MoveToPoint& CMD_MoveToPoint::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

CMD_MoveToPoint* CMD_MoveToPoint::New(::google::protobuf::Arena* arena) const {
  CMD_MoveToPoint* n = new CMD_MoveToPoint;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CMD_MoveToPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.CMD_MoveToPoint)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_position()) {
      GOOGLE_DCHECK(position_ != NULL);
      position_->::PBMessage::Position3D::Clear();
    }
    if (has_direction()) {
      GOOGLE_DCHECK(direction_ != NULL);
      direction_->::PBMessage::Position3D::Clear();
    }
    if (has_destination()) {
      GOOGLE_DCHECK(destination_ != NULL);
      destination_->::PBMessage::Position3D::Clear();
    }
  }
  roleid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CMD_MoveToPoint::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.CMD_MoveToPoint)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.Position3D position = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_position()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.Position3D direction = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_direction()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.Position3D destination = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_destination()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.CMD_MoveToPoint)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.CMD_MoveToPoint)
  return false;
#undef DO_
}

void CMD_MoveToPoint::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.CMD_MoveToPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  // required .PBMessage.Position3D position = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->position_, output);
  }

  // required .PBMessage.Position3D direction = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->direction_, output);
  }

  // required .PBMessage.Position3D destination = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->destination_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.CMD_MoveToPoint)
}

::google::protobuf::uint8* CMD_MoveToPoint::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.CMD_MoveToPoint)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  // required .PBMessage.Position3D position = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->position_, deterministic, target);
  }

  // required .PBMessage.Position3D direction = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->direction_, deterministic, target);
  }

  // required .PBMessage.Position3D destination = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->destination_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.CMD_MoveToPoint)
  return target;
}

size_t CMD_MoveToPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.CMD_MoveToPoint)
  size_t total_size = 0;

  if (has_position()) {
    // required .PBMessage.Position3D position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);
  }

  if (has_direction()) {
    // required .PBMessage.Position3D direction = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->direction_);
  }

  if (has_destination()) {
    // required .PBMessage.Position3D destination = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->destination_);
  }

  if (has_roleid()) {
    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }

  return total_size;
}
size_t CMD_MoveToPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.CMD_MoveToPoint)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required .PBMessage.Position3D position = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->position_);

    // required .PBMessage.Position3D direction = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->direction_);

    // required .PBMessage.Position3D destination = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->destination_);

    // required int32 roleId = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CMD_MoveToPoint::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.CMD_MoveToPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const CMD_MoveToPoint* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CMD_MoveToPoint>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.CMD_MoveToPoint)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.CMD_MoveToPoint)
    MergeFrom(*source);
  }
}

void CMD_MoveToPoint::MergeFrom(const CMD_MoveToPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.CMD_MoveToPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_position()->::PBMessage::Position3D::MergeFrom(from.position());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_direction()->::PBMessage::Position3D::MergeFrom(from.direction());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_destination()->::PBMessage::Position3D::MergeFrom(from.destination());
    }
    if (cached_has_bits & 0x00000008u) {
      roleid_ = from.roleid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CMD_MoveToPoint::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.CMD_MoveToPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CMD_MoveToPoint::CopyFrom(const CMD_MoveToPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.CMD_MoveToPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CMD_MoveToPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  if (has_position()) {
    if (!this->position_->IsInitialized()) return false;
  }
  if (has_direction()) {
    if (!this->direction_->IsInitialized()) return false;
  }
  if (has_destination()) {
    if (!this->destination_->IsInitialized()) return false;
  }
  return true;
}

void CMD_MoveToPoint::Swap(CMD_MoveToPoint* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CMD_MoveToPoint::InternalSwap(CMD_MoveToPoint* other) {
  std::swap(position_, other->position_);
  std::swap(direction_, other->direction_);
  std::swap(destination_, other->destination_);
  std::swap(roleid_, other->roleid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CMD_MoveToPoint::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CMD_MoveToPoint

// required int32 roleId = 1;
bool CMD_MoveToPoint::has_roleid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CMD_MoveToPoint::set_has_roleid() {
  _has_bits_[0] |= 0x00000008u;
}
void CMD_MoveToPoint::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000008u;
}
void CMD_MoveToPoint::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
::google::protobuf::int32 CMD_MoveToPoint::roleid() const {
  // @@protoc_insertion_point(field_get:PBMessage.CMD_MoveToPoint.roleId)
  return roleid_;
}
void CMD_MoveToPoint::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.CMD_MoveToPoint.roleId)
}

// required .PBMessage.Position3D position = 2;
bool CMD_MoveToPoint::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CMD_MoveToPoint::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
void CMD_MoveToPoint::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
void CMD_MoveToPoint::clear_position() {
  if (position_ != NULL) position_->::PBMessage::Position3D::Clear();
  clear_has_position();
}
const ::PBMessage::Position3D& CMD_MoveToPoint::position() const {
  // @@protoc_insertion_point(field_get:PBMessage.CMD_MoveToPoint.position)
  return position_ != NULL ? *position_
                         : *::PBMessage::Position3D::internal_default_instance();
}
::PBMessage::Position3D* CMD_MoveToPoint::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.CMD_MoveToPoint.position)
  return position_;
}
::PBMessage::Position3D* CMD_MoveToPoint::release_position() {
  // @@protoc_insertion_point(field_release:PBMessage.CMD_MoveToPoint.position)
  clear_has_position();
  ::PBMessage::Position3D* temp = position_;
  position_ = NULL;
  return temp;
}
void CMD_MoveToPoint::set_allocated_position(::PBMessage::Position3D* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.CMD_MoveToPoint.position)
}

// required .PBMessage.Position3D direction = 3;
bool CMD_MoveToPoint::has_direction() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CMD_MoveToPoint::set_has_direction() {
  _has_bits_[0] |= 0x00000002u;
}
void CMD_MoveToPoint::clear_has_direction() {
  _has_bits_[0] &= ~0x00000002u;
}
void CMD_MoveToPoint::clear_direction() {
  if (direction_ != NULL) direction_->::PBMessage::Position3D::Clear();
  clear_has_direction();
}
const ::PBMessage::Position3D& CMD_MoveToPoint::direction() const {
  // @@protoc_insertion_point(field_get:PBMessage.CMD_MoveToPoint.direction)
  return direction_ != NULL ? *direction_
                         : *::PBMessage::Position3D::internal_default_instance();
}
::PBMessage::Position3D* CMD_MoveToPoint::mutable_direction() {
  set_has_direction();
  if (direction_ == NULL) {
    direction_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.CMD_MoveToPoint.direction)
  return direction_;
}
::PBMessage::Position3D* CMD_MoveToPoint::release_direction() {
  // @@protoc_insertion_point(field_release:PBMessage.CMD_MoveToPoint.direction)
  clear_has_direction();
  ::PBMessage::Position3D* temp = direction_;
  direction_ = NULL;
  return temp;
}
void CMD_MoveToPoint::set_allocated_direction(::PBMessage::Position3D* direction) {
  delete direction_;
  direction_ = direction;
  if (direction) {
    set_has_direction();
  } else {
    clear_has_direction();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.CMD_MoveToPoint.direction)
}

// required .PBMessage.Position3D destination = 4;
bool CMD_MoveToPoint::has_destination() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CMD_MoveToPoint::set_has_destination() {
  _has_bits_[0] |= 0x00000004u;
}
void CMD_MoveToPoint::clear_has_destination() {
  _has_bits_[0] &= ~0x00000004u;
}
void CMD_MoveToPoint::clear_destination() {
  if (destination_ != NULL) destination_->::PBMessage::Position3D::Clear();
  clear_has_destination();
}
const ::PBMessage::Position3D& CMD_MoveToPoint::destination() const {
  // @@protoc_insertion_point(field_get:PBMessage.CMD_MoveToPoint.destination)
  return destination_ != NULL ? *destination_
                         : *::PBMessage::Position3D::internal_default_instance();
}
::PBMessage::Position3D* CMD_MoveToPoint::mutable_destination() {
  set_has_destination();
  if (destination_ == NULL) {
    destination_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.CMD_MoveToPoint.destination)
  return destination_;
}
::PBMessage::Position3D* CMD_MoveToPoint::release_destination() {
  // @@protoc_insertion_point(field_release:PBMessage.CMD_MoveToPoint.destination)
  clear_has_destination();
  ::PBMessage::Position3D* temp = destination_;
  destination_ = NULL;
  return temp;
}
void CMD_MoveToPoint::set_allocated_destination(::PBMessage::Position3D* destination) {
  delete destination_;
  destination_ = destination;
  if (destination) {
    set_has_destination();
  } else {
    clear_has_destination();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.CMD_MoveToPoint.destination)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Disconnect::kRoleIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Disconnect::Disconnect()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.Disconnect)
}
Disconnect::Disconnect(const Disconnect& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roleid_ = from.roleid_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.Disconnect)
}

void Disconnect::SharedCtor() {
  _cached_size_ = 0;
  roleid_ = 0;
}

Disconnect::~Disconnect() {
  // @@protoc_insertion_point(destructor:PBMessage.Disconnect)
  SharedDtor();
}

void Disconnect::SharedDtor() {
}

void Disconnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Disconnect::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Disconnect& Disconnect::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

Disconnect* Disconnect::New(::google::protobuf::Arena* arena) const {
  Disconnect* n = new Disconnect;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Disconnect::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.Disconnect)
  roleid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Disconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.Disconnect)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 roleId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.Disconnect)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.Disconnect)
  return false;
#undef DO_
}

void Disconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roleid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.Disconnect)
}

::google::protobuf::uint8* Disconnect::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.Disconnect)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 roleId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roleid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.Disconnect)
  return target;
}

size_t Disconnect::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.Disconnect)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 roleId = 1;
  if (has_roleid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roleid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Disconnect::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  const Disconnect* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Disconnect>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.Disconnect)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.Disconnect)
    MergeFrom(*source);
  }
}

void Disconnect::MergeFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.Disconnect)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_roleid()) {
    set_roleid(from.roleid());
  }
}

void Disconnect::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Disconnect::CopyFrom(const Disconnect& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.Disconnect)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Disconnect::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Disconnect::Swap(Disconnect* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Disconnect::InternalSwap(Disconnect* other) {
  std::swap(roleid_, other->roleid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Disconnect::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Disconnect

// required int32 roleId = 1;
bool Disconnect::has_roleid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Disconnect::set_has_roleid() {
  _has_bits_[0] |= 0x00000001u;
}
void Disconnect::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000001u;
}
void Disconnect::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
::google::protobuf::int32 Disconnect::roleid() const {
  // @@protoc_insertion_point(field_get:PBMessage.Disconnect.roleId)
  return roleid_;
}
void Disconnect::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.Disconnect.roleId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int KeepAliveMsg::kCurSceneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

KeepAliveMsg::KeepAliveMsg()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.KeepAliveMsg)
}
KeepAliveMsg::KeepAliveMsg(const KeepAliveMsg& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  curscene_ = from.curscene_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.KeepAliveMsg)
}

void KeepAliveMsg::SharedCtor() {
  _cached_size_ = 0;
  curscene_ = 0;
}

KeepAliveMsg::~KeepAliveMsg() {
  // @@protoc_insertion_point(destructor:PBMessage.KeepAliveMsg)
  SharedDtor();
}

void KeepAliveMsg::SharedDtor() {
}

void KeepAliveMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* KeepAliveMsg::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const KeepAliveMsg& KeepAliveMsg::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

KeepAliveMsg* KeepAliveMsg::New(::google::protobuf::Arena* arena) const {
  KeepAliveMsg* n = new KeepAliveMsg;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void KeepAliveMsg::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.KeepAliveMsg)
  curscene_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool KeepAliveMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.KeepAliveMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBMessage.CurScene curScene = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::CurScene_IsValid(value)) {
            set_curscene(static_cast< ::PBMessage::CurScene >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.KeepAliveMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.KeepAliveMsg)
  return false;
#undef DO_
}

void KeepAliveMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.KeepAliveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CurScene curScene = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->curscene(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.KeepAliveMsg)
}

::google::protobuf::uint8* KeepAliveMsg::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.KeepAliveMsg)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CurScene curScene = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->curscene(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.KeepAliveMsg)
  return target;
}

size_t KeepAliveMsg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.KeepAliveMsg)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .PBMessage.CurScene curScene = 1;
  if (has_curscene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->curscene());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void KeepAliveMsg::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.KeepAliveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  const KeepAliveMsg* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const KeepAliveMsg>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.KeepAliveMsg)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.KeepAliveMsg)
    MergeFrom(*source);
  }
}

void KeepAliveMsg::MergeFrom(const KeepAliveMsg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.KeepAliveMsg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_curscene()) {
    set_curscene(from.curscene());
  }
}

void KeepAliveMsg::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.KeepAliveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void KeepAliveMsg::CopyFrom(const KeepAliveMsg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.KeepAliveMsg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool KeepAliveMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void KeepAliveMsg::Swap(KeepAliveMsg* other) {
  if (other == this) return;
  InternalSwap(other);
}
void KeepAliveMsg::InternalSwap(KeepAliveMsg* other) {
  std::swap(curscene_, other->curscene_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata KeepAliveMsg::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// KeepAliveMsg

// required .PBMessage.CurScene curScene = 1;
bool KeepAliveMsg::has_curscene() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void KeepAliveMsg::set_has_curscene() {
  _has_bits_[0] |= 0x00000001u;
}
void KeepAliveMsg::clear_has_curscene() {
  _has_bits_[0] &= ~0x00000001u;
}
void KeepAliveMsg::clear_curscene() {
  curscene_ = 0;
  clear_has_curscene();
}
::PBMessage::CurScene KeepAliveMsg::curscene() const {
  // @@protoc_insertion_point(field_get:PBMessage.KeepAliveMsg.curScene)
  return static_cast< ::PBMessage::CurScene >(curscene_);
}
void KeepAliveMsg::set_curscene(::PBMessage::CurScene value) {
  assert(::PBMessage::CurScene_IsValid(value));
  set_has_curscene();
  curscene_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.KeepAliveMsg.curScene)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginRequest::kUserNameFieldNumber;
const int LoginRequest::kPassWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginRequest::LoginRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.LoginRequest)
}
LoginRequest::LoginRequest(const LoginRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:PBMessage.LoginRequest)
}

void LoginRequest::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:PBMessage.LoginRequest)
  SharedDtor();
}

void LoginRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginRequest::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginRequest& LoginRequest::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

LoginRequest* LoginRequest::New(::google::protobuf::Arena* arena) const {
  LoginRequest* n = new LoginRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.LoginRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.LoginRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.LoginRequest.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string passWord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.LoginRequest.passWord");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.LoginRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.LoginRequest)
  return false;
#undef DO_
}

void LoginRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.LoginRequest.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string passWord = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.LoginRequest.passWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.LoginRequest)
}

::google::protobuf::uint8* LoginRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.LoginRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.LoginRequest.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string passWord = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.LoginRequest.passWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.LoginRequest)
  return target;
}

size_t LoginRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.LoginRequest)
  size_t total_size = 0;

  if (has_username()) {
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_password()) {
    // required string passWord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t LoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.LoginRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string passWord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.LoginRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.LoginRequest)
    MergeFrom(*source);
  }
}

void LoginRequest::MergeFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.LoginRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void LoginRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void LoginRequest::Swap(LoginRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginRequest::InternalSwap(LoginRequest* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginRequest

// required string userName = 1;
bool LoginRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& LoginRequest::username() const {
  // @@protoc_insertion_point(field_get:PBMessage.LoginRequest.userName)
  return username_.GetNoArena();
}
void LoginRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.LoginRequest.userName)
}
#if LANG_CXX11
void LoginRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.LoginRequest.userName)
}
#endif
void LoginRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.LoginRequest.userName)
}
void LoginRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.LoginRequest.userName)
}
::std::string* LoginRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:PBMessage.LoginRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_username() {
  // @@protoc_insertion_point(field_release:PBMessage.LoginRequest.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.LoginRequest.userName)
}

// required string passWord = 2;
bool LoginRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& LoginRequest::password() const {
  // @@protoc_insertion_point(field_get:PBMessage.LoginRequest.passWord)
  return password_.GetNoArena();
}
void LoginRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.LoginRequest.passWord)
}
#if LANG_CXX11
void LoginRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.LoginRequest.passWord)
}
#endif
void LoginRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.LoginRequest.passWord)
}
void LoginRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.LoginRequest.passWord)
}
::std::string* LoginRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:PBMessage.LoginRequest.passWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginRequest::release_password() {
  // @@protoc_insertion_point(field_release:PBMessage.LoginRequest.passWord)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.LoginRequest.passWord)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LoginReturn::kSessionIDFieldNumber;
const int LoginReturn::kReturnTypeFieldNumber;
const int LoginReturn::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LoginReturn::LoginReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.LoginReturn)
}
LoginReturn::LoginReturn(const LoginReturn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      playerinfo_(from.playerinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  returntype_ = from.returntype_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.LoginReturn)
}

void LoginReturn::SharedCtor() {
  _cached_size_ = 0;
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  returntype_ = 0;
}

LoginReturn::~LoginReturn() {
  // @@protoc_insertion_point(destructor:PBMessage.LoginReturn)
  SharedDtor();
}

void LoginReturn::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LoginReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LoginReturn::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LoginReturn& LoginReturn::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

LoginReturn* LoginReturn::New(::google::protobuf::Arena* arena) const {
  LoginReturn* n = new LoginReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LoginReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.LoginReturn)
  playerinfo_.Clear();
  if (has_sessionid()) {
    GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sessionid_.UnsafeRawStringPointer())->clear();
  }
  returntype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LoginReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.LoginReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.LoginReturn.sessionID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.LoginReturnType returnType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::LoginReturnType_IsValid(value)) {
            set_returntype(static_cast< ::PBMessage::LoginReturnType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBMessage.PlayerInfo playerInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.LoginReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.LoginReturn)
  return false;
#undef DO_
}

void LoginReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.LoginReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.LoginReturn.sessionID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // required .PBMessage.LoginReturnType returnType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->returntype(), output);
  }

  // repeated .PBMessage.PlayerInfo playerInfo = 3;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->playerinfo(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.LoginReturn)
}

::google::protobuf::uint8* LoginReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.LoginReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.LoginReturn.sessionID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // required .PBMessage.LoginReturnType returnType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->returntype(), target);
  }

  // repeated .PBMessage.PlayerInfo playerInfo = 3;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->playerinfo(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.LoginReturn)
  return target;
}

size_t LoginReturn::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.LoginReturn)
  size_t total_size = 0;

  if (has_sessionid()) {
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  if (has_returntype()) {
    // required .PBMessage.LoginReturnType returnType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->returntype());
  }

  return total_size;
}
size_t LoginReturn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.LoginReturn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());

    // required .PBMessage.LoginReturnType returnType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->returntype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .PBMessage.PlayerInfo playerInfo = 3;
  {
    unsigned int count = this->playerinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LoginReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.LoginReturn)
  GOOGLE_DCHECK_NE(&from, this);
  const LoginReturn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LoginReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.LoginReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.LoginReturn)
    MergeFrom(*source);
  }
}

void LoginReturn::MergeFrom(const LoginReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.LoginReturn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerinfo_.MergeFrom(from.playerinfo_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      returntype_ = from.returntype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LoginReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.LoginReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LoginReturn::CopyFrom(const LoginReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.LoginReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LoginReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->playerinfo())) return false;
  return true;
}

void LoginReturn::Swap(LoginReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LoginReturn::InternalSwap(LoginReturn* other) {
  playerinfo_.InternalSwap(&other->playerinfo_);
  sessionid_.Swap(&other->sessionid_);
  std::swap(returntype_, other->returntype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LoginReturn::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LoginReturn

// required string sessionID = 1;
bool LoginReturn::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LoginReturn::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
void LoginReturn::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
void LoginReturn::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& LoginReturn::sessionid() const {
  // @@protoc_insertion_point(field_get:PBMessage.LoginReturn.sessionID)
  return sessionid_.GetNoArena();
}
void LoginReturn::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.LoginReturn.sessionID)
}
#if LANG_CXX11
void LoginReturn::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.LoginReturn.sessionID)
}
#endif
void LoginReturn::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.LoginReturn.sessionID)
}
void LoginReturn::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.LoginReturn.sessionID)
}
::std::string* LoginReturn::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:PBMessage.LoginReturn.sessionID)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LoginReturn::release_sessionid() {
  // @@protoc_insertion_point(field_release:PBMessage.LoginReturn.sessionID)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LoginReturn::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.LoginReturn.sessionID)
}

// required .PBMessage.LoginReturnType returnType = 2;
bool LoginReturn::has_returntype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LoginReturn::set_has_returntype() {
  _has_bits_[0] |= 0x00000002u;
}
void LoginReturn::clear_has_returntype() {
  _has_bits_[0] &= ~0x00000002u;
}
void LoginReturn::clear_returntype() {
  returntype_ = 0;
  clear_has_returntype();
}
::PBMessage::LoginReturnType LoginReturn::returntype() const {
  // @@protoc_insertion_point(field_get:PBMessage.LoginReturn.returnType)
  return static_cast< ::PBMessage::LoginReturnType >(returntype_);
}
void LoginReturn::set_returntype(::PBMessage::LoginReturnType value) {
  assert(::PBMessage::LoginReturnType_IsValid(value));
  set_has_returntype();
  returntype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.LoginReturn.returnType)
}

// repeated .PBMessage.PlayerInfo playerInfo = 3;
int LoginReturn::playerinfo_size() const {
  return playerinfo_.size();
}
void LoginReturn::clear_playerinfo() {
  playerinfo_.Clear();
}
const ::PBMessage::PlayerInfo& LoginReturn::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.LoginReturn.playerInfo)
  return playerinfo_.Get(index);
}
::PBMessage::PlayerInfo* LoginReturn::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.LoginReturn.playerInfo)
  return playerinfo_.Mutable(index);
}
::PBMessage::PlayerInfo* LoginReturn::add_playerinfo() {
  // @@protoc_insertion_point(field_add:PBMessage.LoginReturn.playerInfo)
  return playerinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >*
LoginReturn::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.LoginReturn.playerInfo)
  return &playerinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >&
LoginReturn::playerinfo() const {
  // @@protoc_insertion_point(field_list:PBMessage.LoginReturn.playerInfo)
  return playerinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterRequest::kUserNameFieldNumber;
const int RegisterRequest::kPassWordFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterRequest::RegisterRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.RegisterRequest)
}
RegisterRequest::RegisterRequest(const RegisterRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_username()) {
    username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_password()) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  // @@protoc_insertion_point(copy_constructor:PBMessage.RegisterRequest)
}

void RegisterRequest::SharedCtor() {
  _cached_size_ = 0;
  username_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

RegisterRequest::~RegisterRequest() {
  // @@protoc_insertion_point(destructor:PBMessage.RegisterRequest)
  SharedDtor();
}

void RegisterRequest::SharedDtor() {
  username_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RegisterRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterRequest::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterRequest& RegisterRequest::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

RegisterRequest* RegisterRequest::New(::google::protobuf::Arena* arena) const {
  RegisterRequest* n = new RegisterRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.RegisterRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_username()) {
      GOOGLE_DCHECK(!username_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*username_.UnsafeRawStringPointer())->clear();
    }
    if (has_password()) {
      GOOGLE_DCHECK(!password_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*password_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.RegisterRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string userName = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_username()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->username().data(), this->username().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.RegisterRequest.userName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string passWord = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_password()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->password().data(), this->password().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.RegisterRequest.passWord");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.RegisterRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.RegisterRequest)
  return false;
#undef DO_
}

void RegisterRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.RegisterRequest.userName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->username(), output);
  }

  // required string passWord = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.RegisterRequest.passWord");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->password(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.RegisterRequest)
}

::google::protobuf::uint8* RegisterRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.RegisterRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string userName = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->username().data(), this->username().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.RegisterRequest.userName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->username(), target);
  }

  // required string passWord = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->password().data(), this->password().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.RegisterRequest.passWord");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->password(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.RegisterRequest)
  return target;
}

size_t RegisterRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.RegisterRequest)
  size_t total_size = 0;

  if (has_username()) {
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());
  }

  if (has_password()) {
    // required string passWord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());
  }

  return total_size;
}
size_t RegisterRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.RegisterRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string userName = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->username());

    // required string passWord = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->password());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.RegisterRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.RegisterRequest)
    MergeFrom(*source);
  }
}

void RegisterRequest::MergeFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.RegisterRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_username();
      username_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.username_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_password();
      password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
    }
  }
}

void RegisterRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterRequest::CopyFrom(const RegisterRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.RegisterRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void RegisterRequest::Swap(RegisterRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterRequest::InternalSwap(RegisterRequest* other) {
  username_.Swap(&other->username_);
  password_.Swap(&other->password_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterRequest::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterRequest

// required string userName = 1;
bool RegisterRequest::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterRequest::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterRequest::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterRequest::clear_username() {
  username_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_username();
}
const ::std::string& RegisterRequest::username() const {
  // @@protoc_insertion_point(field_get:PBMessage.RegisterRequest.userName)
  return username_.GetNoArena();
}
void RegisterRequest::set_username(const ::std::string& value) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.RegisterRequest.userName)
}
#if LANG_CXX11
void RegisterRequest::set_username(::std::string&& value) {
  set_has_username();
  username_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.RegisterRequest.userName)
}
#endif
void RegisterRequest::set_username(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.RegisterRequest.userName)
}
void RegisterRequest::set_username(const char* value, size_t size) {
  set_has_username();
  username_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.RegisterRequest.userName)
}
::std::string* RegisterRequest::mutable_username() {
  set_has_username();
  // @@protoc_insertion_point(field_mutable:PBMessage.RegisterRequest.userName)
  return username_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterRequest::release_username() {
  // @@protoc_insertion_point(field_release:PBMessage.RegisterRequest.userName)
  clear_has_username();
  return username_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterRequest::set_allocated_username(::std::string* username) {
  if (username != NULL) {
    set_has_username();
  } else {
    clear_has_username();
  }
  username_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), username);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.RegisterRequest.userName)
}

// required string passWord = 2;
bool RegisterRequest::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RegisterRequest::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
void RegisterRequest::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
void RegisterRequest::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_password();
}
const ::std::string& RegisterRequest::password() const {
  // @@protoc_insertion_point(field_get:PBMessage.RegisterRequest.passWord)
  return password_.GetNoArena();
}
void RegisterRequest::set_password(const ::std::string& value) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.RegisterRequest.passWord)
}
#if LANG_CXX11
void RegisterRequest::set_password(::std::string&& value) {
  set_has_password();
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.RegisterRequest.passWord)
}
#endif
void RegisterRequest::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.RegisterRequest.passWord)
}
void RegisterRequest::set_password(const char* value, size_t size) {
  set_has_password();
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.RegisterRequest.passWord)
}
::std::string* RegisterRequest::mutable_password() {
  set_has_password();
  // @@protoc_insertion_point(field_mutable:PBMessage.RegisterRequest.passWord)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RegisterRequest::release_password() {
  // @@protoc_insertion_point(field_release:PBMessage.RegisterRequest.passWord)
  clear_has_password();
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RegisterRequest::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    set_has_password();
  } else {
    clear_has_password();
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.RegisterRequest.passWord)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RegisterReturn::kReturnTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RegisterReturn::RegisterReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.RegisterReturn)
}
RegisterReturn::RegisterReturn(const RegisterReturn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  returntype_ = from.returntype_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.RegisterReturn)
}

void RegisterReturn::SharedCtor() {
  _cached_size_ = 0;
  returntype_ = 0;
}

RegisterReturn::~RegisterReturn() {
  // @@protoc_insertion_point(destructor:PBMessage.RegisterReturn)
  SharedDtor();
}

void RegisterReturn::SharedDtor() {
}

void RegisterReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RegisterReturn::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RegisterReturn& RegisterReturn::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

RegisterReturn* RegisterReturn::New(::google::protobuf::Arena* arena) const {
  RegisterReturn* n = new RegisterReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RegisterReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.RegisterReturn)
  returntype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RegisterReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.RegisterReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBMessage.RegisterReturnType returnType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::RegisterReturnType_IsValid(value)) {
            set_returntype(static_cast< ::PBMessage::RegisterReturnType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.RegisterReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.RegisterReturn)
  return false;
#undef DO_
}

void RegisterReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.RegisterReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.RegisterReturnType returnType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->returntype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.RegisterReturn)
}

::google::protobuf::uint8* RegisterReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.RegisterReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.RegisterReturnType returnType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->returntype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.RegisterReturn)
  return target;
}

size_t RegisterReturn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.RegisterReturn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .PBMessage.RegisterReturnType returnType = 1;
  if (has_returntype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->returntype());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RegisterReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.RegisterReturn)
  GOOGLE_DCHECK_NE(&from, this);
  const RegisterReturn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RegisterReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.RegisterReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.RegisterReturn)
    MergeFrom(*source);
  }
}

void RegisterReturn::MergeFrom(const RegisterReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.RegisterReturn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_returntype()) {
    set_returntype(from.returntype());
  }
}

void RegisterReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.RegisterReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RegisterReturn::CopyFrom(const RegisterReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.RegisterReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RegisterReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void RegisterReturn::Swap(RegisterReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RegisterReturn::InternalSwap(RegisterReturn* other) {
  std::swap(returntype_, other->returntype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RegisterReturn::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RegisterReturn

// required .PBMessage.RegisterReturnType returnType = 1;
bool RegisterReturn::has_returntype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RegisterReturn::set_has_returntype() {
  _has_bits_[0] |= 0x00000001u;
}
void RegisterReturn::clear_has_returntype() {
  _has_bits_[0] &= ~0x00000001u;
}
void RegisterReturn::clear_returntype() {
  returntype_ = 0;
  clear_has_returntype();
}
::PBMessage::RegisterReturnType RegisterReturn::returntype() const {
  // @@protoc_insertion_point(field_get:PBMessage.RegisterReturn.returnType)
  return static_cast< ::PBMessage::RegisterReturnType >(returntype_);
}
void RegisterReturn::set_returntype(::PBMessage::RegisterReturnType value) {
  assert(::PBMessage::RegisterReturnType_IsValid(value));
  set_has_returntype();
  returntype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.RegisterReturn.returnType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoleRequest::kSessionIDFieldNumber;
const int CreateRoleRequest::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoleRequest::CreateRoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.CreateRoleRequest)
}
CreateRoleRequest::CreateRoleRequest(const CreateRoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.has_playerinfo()) {
    playerinfo_ = new ::PBMessage::PlayerInfo(*from.playerinfo_);
  } else {
    playerinfo_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:PBMessage.CreateRoleRequest)
}

void CreateRoleRequest::SharedCtor() {
  _cached_size_ = 0;
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerinfo_ = NULL;
}

CreateRoleRequest::~CreateRoleRequest() {
  // @@protoc_insertion_point(destructor:PBMessage.CreateRoleRequest)
  SharedDtor();
}

void CreateRoleRequest::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete playerinfo_;
  }
}

void CreateRoleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoleRequest::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoleRequest& CreateRoleRequest::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

CreateRoleRequest* CreateRoleRequest::New(::google::protobuf::Arena* arena) const {
  CreateRoleRequest* n = new CreateRoleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.CreateRoleRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_sessionid()) {
      GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionid_.UnsafeRawStringPointer())->clear();
    }
    if (has_playerinfo()) {
      GOOGLE_DCHECK(playerinfo_ != NULL);
      playerinfo_->::PBMessage::PlayerInfo::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.CreateRoleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.CreateRoleRequest.sessionID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.PlayerInfo playerInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.CreateRoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.CreateRoleRequest)
  return false;
#undef DO_
}

void CreateRoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.CreateRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.CreateRoleRequest.sessionID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // required .PBMessage.PlayerInfo playerInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->playerinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.CreateRoleRequest)
}

::google::protobuf::uint8* CreateRoleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.CreateRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.CreateRoleRequest.sessionID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // required .PBMessage.PlayerInfo playerInfo = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->playerinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.CreateRoleRequest)
  return target;
}

size_t CreateRoleRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.CreateRoleRequest)
  size_t total_size = 0;

  if (has_sessionid()) {
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  if (has_playerinfo()) {
    // required .PBMessage.PlayerInfo playerInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playerinfo_);
  }

  return total_size;
}
size_t CreateRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.CreateRoleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());

    // required .PBMessage.PlayerInfo playerInfo = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playerinfo_);

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.CreateRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.CreateRoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.CreateRoleRequest)
    MergeFrom(*source);
  }
}

void CreateRoleRequest::MergeFrom(const CreateRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.CreateRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_playerinfo()->::PBMessage::PlayerInfo::MergeFrom(from.playerinfo());
    }
  }
}

void CreateRoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.CreateRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleRequest::CopyFrom(const CreateRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.CreateRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (has_playerinfo()) {
    if (!this->playerinfo_->IsInitialized()) return false;
  }
  return true;
}

void CreateRoleRequest::Swap(CreateRoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoleRequest::InternalSwap(CreateRoleRequest* other) {
  sessionid_.Swap(&other->sessionid_);
  std::swap(playerinfo_, other->playerinfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoleRequest::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoleRequest

// required string sessionID = 1;
bool CreateRoleRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateRoleRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateRoleRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateRoleRequest::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& CreateRoleRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:PBMessage.CreateRoleRequest.sessionID)
  return sessionid_.GetNoArena();
}
void CreateRoleRequest::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.CreateRoleRequest.sessionID)
}
#if LANG_CXX11
void CreateRoleRequest::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.CreateRoleRequest.sessionID)
}
#endif
void CreateRoleRequest::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.CreateRoleRequest.sessionID)
}
void CreateRoleRequest::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.CreateRoleRequest.sessionID)
}
::std::string* CreateRoleRequest::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:PBMessage.CreateRoleRequest.sessionID)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CreateRoleRequest::release_sessionid() {
  // @@protoc_insertion_point(field_release:PBMessage.CreateRoleRequest.sessionID)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CreateRoleRequest::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.CreateRoleRequest.sessionID)
}

// required .PBMessage.PlayerInfo playerInfo = 2;
bool CreateRoleRequest::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CreateRoleRequest::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void CreateRoleRequest::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void CreateRoleRequest::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::PBMessage::PlayerInfo::Clear();
  clear_has_playerinfo();
}
const ::PBMessage::PlayerInfo& CreateRoleRequest::playerinfo() const {
  // @@protoc_insertion_point(field_get:PBMessage.CreateRoleRequest.playerInfo)
  return playerinfo_ != NULL ? *playerinfo_
                         : *::PBMessage::PlayerInfo::internal_default_instance();
}
::PBMessage::PlayerInfo* CreateRoleRequest::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::PBMessage::PlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.CreateRoleRequest.playerInfo)
  return playerinfo_;
}
::PBMessage::PlayerInfo* CreateRoleRequest::release_playerinfo() {
  // @@protoc_insertion_point(field_release:PBMessage.CreateRoleRequest.playerInfo)
  clear_has_playerinfo();
  ::PBMessage::PlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
void CreateRoleRequest::set_allocated_playerinfo(::PBMessage::PlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    set_has_playerinfo();
  } else {
    clear_has_playerinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.CreateRoleRequest.playerInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CreateRoleReturn::kReturnTypeFieldNumber;
const int CreateRoleReturn::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CreateRoleReturn::CreateRoleReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.CreateRoleReturn)
}
CreateRoleReturn::CreateRoleReturn(const CreateRoleReturn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      playerinfo_(from.playerinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  returntype_ = from.returntype_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.CreateRoleReturn)
}

void CreateRoleReturn::SharedCtor() {
  _cached_size_ = 0;
  returntype_ = 0;
}

CreateRoleReturn::~CreateRoleReturn() {
  // @@protoc_insertion_point(destructor:PBMessage.CreateRoleReturn)
  SharedDtor();
}

void CreateRoleReturn::SharedDtor() {
}

void CreateRoleReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CreateRoleReturn::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CreateRoleReturn& CreateRoleReturn::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

CreateRoleReturn* CreateRoleReturn::New(::google::protobuf::Arena* arena) const {
  CreateRoleReturn* n = new CreateRoleReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CreateRoleReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.CreateRoleReturn)
  playerinfo_.Clear();
  returntype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CreateRoleReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.CreateRoleReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBMessage.CreateRoleReturnType returnType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::CreateRoleReturnType_IsValid(value)) {
            set_returntype(static_cast< ::PBMessage::CreateRoleReturnType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBMessage.PlayerInfo playerInfo = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.CreateRoleReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.CreateRoleReturn)
  return false;
#undef DO_
}

void CreateRoleReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.CreateRoleReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CreateRoleReturnType returnType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->returntype(), output);
  }

  // repeated .PBMessage.PlayerInfo playerInfo = 2;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->playerinfo(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.CreateRoleReturn)
}

::google::protobuf::uint8* CreateRoleReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.CreateRoleReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CreateRoleReturnType returnType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->returntype(), target);
  }

  // repeated .PBMessage.PlayerInfo playerInfo = 2;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->playerinfo(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.CreateRoleReturn)
  return target;
}

size_t CreateRoleReturn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.CreateRoleReturn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .PBMessage.CreateRoleReturnType returnType = 1;
  if (has_returntype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->returntype());
  }
  // repeated .PBMessage.PlayerInfo playerInfo = 2;
  {
    unsigned int count = this->playerinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerinfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CreateRoleReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.CreateRoleReturn)
  GOOGLE_DCHECK_NE(&from, this);
  const CreateRoleReturn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CreateRoleReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.CreateRoleReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.CreateRoleReturn)
    MergeFrom(*source);
  }
}

void CreateRoleReturn::MergeFrom(const CreateRoleReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.CreateRoleReturn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerinfo_.MergeFrom(from.playerinfo_);
  if (from.has_returntype()) {
    set_returntype(from.returntype());
  }
}

void CreateRoleReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.CreateRoleReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CreateRoleReturn::CopyFrom(const CreateRoleReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.CreateRoleReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateRoleReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->playerinfo())) return false;
  return true;
}

void CreateRoleReturn::Swap(CreateRoleReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CreateRoleReturn::InternalSwap(CreateRoleReturn* other) {
  playerinfo_.InternalSwap(&other->playerinfo_);
  std::swap(returntype_, other->returntype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CreateRoleReturn::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CreateRoleReturn

// required .PBMessage.CreateRoleReturnType returnType = 1;
bool CreateRoleReturn::has_returntype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CreateRoleReturn::set_has_returntype() {
  _has_bits_[0] |= 0x00000001u;
}
void CreateRoleReturn::clear_has_returntype() {
  _has_bits_[0] &= ~0x00000001u;
}
void CreateRoleReturn::clear_returntype() {
  returntype_ = 0;
  clear_has_returntype();
}
::PBMessage::CreateRoleReturnType CreateRoleReturn::returntype() const {
  // @@protoc_insertion_point(field_get:PBMessage.CreateRoleReturn.returnType)
  return static_cast< ::PBMessage::CreateRoleReturnType >(returntype_);
}
void CreateRoleReturn::set_returntype(::PBMessage::CreateRoleReturnType value) {
  assert(::PBMessage::CreateRoleReturnType_IsValid(value));
  set_has_returntype();
  returntype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.CreateRoleReturn.returnType)
}

// repeated .PBMessage.PlayerInfo playerInfo = 2;
int CreateRoleReturn::playerinfo_size() const {
  return playerinfo_.size();
}
void CreateRoleReturn::clear_playerinfo() {
  playerinfo_.Clear();
}
const ::PBMessage::PlayerInfo& CreateRoleReturn::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.CreateRoleReturn.playerInfo)
  return playerinfo_.Get(index);
}
::PBMessage::PlayerInfo* CreateRoleReturn::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.CreateRoleReturn.playerInfo)
  return playerinfo_.Mutable(index);
}
::PBMessage::PlayerInfo* CreateRoleReturn::add_playerinfo() {
  // @@protoc_insertion_point(field_add:PBMessage.CreateRoleReturn.playerInfo)
  return playerinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >*
CreateRoleReturn::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.CreateRoleReturn.playerInfo)
  return &playerinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >&
CreateRoleReturn::playerinfo() const {
  // @@protoc_insertion_point(field_list:PBMessage.CreateRoleReturn.playerInfo)
  return playerinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectRoleRequest::kSessionIDFieldNumber;
const int SelectRoleRequest::kRoleTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectRoleRequest::SelectRoleRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.SelectRoleRequest)
}
SelectRoleRequest::SelectRoleRequest(const SelectRoleRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  roletype_ = from.roletype_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.SelectRoleRequest)
}

void SelectRoleRequest::SharedCtor() {
  _cached_size_ = 0;
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roletype_ = 0;
}

SelectRoleRequest::~SelectRoleRequest() {
  // @@protoc_insertion_point(destructor:PBMessage.SelectRoleRequest)
  SharedDtor();
}

void SelectRoleRequest::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void SelectRoleRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectRoleRequest::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectRoleRequest& SelectRoleRequest::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

SelectRoleRequest* SelectRoleRequest::New(::google::protobuf::Arena* arena) const {
  SelectRoleRequest* n = new SelectRoleRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectRoleRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.SelectRoleRequest)
  if (has_sessionid()) {
    GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*sessionid_.UnsafeRawStringPointer())->clear();
  }
  roletype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectRoleRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.SelectRoleRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.SelectRoleRequest.sessionID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 roleType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_roletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.SelectRoleRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.SelectRoleRequest)
  return false;
#undef DO_
}

void SelectRoleRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.SelectRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.SelectRoleRequest.sessionID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // required int32 roleType = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->roletype(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.SelectRoleRequest)
}

::google::protobuf::uint8* SelectRoleRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.SelectRoleRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.SelectRoleRequest.sessionID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // required int32 roleType = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->roletype(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.SelectRoleRequest)
  return target;
}

size_t SelectRoleRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.SelectRoleRequest)
  size_t total_size = 0;

  if (has_sessionid()) {
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  if (has_roletype()) {
    // required int32 roleType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roletype());
  }

  return total_size;
}
size_t SelectRoleRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.SelectRoleRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());

    // required int32 roleType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roletype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectRoleRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.SelectRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectRoleRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectRoleRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.SelectRoleRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.SelectRoleRequest)
    MergeFrom(*source);
  }
}

void SelectRoleRequest::MergeFrom(const SelectRoleRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.SelectRoleRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      roletype_ = from.roletype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void SelectRoleRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.SelectRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectRoleRequest::CopyFrom(const SelectRoleRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.SelectRoleRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectRoleRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void SelectRoleRequest::Swap(SelectRoleRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectRoleRequest::InternalSwap(SelectRoleRequest* other) {
  sessionid_.Swap(&other->sessionid_);
  std::swap(roletype_, other->roletype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectRoleRequest::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectRoleRequest

// required string sessionID = 1;
bool SelectRoleRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelectRoleRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
void SelectRoleRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelectRoleRequest::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& SelectRoleRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:PBMessage.SelectRoleRequest.sessionID)
  return sessionid_.GetNoArena();
}
void SelectRoleRequest::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.SelectRoleRequest.sessionID)
}
#if LANG_CXX11
void SelectRoleRequest::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.SelectRoleRequest.sessionID)
}
#endif
void SelectRoleRequest::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.SelectRoleRequest.sessionID)
}
void SelectRoleRequest::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.SelectRoleRequest.sessionID)
}
::std::string* SelectRoleRequest::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:PBMessage.SelectRoleRequest.sessionID)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* SelectRoleRequest::release_sessionid() {
  // @@protoc_insertion_point(field_release:PBMessage.SelectRoleRequest.sessionID)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void SelectRoleRequest::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.SelectRoleRequest.sessionID)
}

// required int32 roleType = 2;
bool SelectRoleRequest::has_roletype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void SelectRoleRequest::set_has_roletype() {
  _has_bits_[0] |= 0x00000002u;
}
void SelectRoleRequest::clear_has_roletype() {
  _has_bits_[0] &= ~0x00000002u;
}
void SelectRoleRequest::clear_roletype() {
  roletype_ = 0;
  clear_has_roletype();
}
::google::protobuf::int32 SelectRoleRequest::roletype() const {
  // @@protoc_insertion_point(field_get:PBMessage.SelectRoleRequest.roleType)
  return roletype_;
}
void SelectRoleRequest::set_roletype(::google::protobuf::int32 value) {
  set_has_roletype();
  roletype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.SelectRoleRequest.roleType)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int SelectRoleReturn::kUserIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

SelectRoleReturn::SelectRoleReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.SelectRoleReturn)
}
SelectRoleReturn::SelectRoleReturn(const SelectRoleReturn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  userid_ = from.userid_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.SelectRoleReturn)
}

void SelectRoleReturn::SharedCtor() {
  _cached_size_ = 0;
  userid_ = 0;
}

SelectRoleReturn::~SelectRoleReturn() {
  // @@protoc_insertion_point(destructor:PBMessage.SelectRoleReturn)
  SharedDtor();
}

void SelectRoleReturn::SharedDtor() {
}

void SelectRoleReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* SelectRoleReturn::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const SelectRoleReturn& SelectRoleReturn::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

SelectRoleReturn* SelectRoleReturn::New(::google::protobuf::Arena* arena) const {
  SelectRoleReturn* n = new SelectRoleReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void SelectRoleReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.SelectRoleReturn)
  userid_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool SelectRoleReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.SelectRoleReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 userId = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.SelectRoleReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.SelectRoleReturn)
  return false;
#undef DO_
}

void SelectRoleReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.SelectRoleReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->userid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.SelectRoleReturn)
}

::google::protobuf::uint8* SelectRoleReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.SelectRoleReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 userId = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->userid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.SelectRoleReturn)
  return target;
}

size_t SelectRoleReturn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.SelectRoleReturn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 userId = 1;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void SelectRoleReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.SelectRoleReturn)
  GOOGLE_DCHECK_NE(&from, this);
  const SelectRoleReturn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const SelectRoleReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.SelectRoleReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.SelectRoleReturn)
    MergeFrom(*source);
  }
}

void SelectRoleReturn::MergeFrom(const SelectRoleReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.SelectRoleReturn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_userid()) {
    set_userid(from.userid());
  }
}

void SelectRoleReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.SelectRoleReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void SelectRoleReturn::CopyFrom(const SelectRoleReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.SelectRoleReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SelectRoleReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void SelectRoleReturn::Swap(SelectRoleReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void SelectRoleReturn::InternalSwap(SelectRoleReturn* other) {
  std::swap(userid_, other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata SelectRoleReturn::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// SelectRoleReturn

// required int32 userId = 1;
bool SelectRoleReturn::has_userid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void SelectRoleReturn::set_has_userid() {
  _has_bits_[0] |= 0x00000001u;
}
void SelectRoleReturn::clear_has_userid() {
  _has_bits_[0] &= ~0x00000001u;
}
void SelectRoleReturn::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
::google::protobuf::int32 SelectRoleReturn::userid() const {
  // @@protoc_insertion_point(field_get:PBMessage.SelectRoleReturn.userId)
  return userid_;
}
void SelectRoleReturn::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.SelectRoleReturn.userId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HallRequest::kSessionIDFieldNumber;
const int HallRequest::kMsgTypeFieldNumber;
const int HallRequest::kRoomNameFieldNumber;
const int HallRequest::kUserIdFieldNumber;
const int HallRequest::kInviteInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HallRequest::HallRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.HallRequest)
}
HallRequest::HallRequest(const HallRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.has_inviteinfo()) {
    inviteinfo_ = new ::PBMessage::InviteInfo(*from.inviteinfo_);
  } else {
    inviteinfo_ = NULL;
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(userid_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.HallRequest)
}

void HallRequest::SharedCtor() {
  _cached_size_ = 0;
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&inviteinfo_, 0, reinterpret_cast<char*>(&userid_) -
    reinterpret_cast<char*>(&inviteinfo_) + sizeof(userid_));
}

HallRequest::~HallRequest() {
  // @@protoc_insertion_point(destructor:PBMessage.HallRequest)
  SharedDtor();
}

void HallRequest::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete inviteinfo_;
  }
}

void HallRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HallRequest::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HallRequest& HallRequest::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

HallRequest* HallRequest::New(::google::protobuf::Arena* arena) const {
  HallRequest* n = new HallRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HallRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.HallRequest)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_sessionid()) {
      GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionid_.UnsafeRawStringPointer())->clear();
    }
    if (has_roomname()) {
      GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_inviteinfo()) {
      GOOGLE_DCHECK(inviteinfo_ != NULL);
      inviteinfo_->::PBMessage::InviteInfo::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&msgtype_, 0, reinterpret_cast<char*>(&userid_) -
      reinterpret_cast<char*>(&msgtype_) + sizeof(userid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HallRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.HallRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.HallRequest.sessionID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.HallMsgType MsgType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::HallMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::PBMessage::HallMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string roomName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.HallRequest.roomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 userId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_userid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &userid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.InviteInfo inviteInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inviteinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.HallRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.HallRequest)
  return false;
#undef DO_
}

void HallRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.HallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.HallRequest.sessionID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // required .PBMessage.HallMsgType MsgType = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional string roomName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.HallRequest.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->roomname(), output);
  }

  // optional int32 userId = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->userid(), output);
  }

  // optional .PBMessage.InviteInfo inviteInfo = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->inviteinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.HallRequest)
}

::google::protobuf::uint8* HallRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.HallRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.HallRequest.sessionID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // required .PBMessage.HallMsgType MsgType = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional string roomName = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.HallRequest.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomname(), target);
  }

  // optional int32 userId = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->userid(), target);
  }

  // optional .PBMessage.InviteInfo inviteInfo = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->inviteinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.HallRequest)
  return target;
}

size_t HallRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.HallRequest)
  size_t total_size = 0;

  if (has_sessionid()) {
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  if (has_msgtype()) {
    // required .PBMessage.HallMsgType MsgType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  return total_size;
}
size_t HallRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.HallRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000009) ^ 0x00000009) == 0) {  // All required fields are present.
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());

    // required .PBMessage.HallMsgType MsgType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional string roomName = 3;
    if (has_roomname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomname());
    }

    // optional .PBMessage.InviteInfo inviteInfo = 5;
    if (has_inviteinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->inviteinfo_);
    }

  }
  // optional int32 userId = 4;
  if (has_userid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->userid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HallRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.HallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const HallRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HallRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.HallRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.HallRequest)
    MergeFrom(*source);
  }
}

void HallRequest::MergeFrom(const HallRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.HallRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_inviteinfo()->::PBMessage::InviteInfo::MergeFrom(from.inviteinfo());
    }
    if (cached_has_bits & 0x00000008u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      userid_ = from.userid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HallRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.HallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HallRequest::CopyFrom(const HallRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.HallRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HallRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000009) != 0x00000009) return false;
  return true;
}

void HallRequest::Swap(HallRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HallRequest::InternalSwap(HallRequest* other) {
  sessionid_.Swap(&other->sessionid_);
  roomname_.Swap(&other->roomname_);
  std::swap(inviteinfo_, other->inviteinfo_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(userid_, other->userid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HallRequest::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HallRequest

// required string sessionID = 1;
bool HallRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HallRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
void HallRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
void HallRequest::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& HallRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallRequest.sessionID)
  return sessionid_.GetNoArena();
}
void HallRequest::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.HallRequest.sessionID)
}
#if LANG_CXX11
void HallRequest::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.HallRequest.sessionID)
}
#endif
void HallRequest::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.HallRequest.sessionID)
}
void HallRequest::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.HallRequest.sessionID)
}
::std::string* HallRequest::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:PBMessage.HallRequest.sessionID)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallRequest::release_sessionid() {
  // @@protoc_insertion_point(field_release:PBMessage.HallRequest.sessionID)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallRequest::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.HallRequest.sessionID)
}

// required .PBMessage.HallMsgType MsgType = 2;
bool HallRequest::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HallRequest::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
void HallRequest::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void HallRequest::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::PBMessage::HallMsgType HallRequest::msgtype() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallRequest.MsgType)
  return static_cast< ::PBMessage::HallMsgType >(msgtype_);
}
void HallRequest::set_msgtype(::PBMessage::HallMsgType value) {
  assert(::PBMessage::HallMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.HallRequest.MsgType)
}

// optional string roomName = 3;
bool HallRequest::has_roomname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HallRequest::set_has_roomname() {
  _has_bits_[0] |= 0x00000002u;
}
void HallRequest::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000002u;
}
void HallRequest::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& HallRequest::roomname() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallRequest.roomName)
  return roomname_.GetNoArena();
}
void HallRequest::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.HallRequest.roomName)
}
#if LANG_CXX11
void HallRequest::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.HallRequest.roomName)
}
#endif
void HallRequest::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.HallRequest.roomName)
}
void HallRequest::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.HallRequest.roomName)
}
::std::string* HallRequest::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:PBMessage.HallRequest.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallRequest::release_roomname() {
  // @@protoc_insertion_point(field_release:PBMessage.HallRequest.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallRequest::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.HallRequest.roomName)
}

// optional int32 userId = 4;
bool HallRequest::has_userid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HallRequest::set_has_userid() {
  _has_bits_[0] |= 0x00000010u;
}
void HallRequest::clear_has_userid() {
  _has_bits_[0] &= ~0x00000010u;
}
void HallRequest::clear_userid() {
  userid_ = 0;
  clear_has_userid();
}
::google::protobuf::int32 HallRequest::userid() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallRequest.userId)
  return userid_;
}
void HallRequest::set_userid(::google::protobuf::int32 value) {
  set_has_userid();
  userid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.HallRequest.userId)
}

// optional .PBMessage.InviteInfo inviteInfo = 5;
bool HallRequest::has_inviteinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HallRequest::set_has_inviteinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void HallRequest::clear_has_inviteinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void HallRequest::clear_inviteinfo() {
  if (inviteinfo_ != NULL) inviteinfo_->::PBMessage::InviteInfo::Clear();
  clear_has_inviteinfo();
}
const ::PBMessage::InviteInfo& HallRequest::inviteinfo() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallRequest.inviteInfo)
  return inviteinfo_ != NULL ? *inviteinfo_
                         : *::PBMessage::InviteInfo::internal_default_instance();
}
::PBMessage::InviteInfo* HallRequest::mutable_inviteinfo() {
  set_has_inviteinfo();
  if (inviteinfo_ == NULL) {
    inviteinfo_ = new ::PBMessage::InviteInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.HallRequest.inviteInfo)
  return inviteinfo_;
}
::PBMessage::InviteInfo* HallRequest::release_inviteinfo() {
  // @@protoc_insertion_point(field_release:PBMessage.HallRequest.inviteInfo)
  clear_has_inviteinfo();
  ::PBMessage::InviteInfo* temp = inviteinfo_;
  inviteinfo_ = NULL;
  return temp;
}
void HallRequest::set_allocated_inviteinfo(::PBMessage::InviteInfo* inviteinfo) {
  delete inviteinfo_;
  inviteinfo_ = inviteinfo;
  if (inviteinfo) {
    set_has_inviteinfo();
  } else {
    clear_has_inviteinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.HallRequest.inviteInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HallReturn::kHallInfoFieldNumber;
const int HallReturn::kMsgTypeFieldNumber;
const int HallReturn::kRoomNameFieldNumber;
const int HallReturn::kRoomIDFieldNumber;
const int HallReturn::kFriendListFieldNumber;
const int HallReturn::kInviteInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HallReturn::HallReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.HallReturn)
}
HallReturn::HallReturn(const HallReturn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friendlist_(from.friendlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  if (from.has_hallinfo()) {
    hallinfo_ = new ::PBMessage::HallInfo(*from.hallinfo_);
  } else {
    hallinfo_ = NULL;
  }
  if (from.has_inviteinfo()) {
    inviteinfo_ = new ::PBMessage::InviteInfo(*from.inviteinfo_);
  } else {
    inviteinfo_ = NULL;
  }
  ::memcpy(&msgtype_, &from.msgtype_,
    reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&msgtype_) + sizeof(roomid_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.HallReturn)
}

void HallReturn::SharedCtor() {
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&hallinfo_, 0, reinterpret_cast<char*>(&roomid_) -
    reinterpret_cast<char*>(&hallinfo_) + sizeof(roomid_));
}

HallReturn::~HallReturn() {
  // @@protoc_insertion_point(destructor:PBMessage.HallReturn)
  SharedDtor();
}

void HallReturn::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete hallinfo_;
  }
  if (this != internal_default_instance()) {
    delete inviteinfo_;
  }
}

void HallReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HallReturn::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HallReturn& HallReturn::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

HallReturn* HallReturn::New(::google::protobuf::Arena* arena) const {
  HallReturn* n = new HallReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HallReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.HallReturn)
  friendlist_.Clear();
  if (_has_bits_[0 / 32] & 7u) {
    if (has_roomname()) {
      GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*roomname_.UnsafeRawStringPointer())->clear();
    }
    if (has_hallinfo()) {
      GOOGLE_DCHECK(hallinfo_ != NULL);
      hallinfo_->::PBMessage::HallInfo::Clear();
    }
    if (has_inviteinfo()) {
      GOOGLE_DCHECK(inviteinfo_ != NULL);
      inviteinfo_->::PBMessage::InviteInfo::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 24u) {
    ::memset(&msgtype_, 0, reinterpret_cast<char*>(&roomid_) -
      reinterpret_cast<char*>(&msgtype_) + sizeof(roomid_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HallReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.HallReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBMessage.HallInfo hallInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hallinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.HallMsgType MsgType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::HallMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::PBMessage::HallMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string roomName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.HallReturn.roomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 roomID = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBMessage.PlayerInfo friendList = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friendlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.InviteInfo inviteInfo = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_inviteinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.HallReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.HallReturn)
  return false;
#undef DO_
}

void HallReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.HallReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PBMessage.HallInfo hallInfo = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->hallinfo_, output);
  }

  // optional .PBMessage.HallMsgType MsgType = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional string roomName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.HallReturn.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->roomname(), output);
  }

  // optional int32 roomID = 4;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->roomid(), output);
  }

  // repeated .PBMessage.PlayerInfo friendList = 5;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->friendlist(i), output);
  }

  // optional .PBMessage.InviteInfo inviteInfo = 6;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->inviteinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.HallReturn)
}

::google::protobuf::uint8* HallReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.HallReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .PBMessage.HallInfo hallInfo = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, *this->hallinfo_, deterministic, target);
  }

  // optional .PBMessage.HallMsgType MsgType = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional string roomName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.HallReturn.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->roomname(), target);
  }

  // optional int32 roomID = 4;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->roomid(), target);
  }

  // repeated .PBMessage.PlayerInfo friendList = 5;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->friendlist(i), deterministic, target);
  }

  // optional .PBMessage.InviteInfo inviteInfo = 6;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->inviteinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.HallReturn)
  return target;
}

size_t HallReturn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.HallReturn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PBMessage.PlayerInfo friendList = 5;
  {
    unsigned int count = this->friendlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendlist(i));
    }
  }

  if (_has_bits_[0 / 32] & 31u) {
    // optional string roomName = 3;
    if (has_roomname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->roomname());
    }

    // optional .PBMessage.HallInfo hallInfo = 1;
    if (has_hallinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hallinfo_);
    }

    // optional .PBMessage.InviteInfo inviteInfo = 6;
    if (has_inviteinfo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->inviteinfo_);
    }

    // optional .PBMessage.HallMsgType MsgType = 2;
    if (has_msgtype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
    }

    // optional int32 roomID = 4;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomid());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HallReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.HallReturn)
  GOOGLE_DCHECK_NE(&from, this);
  const HallReturn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HallReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.HallReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.HallReturn)
    MergeFrom(*source);
  }
}

void HallReturn::MergeFrom(const HallReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.HallReturn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendlist_.MergeFrom(from.friendlist_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_hallinfo()->::PBMessage::HallInfo::MergeFrom(from.hallinfo());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_inviteinfo()->::PBMessage::InviteInfo::MergeFrom(from.inviteinfo());
    }
    if (cached_has_bits & 0x00000008u) {
      msgtype_ = from.msgtype_;
    }
    if (cached_has_bits & 0x00000010u) {
      roomid_ = from.roomid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void HallReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.HallReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HallReturn::CopyFrom(const HallReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.HallReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HallReturn::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->friendlist())) return false;
  if (has_hallinfo()) {
    if (!this->hallinfo_->IsInitialized()) return false;
  }
  return true;
}

void HallReturn::Swap(HallReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HallReturn::InternalSwap(HallReturn* other) {
  friendlist_.InternalSwap(&other->friendlist_);
  roomname_.Swap(&other->roomname_);
  std::swap(hallinfo_, other->hallinfo_);
  std::swap(inviteinfo_, other->inviteinfo_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(roomid_, other->roomid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HallReturn::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HallReturn

// optional .PBMessage.HallInfo hallInfo = 1;
bool HallReturn::has_hallinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HallReturn::set_has_hallinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void HallReturn::clear_has_hallinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void HallReturn::clear_hallinfo() {
  if (hallinfo_ != NULL) hallinfo_->::PBMessage::HallInfo::Clear();
  clear_has_hallinfo();
}
const ::PBMessage::HallInfo& HallReturn::hallinfo() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallReturn.hallInfo)
  return hallinfo_ != NULL ? *hallinfo_
                         : *::PBMessage::HallInfo::internal_default_instance();
}
::PBMessage::HallInfo* HallReturn::mutable_hallinfo() {
  set_has_hallinfo();
  if (hallinfo_ == NULL) {
    hallinfo_ = new ::PBMessage::HallInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.HallReturn.hallInfo)
  return hallinfo_;
}
::PBMessage::HallInfo* HallReturn::release_hallinfo() {
  // @@protoc_insertion_point(field_release:PBMessage.HallReturn.hallInfo)
  clear_has_hallinfo();
  ::PBMessage::HallInfo* temp = hallinfo_;
  hallinfo_ = NULL;
  return temp;
}
void HallReturn::set_allocated_hallinfo(::PBMessage::HallInfo* hallinfo) {
  delete hallinfo_;
  hallinfo_ = hallinfo;
  if (hallinfo) {
    set_has_hallinfo();
  } else {
    clear_has_hallinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.HallReturn.hallInfo)
}

// optional .PBMessage.HallMsgType MsgType = 2;
bool HallReturn::has_msgtype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HallReturn::set_has_msgtype() {
  _has_bits_[0] |= 0x00000008u;
}
void HallReturn::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000008u;
}
void HallReturn::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::PBMessage::HallMsgType HallReturn::msgtype() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallReturn.MsgType)
  return static_cast< ::PBMessage::HallMsgType >(msgtype_);
}
void HallReturn::set_msgtype(::PBMessage::HallMsgType value) {
  assert(::PBMessage::HallMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.HallReturn.MsgType)
}

// optional string roomName = 3;
bool HallReturn::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HallReturn::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
void HallReturn::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
void HallReturn::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& HallReturn::roomname() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallReturn.roomName)
  return roomname_.GetNoArena();
}
void HallReturn::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.HallReturn.roomName)
}
#if LANG_CXX11
void HallReturn::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.HallReturn.roomName)
}
#endif
void HallReturn::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.HallReturn.roomName)
}
void HallReturn::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.HallReturn.roomName)
}
::std::string* HallReturn::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:PBMessage.HallReturn.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* HallReturn::release_roomname() {
  // @@protoc_insertion_point(field_release:PBMessage.HallReturn.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void HallReturn::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.HallReturn.roomName)
}

// optional int32 roomID = 4;
bool HallReturn::has_roomid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HallReturn::set_has_roomid() {
  _has_bits_[0] |= 0x00000010u;
}
void HallReturn::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000010u;
}
void HallReturn::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
::google::protobuf::int32 HallReturn::roomid() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallReturn.roomID)
  return roomid_;
}
void HallReturn::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.HallReturn.roomID)
}

// repeated .PBMessage.PlayerInfo friendList = 5;
int HallReturn::friendlist_size() const {
  return friendlist_.size();
}
void HallReturn::clear_friendlist() {
  friendlist_.Clear();
}
const ::PBMessage::PlayerInfo& HallReturn::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.HallReturn.friendList)
  return friendlist_.Get(index);
}
::PBMessage::PlayerInfo* HallReturn::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.HallReturn.friendList)
  return friendlist_.Mutable(index);
}
::PBMessage::PlayerInfo* HallReturn::add_friendlist() {
  // @@protoc_insertion_point(field_add:PBMessage.HallReturn.friendList)
  return friendlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >*
HallReturn::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.HallReturn.friendList)
  return &friendlist_;
}
const ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >&
HallReturn::friendlist() const {
  // @@protoc_insertion_point(field_list:PBMessage.HallReturn.friendList)
  return friendlist_;
}

// optional .PBMessage.InviteInfo inviteInfo = 6;
bool HallReturn::has_inviteinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HallReturn::set_has_inviteinfo() {
  _has_bits_[0] |= 0x00000004u;
}
void HallReturn::clear_has_inviteinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
void HallReturn::clear_inviteinfo() {
  if (inviteinfo_ != NULL) inviteinfo_->::PBMessage::InviteInfo::Clear();
  clear_has_inviteinfo();
}
const ::PBMessage::InviteInfo& HallReturn::inviteinfo() const {
  // @@protoc_insertion_point(field_get:PBMessage.HallReturn.inviteInfo)
  return inviteinfo_ != NULL ? *inviteinfo_
                         : *::PBMessage::InviteInfo::internal_default_instance();
}
::PBMessage::InviteInfo* HallReturn::mutable_inviteinfo() {
  set_has_inviteinfo();
  if (inviteinfo_ == NULL) {
    inviteinfo_ = new ::PBMessage::InviteInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.HallReturn.inviteInfo)
  return inviteinfo_;
}
::PBMessage::InviteInfo* HallReturn::release_inviteinfo() {
  // @@protoc_insertion_point(field_release:PBMessage.HallReturn.inviteInfo)
  clear_has_inviteinfo();
  ::PBMessage::InviteInfo* temp = inviteinfo_;
  inviteinfo_ = NULL;
  return temp;
}
void HallReturn::set_allocated_inviteinfo(::PBMessage::InviteInfo* inviteinfo) {
  delete inviteinfo_;
  inviteinfo_ = inviteinfo;
  if (inviteinfo) {
    set_has_inviteinfo();
  } else {
    clear_has_inviteinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.HallReturn.inviteInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMainRequest::kSessionIDFieldNumber;
const int GameMainRequest::kMsgTypeFieldNumber;
const int GameMainRequest::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMainRequest::GameMainRequest()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.GameMainRequest)
}
GameMainRequest::GameMainRequest(const GameMainRequest& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_sessionid()) {
    sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
  }
  if (from.has_playerinfo()) {
    playerinfo_ = new ::PBMessage::PlayerInfo(*from.playerinfo_);
  } else {
    playerinfo_ = NULL;
  }
  msgtype_ = from.msgtype_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.GameMainRequest)
}

void GameMainRequest::SharedCtor() {
  _cached_size_ = 0;
  sessionid_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerinfo_, 0, reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&playerinfo_) + sizeof(msgtype_));
}

GameMainRequest::~GameMainRequest() {
  // @@protoc_insertion_point(destructor:PBMessage.GameMainRequest)
  SharedDtor();
}

void GameMainRequest::SharedDtor() {
  sessionid_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete playerinfo_;
  }
}

void GameMainRequest::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMainRequest::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMainRequest& GameMainRequest::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

GameMainRequest* GameMainRequest::New(::google::protobuf::Arena* arena) const {
  GameMainRequest* n = new GameMainRequest;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMainRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.GameMainRequest)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_sessionid()) {
      GOOGLE_DCHECK(!sessionid_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*sessionid_.UnsafeRawStringPointer())->clear();
    }
    if (has_playerinfo()) {
      GOOGLE_DCHECK(playerinfo_ != NULL);
      playerinfo_->::PBMessage::PlayerInfo::Clear();
    }
  }
  msgtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameMainRequest::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.GameMainRequest)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string sessionID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_sessionid()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->sessionid().data(), this->sessionid().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.GameMainRequest.sessionID");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .PBMessage.GameMainMsgType msgType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::GameMainMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::PBMessage::GameMainMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.PlayerInfo playerInfo = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_playerinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.GameMainRequest)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.GameMainRequest)
  return false;
#undef DO_
}

void GameMainRequest::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.GameMainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.GameMainRequest.sessionID");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->sessionid(), output);
  }

  // required .PBMessage.GameMainMsgType msgType = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .PBMessage.PlayerInfo playerInfo = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->playerinfo_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.GameMainRequest)
}

::google::protobuf::uint8* GameMainRequest::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.GameMainRequest)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string sessionID = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->sessionid().data(), this->sessionid().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.GameMainRequest.sessionID");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->sessionid(), target);
  }

  // required .PBMessage.GameMainMsgType msgType = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .PBMessage.PlayerInfo playerInfo = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->playerinfo_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.GameMainRequest)
  return target;
}

size_t GameMainRequest::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.GameMainRequest)
  size_t total_size = 0;

  if (has_sessionid()) {
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());
  }

  if (has_msgtype()) {
    // required .PBMessage.GameMainMsgType msgType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  return total_size;
}
size_t GameMainRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.GameMainRequest)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000005) ^ 0x00000005) == 0) {  // All required fields are present.
    // required string sessionID = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->sessionid());

    // required .PBMessage.GameMainMsgType msgType = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .PBMessage.PlayerInfo playerInfo = 3;
  if (has_playerinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->playerinfo_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMainRequest::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.GameMainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMainRequest* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMainRequest>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.GameMainRequest)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.GameMainRequest)
    MergeFrom(*source);
  }
}

void GameMainRequest::MergeFrom(const GameMainRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.GameMainRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_sessionid();
      sessionid_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sessionid_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_playerinfo()->::PBMessage::PlayerInfo::MergeFrom(from.playerinfo());
    }
    if (cached_has_bits & 0x00000004u) {
      msgtype_ = from.msgtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void GameMainRequest::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.GameMainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMainRequest::CopyFrom(const GameMainRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.GameMainRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMainRequest::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000005) != 0x00000005) return false;
  if (has_playerinfo()) {
    if (!this->playerinfo_->IsInitialized()) return false;
  }
  return true;
}

void GameMainRequest::Swap(GameMainRequest* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMainRequest::InternalSwap(GameMainRequest* other) {
  sessionid_.Swap(&other->sessionid_);
  std::swap(playerinfo_, other->playerinfo_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMainRequest::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameMainRequest

// required string sessionID = 1;
bool GameMainRequest::has_sessionid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameMainRequest::set_has_sessionid() {
  _has_bits_[0] |= 0x00000001u;
}
void GameMainRequest::clear_has_sessionid() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameMainRequest::clear_sessionid() {
  sessionid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_sessionid();
}
const ::std::string& GameMainRequest::sessionid() const {
  // @@protoc_insertion_point(field_get:PBMessage.GameMainRequest.sessionID)
  return sessionid_.GetNoArena();
}
void GameMainRequest::set_sessionid(const ::std::string& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.GameMainRequest.sessionID)
}
#if LANG_CXX11
void GameMainRequest::set_sessionid(::std::string&& value) {
  set_has_sessionid();
  sessionid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.GameMainRequest.sessionID)
}
#endif
void GameMainRequest::set_sessionid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.GameMainRequest.sessionID)
}
void GameMainRequest::set_sessionid(const char* value, size_t size) {
  set_has_sessionid();
  sessionid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.GameMainRequest.sessionID)
}
::std::string* GameMainRequest::mutable_sessionid() {
  set_has_sessionid();
  // @@protoc_insertion_point(field_mutable:PBMessage.GameMainRequest.sessionID)
  return sessionid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* GameMainRequest::release_sessionid() {
  // @@protoc_insertion_point(field_release:PBMessage.GameMainRequest.sessionID)
  clear_has_sessionid();
  return sessionid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void GameMainRequest::set_allocated_sessionid(::std::string* sessionid) {
  if (sessionid != NULL) {
    set_has_sessionid();
  } else {
    clear_has_sessionid();
  }
  sessionid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sessionid);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.GameMainRequest.sessionID)
}

// required .PBMessage.GameMainMsgType msgType = 2;
bool GameMainRequest::has_msgtype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void GameMainRequest::set_has_msgtype() {
  _has_bits_[0] |= 0x00000004u;
}
void GameMainRequest::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000004u;
}
void GameMainRequest::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::PBMessage::GameMainMsgType GameMainRequest::msgtype() const {
  // @@protoc_insertion_point(field_get:PBMessage.GameMainRequest.msgType)
  return static_cast< ::PBMessage::GameMainMsgType >(msgtype_);
}
void GameMainRequest::set_msgtype(::PBMessage::GameMainMsgType value) {
  assert(::PBMessage::GameMainMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.GameMainRequest.msgType)
}

// optional .PBMessage.PlayerInfo playerInfo = 3;
bool GameMainRequest::has_playerinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void GameMainRequest::set_has_playerinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void GameMainRequest::clear_has_playerinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void GameMainRequest::clear_playerinfo() {
  if (playerinfo_ != NULL) playerinfo_->::PBMessage::PlayerInfo::Clear();
  clear_has_playerinfo();
}
const ::PBMessage::PlayerInfo& GameMainRequest::playerinfo() const {
  // @@protoc_insertion_point(field_get:PBMessage.GameMainRequest.playerInfo)
  return playerinfo_ != NULL ? *playerinfo_
                         : *::PBMessage::PlayerInfo::internal_default_instance();
}
::PBMessage::PlayerInfo* GameMainRequest::mutable_playerinfo() {
  set_has_playerinfo();
  if (playerinfo_ == NULL) {
    playerinfo_ = new ::PBMessage::PlayerInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.GameMainRequest.playerInfo)
  return playerinfo_;
}
::PBMessage::PlayerInfo* GameMainRequest::release_playerinfo() {
  // @@protoc_insertion_point(field_release:PBMessage.GameMainRequest.playerInfo)
  clear_has_playerinfo();
  ::PBMessage::PlayerInfo* temp = playerinfo_;
  playerinfo_ = NULL;
  return temp;
}
void GameMainRequest::set_allocated_playerinfo(::PBMessage::PlayerInfo* playerinfo) {
  delete playerinfo_;
  playerinfo_ = playerinfo;
  if (playerinfo) {
    set_has_playerinfo();
  } else {
    clear_has_playerinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.GameMainRequest.playerInfo)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GameMainReturn::kMsgTypeFieldNumber;
const int GameMainReturn::kFriendListFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GameMainReturn::GameMainReturn()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.GameMainReturn)
}
GameMainReturn::GameMainReturn(const GameMainReturn& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      friendlist_(from.friendlist_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgtype_ = from.msgtype_;
  // @@protoc_insertion_point(copy_constructor:PBMessage.GameMainReturn)
}

void GameMainReturn::SharedCtor() {
  _cached_size_ = 0;
  msgtype_ = 0;
}

GameMainReturn::~GameMainReturn() {
  // @@protoc_insertion_point(destructor:PBMessage.GameMainReturn)
  SharedDtor();
}

void GameMainReturn::SharedDtor() {
}

void GameMainReturn::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* GameMainReturn::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GameMainReturn& GameMainReturn::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

GameMainReturn* GameMainReturn::New(::google::protobuf::Arena* arena) const {
  GameMainReturn* n = new GameMainReturn;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void GameMainReturn::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.GameMainReturn)
  friendlist_.Clear();
  msgtype_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool GameMainReturn::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.GameMainReturn)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBMessage.GameMainMsgType msgType = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::GameMainMsgType_IsValid(value)) {
            set_msgtype(static_cast< ::PBMessage::GameMainMsgType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBMessage.PlayerInfo friendList = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_friendlist()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.GameMainReturn)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.GameMainReturn)
  return false;
#undef DO_
}

void GameMainReturn::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.GameMainReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.GameMainMsgType msgType = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->msgtype(), output);
  }

  // repeated .PBMessage.PlayerInfo friendList = 2;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->friendlist(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.GameMainReturn)
}

::google::protobuf::uint8* GameMainReturn::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.GameMainReturn)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.GameMainMsgType msgType = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->msgtype(), target);
  }

  // repeated .PBMessage.PlayerInfo friendList = 2;
  for (unsigned int i = 0, n = this->friendlist_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->friendlist(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.GameMainReturn)
  return target;
}

size_t GameMainReturn::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.GameMainReturn)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .PBMessage.GameMainMsgType msgType = 1;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }
  // repeated .PBMessage.PlayerInfo friendList = 2;
  {
    unsigned int count = this->friendlist_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->friendlist(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void GameMainReturn::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.GameMainReturn)
  GOOGLE_DCHECK_NE(&from, this);
  const GameMainReturn* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GameMainReturn>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.GameMainReturn)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.GameMainReturn)
    MergeFrom(*source);
  }
}

void GameMainReturn::MergeFrom(const GameMainReturn& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.GameMainReturn)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendlist_.MergeFrom(from.friendlist_);
  if (from.has_msgtype()) {
    set_msgtype(from.msgtype());
  }
}

void GameMainReturn::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.GameMainReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GameMainReturn::CopyFrom(const GameMainReturn& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.GameMainReturn)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GameMainReturn::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->friendlist())) return false;
  return true;
}

void GameMainReturn::Swap(GameMainReturn* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GameMainReturn::InternalSwap(GameMainReturn* other) {
  friendlist_.InternalSwap(&other->friendlist_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata GameMainReturn::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// GameMainReturn

// required .PBMessage.GameMainMsgType msgType = 1;
bool GameMainReturn::has_msgtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void GameMainReturn::set_has_msgtype() {
  _has_bits_[0] |= 0x00000001u;
}
void GameMainReturn::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00000001u;
}
void GameMainReturn::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::PBMessage::GameMainMsgType GameMainReturn::msgtype() const {
  // @@protoc_insertion_point(field_get:PBMessage.GameMainReturn.msgType)
  return static_cast< ::PBMessage::GameMainMsgType >(msgtype_);
}
void GameMainReturn::set_msgtype(::PBMessage::GameMainMsgType value) {
  assert(::PBMessage::GameMainMsgType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.GameMainReturn.msgType)
}

// repeated .PBMessage.PlayerInfo friendList = 2;
int GameMainReturn::friendlist_size() const {
  return friendlist_.size();
}
void GameMainReturn::clear_friendlist() {
  friendlist_.Clear();
}
const ::PBMessage::PlayerInfo& GameMainReturn::friendlist(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.GameMainReturn.friendList)
  return friendlist_.Get(index);
}
::PBMessage::PlayerInfo* GameMainReturn::mutable_friendlist(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.GameMainReturn.friendList)
  return friendlist_.Mutable(index);
}
::PBMessage::PlayerInfo* GameMainReturn::add_friendlist() {
  // @@protoc_insertion_point(field_add:PBMessage.GameMainReturn.friendList)
  return friendlist_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >*
GameMainReturn::mutable_friendlist() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.GameMainReturn.friendList)
  return &friendlist_;
}
const ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >&
GameMainReturn::friendlist() const {
  // @@protoc_insertion_point(field_list:PBMessage.GameMainReturn.friendList)
  return friendlist_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Packet::kCurSceneFieldNumber;
const int Packet::kMsgTypeFieldNumber;
const int Packet::kLoginRequestFieldNumber;
const int Packet::kLoginReturnFieldNumber;
const int Packet::kRegisterRequestFieldNumber;
const int Packet::kRegisterReturnFieldNumber;
const int Packet::kCreateRoleRequestFieldNumber;
const int Packet::kCreateRoleReturnFieldNumber;
const int Packet::kSelectRoleRequestFieldNumber;
const int Packet::kSelectRoleReturnFieldNumber;
const int Packet::kHallRequestFieldNumber;
const int Packet::kHallReturnFieldNumber;
const int Packet::kGameMainRequestFieldNumber;
const int Packet::kGameMainReturnFieldNumber;
const int Packet::kKeepAliveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Packet::Packet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.Packet)
}
Packet::Packet(const Packet& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_loginrequest()) {
    loginrequest_ = new ::PBMessage::LoginRequest(*from.loginrequest_);
  } else {
    loginrequest_ = NULL;
  }
  if (from.has_loginreturn()) {
    loginreturn_ = new ::PBMessage::LoginReturn(*from.loginreturn_);
  } else {
    loginreturn_ = NULL;
  }
  if (from.has_registerrequest()) {
    registerrequest_ = new ::PBMessage::RegisterRequest(*from.registerrequest_);
  } else {
    registerrequest_ = NULL;
  }
  if (from.has_registerreturn()) {
    registerreturn_ = new ::PBMessage::RegisterReturn(*from.registerreturn_);
  } else {
    registerreturn_ = NULL;
  }
  if (from.has_createrolerequest()) {
    createrolerequest_ = new ::PBMessage::CreateRoleRequest(*from.createrolerequest_);
  } else {
    createrolerequest_ = NULL;
  }
  if (from.has_createrolereturn()) {
    createrolereturn_ = new ::PBMessage::CreateRoleReturn(*from.createrolereturn_);
  } else {
    createrolereturn_ = NULL;
  }
  if (from.has_selectrolerequest()) {
    selectrolerequest_ = new ::PBMessage::SelectRoleRequest(*from.selectrolerequest_);
  } else {
    selectrolerequest_ = NULL;
  }
  if (from.has_selectrolereturn()) {
    selectrolereturn_ = new ::PBMessage::SelectRoleReturn(*from.selectrolereturn_);
  } else {
    selectrolereturn_ = NULL;
  }
  if (from.has_hallrequest()) {
    hallrequest_ = new ::PBMessage::HallRequest(*from.hallrequest_);
  } else {
    hallrequest_ = NULL;
  }
  if (from.has_hallreturn()) {
    hallreturn_ = new ::PBMessage::HallReturn(*from.hallreturn_);
  } else {
    hallreturn_ = NULL;
  }
  if (from.has_gamemainrequest()) {
    gamemainrequest_ = new ::PBMessage::GameMainRequest(*from.gamemainrequest_);
  } else {
    gamemainrequest_ = NULL;
  }
  if (from.has_gamemainreturn()) {
    gamemainreturn_ = new ::PBMessage::GameMainReturn(*from.gamemainreturn_);
  } else {
    gamemainreturn_ = NULL;
  }
  if (from.has_keepalive()) {
    keepalive_ = new ::PBMessage::KeepAliveMsg(*from.keepalive_);
  } else {
    keepalive_ = NULL;
  }
  ::memcpy(&curscene_, &from.curscene_,
    reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&curscene_) + sizeof(msgtype_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.Packet)
}

void Packet::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&loginrequest_, 0, reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&loginrequest_) + sizeof(msgtype_));
}

Packet::~Packet() {
  // @@protoc_insertion_point(destructor:PBMessage.Packet)
  SharedDtor();
}

void Packet::SharedDtor() {
  if (this != internal_default_instance()) {
    delete loginrequest_;
  }
  if (this != internal_default_instance()) {
    delete loginreturn_;
  }
  if (this != internal_default_instance()) {
    delete registerrequest_;
  }
  if (this != internal_default_instance()) {
    delete registerreturn_;
  }
  if (this != internal_default_instance()) {
    delete createrolerequest_;
  }
  if (this != internal_default_instance()) {
    delete createrolereturn_;
  }
  if (this != internal_default_instance()) {
    delete selectrolerequest_;
  }
  if (this != internal_default_instance()) {
    delete selectrolereturn_;
  }
  if (this != internal_default_instance()) {
    delete hallrequest_;
  }
  if (this != internal_default_instance()) {
    delete hallreturn_;
  }
  if (this != internal_default_instance()) {
    delete gamemainrequest_;
  }
  if (this != internal_default_instance()) {
    delete gamemainreturn_;
  }
  if (this != internal_default_instance()) {
    delete keepalive_;
  }
}

void Packet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Packet::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Packet& Packet::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

Packet* Packet::New(::google::protobuf::Arena* arena) const {
  Packet* n = new Packet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Packet::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.Packet)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_loginrequest()) {
      GOOGLE_DCHECK(loginrequest_ != NULL);
      loginrequest_->::PBMessage::LoginRequest::Clear();
    }
    if (has_loginreturn()) {
      GOOGLE_DCHECK(loginreturn_ != NULL);
      loginreturn_->::PBMessage::LoginReturn::Clear();
    }
    if (has_registerrequest()) {
      GOOGLE_DCHECK(registerrequest_ != NULL);
      registerrequest_->::PBMessage::RegisterRequest::Clear();
    }
    if (has_registerreturn()) {
      GOOGLE_DCHECK(registerreturn_ != NULL);
      registerreturn_->::PBMessage::RegisterReturn::Clear();
    }
    if (has_createrolerequest()) {
      GOOGLE_DCHECK(createrolerequest_ != NULL);
      createrolerequest_->::PBMessage::CreateRoleRequest::Clear();
    }
    if (has_createrolereturn()) {
      GOOGLE_DCHECK(createrolereturn_ != NULL);
      createrolereturn_->::PBMessage::CreateRoleReturn::Clear();
    }
    if (has_selectrolerequest()) {
      GOOGLE_DCHECK(selectrolerequest_ != NULL);
      selectrolerequest_->::PBMessage::SelectRoleRequest::Clear();
    }
    if (has_selectrolereturn()) {
      GOOGLE_DCHECK(selectrolereturn_ != NULL);
      selectrolereturn_->::PBMessage::SelectRoleReturn::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    if (has_hallrequest()) {
      GOOGLE_DCHECK(hallrequest_ != NULL);
      hallrequest_->::PBMessage::HallRequest::Clear();
    }
    if (has_hallreturn()) {
      GOOGLE_DCHECK(hallreturn_ != NULL);
      hallreturn_->::PBMessage::HallReturn::Clear();
    }
    if (has_gamemainrequest()) {
      GOOGLE_DCHECK(gamemainrequest_ != NULL);
      gamemainrequest_->::PBMessage::GameMainRequest::Clear();
    }
    if (has_gamemainreturn()) {
      GOOGLE_DCHECK(gamemainreturn_ != NULL);
      gamemainreturn_->::PBMessage::GameMainReturn::Clear();
    }
    if (has_keepalive()) {
      GOOGLE_DCHECK(keepalive_ != NULL);
      keepalive_->::PBMessage::KeepAliveMsg::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 24576u) {
    ::memset(&curscene_, 0, reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&curscene_) + sizeof(msgtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Packet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.Packet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBMessage.CurScene curScene = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::CurScene_IsValid(value)) {
            set_curscene(static_cast< ::PBMessage::CurScene >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.MessageType msgType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::MessageType_IsValid(value)) {
            set_msgtype(static_cast< ::PBMessage::MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.LoginRequest loginRequest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.LoginReturn loginReturn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.RegisterRequest registerRequest = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registerrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.RegisterReturn registerReturn = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registerreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createrolerequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createrolereturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selectrolerequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selectrolereturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.HallRequest hallRequest = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hallrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.HallReturn hallReturn = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hallreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.GameMainRequest gameMainRequest = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamemainrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.GameMainReturn gameMainReturn = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamemainreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.KeepAliveMsg keepAlive = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_keepalive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.Packet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.Packet)
  return false;
#undef DO_
}

void Packet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CurScene curScene = 1;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->curscene(), output);
  }

  // optional .PBMessage.MessageType msgType = 2;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .PBMessage.LoginRequest loginRequest = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->loginrequest_, output);
  }

  // optional .PBMessage.LoginReturn loginReturn = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->loginreturn_, output);
  }

  // optional .PBMessage.RegisterRequest registerRequest = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->registerrequest_, output);
  }

  // optional .PBMessage.RegisterReturn registerReturn = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->registerreturn_, output);
  }

  // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->createrolerequest_, output);
  }

  // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->createrolereturn_, output);
  }

  // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->selectrolerequest_, output);
  }

  // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->selectrolereturn_, output);
  }

  // optional .PBMessage.HallRequest hallRequest = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->hallrequest_, output);
  }

  // optional .PBMessage.HallReturn hallReturn = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->hallreturn_, output);
  }

  // optional .PBMessage.GameMainRequest gameMainRequest = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->gamemainrequest_, output);
  }

  // optional .PBMessage.GameMainReturn gameMainReturn = 14;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->gamemainreturn_, output);
  }

  // optional .PBMessage.KeepAliveMsg keepAlive = 15;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->keepalive_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.Packet)
}

::google::protobuf::uint8* Packet::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.Packet)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CurScene curScene = 1;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->curscene(), target);
  }

  // optional .PBMessage.MessageType msgType = 2;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .PBMessage.LoginRequest loginRequest = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->loginrequest_, deterministic, target);
  }

  // optional .PBMessage.LoginReturn loginReturn = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->loginreturn_, deterministic, target);
  }

  // optional .PBMessage.RegisterRequest registerRequest = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->registerrequest_, deterministic, target);
  }

  // optional .PBMessage.RegisterReturn registerReturn = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->registerreturn_, deterministic, target);
  }

  // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->createrolerequest_, deterministic, target);
  }

  // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->createrolereturn_, deterministic, target);
  }

  // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->selectrolerequest_, deterministic, target);
  }

  // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->selectrolereturn_, deterministic, target);
  }

  // optional .PBMessage.HallRequest hallRequest = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->hallrequest_, deterministic, target);
  }

  // optional .PBMessage.HallReturn hallReturn = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->hallreturn_, deterministic, target);
  }

  // optional .PBMessage.GameMainRequest gameMainRequest = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->gamemainrequest_, deterministic, target);
  }

  // optional .PBMessage.GameMainReturn gameMainReturn = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->gamemainreturn_, deterministic, target);
  }

  // optional .PBMessage.KeepAliveMsg keepAlive = 15;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->keepalive_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.Packet)
  return target;
}

size_t Packet::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.Packet)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .PBMessage.CurScene curScene = 1;
  if (has_curscene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->curscene());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .PBMessage.LoginRequest loginRequest = 3;
    if (has_loginrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->loginrequest_);
    }

    // optional .PBMessage.LoginReturn loginReturn = 4;
    if (has_loginreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->loginreturn_);
    }

    // optional .PBMessage.RegisterRequest registerRequest = 5;
    if (has_registerrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->registerrequest_);
    }

    // optional .PBMessage.RegisterReturn registerReturn = 6;
    if (has_registerreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->registerreturn_);
    }

    // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
    if (has_createrolerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createrolerequest_);
    }

    // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
    if (has_createrolereturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createrolereturn_);
    }

    // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
    if (has_selectrolerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->selectrolerequest_);
    }

    // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
    if (has_selectrolereturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->selectrolereturn_);
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional .PBMessage.HallRequest hallRequest = 11;
    if (has_hallrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hallrequest_);
    }

    // optional .PBMessage.HallReturn hallReturn = 12;
    if (has_hallreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hallreturn_);
    }

    // optional .PBMessage.GameMainRequest gameMainRequest = 13;
    if (has_gamemainrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamemainrequest_);
    }

    // optional .PBMessage.GameMainReturn gameMainReturn = 14;
    if (has_gamemainreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamemainreturn_);
    }

    // optional .PBMessage.KeepAliveMsg keepAlive = 15;
    if (has_keepalive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->keepalive_);
    }

  }
  // optional .PBMessage.MessageType msgType = 2;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Packet::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  const Packet* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Packet>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.Packet)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.Packet)
    MergeFrom(*source);
  }
}

void Packet::MergeFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.Packet)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_loginrequest()->::PBMessage::LoginRequest::MergeFrom(from.loginrequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_loginreturn()->::PBMessage::LoginReturn::MergeFrom(from.loginreturn());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_registerrequest()->::PBMessage::RegisterRequest::MergeFrom(from.registerrequest());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_registerreturn()->::PBMessage::RegisterReturn::MergeFrom(from.registerreturn());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_createrolerequest()->::PBMessage::CreateRoleRequest::MergeFrom(from.createrolerequest());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_createrolereturn()->::PBMessage::CreateRoleReturn::MergeFrom(from.createrolereturn());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_selectrolerequest()->::PBMessage::SelectRoleRequest::MergeFrom(from.selectrolerequest());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_selectrolereturn()->::PBMessage::SelectRoleReturn::MergeFrom(from.selectrolereturn());
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_hallrequest()->::PBMessage::HallRequest::MergeFrom(from.hallrequest());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_hallreturn()->::PBMessage::HallReturn::MergeFrom(from.hallreturn());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_gamemainrequest()->::PBMessage::GameMainRequest::MergeFrom(from.gamemainrequest());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_gamemainreturn()->::PBMessage::GameMainReturn::MergeFrom(from.gamemainreturn());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_keepalive()->::PBMessage::KeepAliveMsg::MergeFrom(from.keepalive());
    }
    if (cached_has_bits & 0x00002000u) {
      curscene_ = from.curscene_;
    }
    if (cached_has_bits & 0x00004000u) {
      msgtype_ = from.msgtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Packet::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Packet::CopyFrom(const Packet& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.Packet)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Packet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00002000) != 0x00002000) return false;
  if (has_loginrequest()) {
    if (!this->loginrequest_->IsInitialized()) return false;
  }
  if (has_loginreturn()) {
    if (!this->loginreturn_->IsInitialized()) return false;
  }
  if (has_registerrequest()) {
    if (!this->registerrequest_->IsInitialized()) return false;
  }
  if (has_registerreturn()) {
    if (!this->registerreturn_->IsInitialized()) return false;
  }
  if (has_createrolerequest()) {
    if (!this->createrolerequest_->IsInitialized()) return false;
  }
  if (has_createrolereturn()) {
    if (!this->createrolereturn_->IsInitialized()) return false;
  }
  if (has_selectrolerequest()) {
    if (!this->selectrolerequest_->IsInitialized()) return false;
  }
  if (has_selectrolereturn()) {
    if (!this->selectrolereturn_->IsInitialized()) return false;
  }
  if (has_hallrequest()) {
    if (!this->hallrequest_->IsInitialized()) return false;
  }
  if (has_hallreturn()) {
    if (!this->hallreturn_->IsInitialized()) return false;
  }
  if (has_gamemainrequest()) {
    if (!this->gamemainrequest_->IsInitialized()) return false;
  }
  if (has_gamemainreturn()) {
    if (!this->gamemainreturn_->IsInitialized()) return false;
  }
  if (has_keepalive()) {
    if (!this->keepalive_->IsInitialized()) return false;
  }
  return true;
}

void Packet::Swap(Packet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Packet::InternalSwap(Packet* other) {
  std::swap(loginrequest_, other->loginrequest_);
  std::swap(loginreturn_, other->loginreturn_);
  std::swap(registerrequest_, other->registerrequest_);
  std::swap(registerreturn_, other->registerreturn_);
  std::swap(createrolerequest_, other->createrolerequest_);
  std::swap(createrolereturn_, other->createrolereturn_);
  std::swap(selectrolerequest_, other->selectrolerequest_);
  std::swap(selectrolereturn_, other->selectrolereturn_);
  std::swap(hallrequest_, other->hallrequest_);
  std::swap(hallreturn_, other->hallreturn_);
  std::swap(gamemainrequest_, other->gamemainrequest_);
  std::swap(gamemainreturn_, other->gamemainreturn_);
  std::swap(keepalive_, other->keepalive_);
  std::swap(curscene_, other->curscene_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Packet::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Packet

// required .PBMessage.CurScene curScene = 1;
bool Packet::has_curscene() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void Packet::set_has_curscene() {
  _has_bits_[0] |= 0x00002000u;
}
void Packet::clear_has_curscene() {
  _has_bits_[0] &= ~0x00002000u;
}
void Packet::clear_curscene() {
  curscene_ = 0;
  clear_has_curscene();
}
::PBMessage::CurScene Packet::curscene() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.curScene)
  return static_cast< ::PBMessage::CurScene >(curscene_);
}
void Packet::set_curscene(::PBMessage::CurScene value) {
  assert(::PBMessage::CurScene_IsValid(value));
  set_has_curscene();
  curscene_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.Packet.curScene)
}

// optional .PBMessage.MessageType msgType = 2;
bool Packet::has_msgtype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void Packet::set_has_msgtype() {
  _has_bits_[0] |= 0x00004000u;
}
void Packet::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00004000u;
}
void Packet::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::PBMessage::MessageType Packet::msgtype() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.msgType)
  return static_cast< ::PBMessage::MessageType >(msgtype_);
}
void Packet::set_msgtype(::PBMessage::MessageType value) {
  assert(::PBMessage::MessageType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.Packet.msgType)
}

// optional .PBMessage.LoginRequest loginRequest = 3;
bool Packet::has_loginrequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Packet::set_has_loginrequest() {
  _has_bits_[0] |= 0x00000001u;
}
void Packet::clear_has_loginrequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void Packet::clear_loginrequest() {
  if (loginrequest_ != NULL) loginrequest_->::PBMessage::LoginRequest::Clear();
  clear_has_loginrequest();
}
const ::PBMessage::LoginRequest& Packet::loginrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.loginRequest)
  return loginrequest_ != NULL ? *loginrequest_
                         : *::PBMessage::LoginRequest::internal_default_instance();
}
::PBMessage::LoginRequest* Packet::mutable_loginrequest() {
  set_has_loginrequest();
  if (loginrequest_ == NULL) {
    loginrequest_ = new ::PBMessage::LoginRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.loginRequest)
  return loginrequest_;
}
::PBMessage::LoginRequest* Packet::release_loginrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.loginRequest)
  clear_has_loginrequest();
  ::PBMessage::LoginRequest* temp = loginrequest_;
  loginrequest_ = NULL;
  return temp;
}
void Packet::set_allocated_loginrequest(::PBMessage::LoginRequest* loginrequest) {
  delete loginrequest_;
  loginrequest_ = loginrequest;
  if (loginrequest) {
    set_has_loginrequest();
  } else {
    clear_has_loginrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.loginRequest)
}

// optional .PBMessage.LoginReturn loginReturn = 4;
bool Packet::has_loginreturn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Packet::set_has_loginreturn() {
  _has_bits_[0] |= 0x00000002u;
}
void Packet::clear_has_loginreturn() {
  _has_bits_[0] &= ~0x00000002u;
}
void Packet::clear_loginreturn() {
  if (loginreturn_ != NULL) loginreturn_->::PBMessage::LoginReturn::Clear();
  clear_has_loginreturn();
}
const ::PBMessage::LoginReturn& Packet::loginreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.loginReturn)
  return loginreturn_ != NULL ? *loginreturn_
                         : *::PBMessage::LoginReturn::internal_default_instance();
}
::PBMessage::LoginReturn* Packet::mutable_loginreturn() {
  set_has_loginreturn();
  if (loginreturn_ == NULL) {
    loginreturn_ = new ::PBMessage::LoginReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.loginReturn)
  return loginreturn_;
}
::PBMessage::LoginReturn* Packet::release_loginreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.loginReturn)
  clear_has_loginreturn();
  ::PBMessage::LoginReturn* temp = loginreturn_;
  loginreturn_ = NULL;
  return temp;
}
void Packet::set_allocated_loginreturn(::PBMessage::LoginReturn* loginreturn) {
  delete loginreturn_;
  loginreturn_ = loginreturn;
  if (loginreturn) {
    set_has_loginreturn();
  } else {
    clear_has_loginreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.loginReturn)
}

// optional .PBMessage.RegisterRequest registerRequest = 5;
bool Packet::has_registerrequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Packet::set_has_registerrequest() {
  _has_bits_[0] |= 0x00000004u;
}
void Packet::clear_has_registerrequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void Packet::clear_registerrequest() {
  if (registerrequest_ != NULL) registerrequest_->::PBMessage::RegisterRequest::Clear();
  clear_has_registerrequest();
}
const ::PBMessage::RegisterRequest& Packet::registerrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.registerRequest)
  return registerrequest_ != NULL ? *registerrequest_
                         : *::PBMessage::RegisterRequest::internal_default_instance();
}
::PBMessage::RegisterRequest* Packet::mutable_registerrequest() {
  set_has_registerrequest();
  if (registerrequest_ == NULL) {
    registerrequest_ = new ::PBMessage::RegisterRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.registerRequest)
  return registerrequest_;
}
::PBMessage::RegisterRequest* Packet::release_registerrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.registerRequest)
  clear_has_registerrequest();
  ::PBMessage::RegisterRequest* temp = registerrequest_;
  registerrequest_ = NULL;
  return temp;
}
void Packet::set_allocated_registerrequest(::PBMessage::RegisterRequest* registerrequest) {
  delete registerrequest_;
  registerrequest_ = registerrequest;
  if (registerrequest) {
    set_has_registerrequest();
  } else {
    clear_has_registerrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.registerRequest)
}

// optional .PBMessage.RegisterReturn registerReturn = 6;
bool Packet::has_registerreturn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Packet::set_has_registerreturn() {
  _has_bits_[0] |= 0x00000008u;
}
void Packet::clear_has_registerreturn() {
  _has_bits_[0] &= ~0x00000008u;
}
void Packet::clear_registerreturn() {
  if (registerreturn_ != NULL) registerreturn_->::PBMessage::RegisterReturn::Clear();
  clear_has_registerreturn();
}
const ::PBMessage::RegisterReturn& Packet::registerreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.registerReturn)
  return registerreturn_ != NULL ? *registerreturn_
                         : *::PBMessage::RegisterReturn::internal_default_instance();
}
::PBMessage::RegisterReturn* Packet::mutable_registerreturn() {
  set_has_registerreturn();
  if (registerreturn_ == NULL) {
    registerreturn_ = new ::PBMessage::RegisterReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.registerReturn)
  return registerreturn_;
}
::PBMessage::RegisterReturn* Packet::release_registerreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.registerReturn)
  clear_has_registerreturn();
  ::PBMessage::RegisterReturn* temp = registerreturn_;
  registerreturn_ = NULL;
  return temp;
}
void Packet::set_allocated_registerreturn(::PBMessage::RegisterReturn* registerreturn) {
  delete registerreturn_;
  registerreturn_ = registerreturn;
  if (registerreturn) {
    set_has_registerreturn();
  } else {
    clear_has_registerreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.registerReturn)
}

// optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
bool Packet::has_createrolerequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Packet::set_has_createrolerequest() {
  _has_bits_[0] |= 0x00000010u;
}
void Packet::clear_has_createrolerequest() {
  _has_bits_[0] &= ~0x00000010u;
}
void Packet::clear_createrolerequest() {
  if (createrolerequest_ != NULL) createrolerequest_->::PBMessage::CreateRoleRequest::Clear();
  clear_has_createrolerequest();
}
const ::PBMessage::CreateRoleRequest& Packet::createrolerequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.createRoleRequest)
  return createrolerequest_ != NULL ? *createrolerequest_
                         : *::PBMessage::CreateRoleRequest::internal_default_instance();
}
::PBMessage::CreateRoleRequest* Packet::mutable_createrolerequest() {
  set_has_createrolerequest();
  if (createrolerequest_ == NULL) {
    createrolerequest_ = new ::PBMessage::CreateRoleRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.createRoleRequest)
  return createrolerequest_;
}
::PBMessage::CreateRoleRequest* Packet::release_createrolerequest() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.createRoleRequest)
  clear_has_createrolerequest();
  ::PBMessage::CreateRoleRequest* temp = createrolerequest_;
  createrolerequest_ = NULL;
  return temp;
}
void Packet::set_allocated_createrolerequest(::PBMessage::CreateRoleRequest* createrolerequest) {
  delete createrolerequest_;
  createrolerequest_ = createrolerequest;
  if (createrolerequest) {
    set_has_createrolerequest();
  } else {
    clear_has_createrolerequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.createRoleRequest)
}

// optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
bool Packet::has_createrolereturn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Packet::set_has_createrolereturn() {
  _has_bits_[0] |= 0x00000020u;
}
void Packet::clear_has_createrolereturn() {
  _has_bits_[0] &= ~0x00000020u;
}
void Packet::clear_createrolereturn() {
  if (createrolereturn_ != NULL) createrolereturn_->::PBMessage::CreateRoleReturn::Clear();
  clear_has_createrolereturn();
}
const ::PBMessage::CreateRoleReturn& Packet::createrolereturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.createRoleReturn)
  return createrolereturn_ != NULL ? *createrolereturn_
                         : *::PBMessage::CreateRoleReturn::internal_default_instance();
}
::PBMessage::CreateRoleReturn* Packet::mutable_createrolereturn() {
  set_has_createrolereturn();
  if (createrolereturn_ == NULL) {
    createrolereturn_ = new ::PBMessage::CreateRoleReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.createRoleReturn)
  return createrolereturn_;
}
::PBMessage::CreateRoleReturn* Packet::release_createrolereturn() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.createRoleReturn)
  clear_has_createrolereturn();
  ::PBMessage::CreateRoleReturn* temp = createrolereturn_;
  createrolereturn_ = NULL;
  return temp;
}
void Packet::set_allocated_createrolereturn(::PBMessage::CreateRoleReturn* createrolereturn) {
  delete createrolereturn_;
  createrolereturn_ = createrolereturn;
  if (createrolereturn) {
    set_has_createrolereturn();
  } else {
    clear_has_createrolereturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.createRoleReturn)
}

// optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
bool Packet::has_selectrolerequest() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Packet::set_has_selectrolerequest() {
  _has_bits_[0] |= 0x00000040u;
}
void Packet::clear_has_selectrolerequest() {
  _has_bits_[0] &= ~0x00000040u;
}
void Packet::clear_selectrolerequest() {
  if (selectrolerequest_ != NULL) selectrolerequest_->::PBMessage::SelectRoleRequest::Clear();
  clear_has_selectrolerequest();
}
const ::PBMessage::SelectRoleRequest& Packet::selectrolerequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.selectRoleRequest)
  return selectrolerequest_ != NULL ? *selectrolerequest_
                         : *::PBMessage::SelectRoleRequest::internal_default_instance();
}
::PBMessage::SelectRoleRequest* Packet::mutable_selectrolerequest() {
  set_has_selectrolerequest();
  if (selectrolerequest_ == NULL) {
    selectrolerequest_ = new ::PBMessage::SelectRoleRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.selectRoleRequest)
  return selectrolerequest_;
}
::PBMessage::SelectRoleRequest* Packet::release_selectrolerequest() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.selectRoleRequest)
  clear_has_selectrolerequest();
  ::PBMessage::SelectRoleRequest* temp = selectrolerequest_;
  selectrolerequest_ = NULL;
  return temp;
}
void Packet::set_allocated_selectrolerequest(::PBMessage::SelectRoleRequest* selectrolerequest) {
  delete selectrolerequest_;
  selectrolerequest_ = selectrolerequest;
  if (selectrolerequest) {
    set_has_selectrolerequest();
  } else {
    clear_has_selectrolerequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.selectRoleRequest)
}

// optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
bool Packet::has_selectrolereturn() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Packet::set_has_selectrolereturn() {
  _has_bits_[0] |= 0x00000080u;
}
void Packet::clear_has_selectrolereturn() {
  _has_bits_[0] &= ~0x00000080u;
}
void Packet::clear_selectrolereturn() {
  if (selectrolereturn_ != NULL) selectrolereturn_->::PBMessage::SelectRoleReturn::Clear();
  clear_has_selectrolereturn();
}
const ::PBMessage::SelectRoleReturn& Packet::selectrolereturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.selectRoleReturn)
  return selectrolereturn_ != NULL ? *selectrolereturn_
                         : *::PBMessage::SelectRoleReturn::internal_default_instance();
}
::PBMessage::SelectRoleReturn* Packet::mutable_selectrolereturn() {
  set_has_selectrolereturn();
  if (selectrolereturn_ == NULL) {
    selectrolereturn_ = new ::PBMessage::SelectRoleReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.selectRoleReturn)
  return selectrolereturn_;
}
::PBMessage::SelectRoleReturn* Packet::release_selectrolereturn() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.selectRoleReturn)
  clear_has_selectrolereturn();
  ::PBMessage::SelectRoleReturn* temp = selectrolereturn_;
  selectrolereturn_ = NULL;
  return temp;
}
void Packet::set_allocated_selectrolereturn(::PBMessage::SelectRoleReturn* selectrolereturn) {
  delete selectrolereturn_;
  selectrolereturn_ = selectrolereturn;
  if (selectrolereturn) {
    set_has_selectrolereturn();
  } else {
    clear_has_selectrolereturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.selectRoleReturn)
}

// optional .PBMessage.HallRequest hallRequest = 11;
bool Packet::has_hallrequest() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Packet::set_has_hallrequest() {
  _has_bits_[0] |= 0x00000100u;
}
void Packet::clear_has_hallrequest() {
  _has_bits_[0] &= ~0x00000100u;
}
void Packet::clear_hallrequest() {
  if (hallrequest_ != NULL) hallrequest_->::PBMessage::HallRequest::Clear();
  clear_has_hallrequest();
}
const ::PBMessage::HallRequest& Packet::hallrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.hallRequest)
  return hallrequest_ != NULL ? *hallrequest_
                         : *::PBMessage::HallRequest::internal_default_instance();
}
::PBMessage::HallRequest* Packet::mutable_hallrequest() {
  set_has_hallrequest();
  if (hallrequest_ == NULL) {
    hallrequest_ = new ::PBMessage::HallRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.hallRequest)
  return hallrequest_;
}
::PBMessage::HallRequest* Packet::release_hallrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.hallRequest)
  clear_has_hallrequest();
  ::PBMessage::HallRequest* temp = hallrequest_;
  hallrequest_ = NULL;
  return temp;
}
void Packet::set_allocated_hallrequest(::PBMessage::HallRequest* hallrequest) {
  delete hallrequest_;
  hallrequest_ = hallrequest;
  if (hallrequest) {
    set_has_hallrequest();
  } else {
    clear_has_hallrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.hallRequest)
}

// optional .PBMessage.HallReturn hallReturn = 12;
bool Packet::has_hallreturn() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Packet::set_has_hallreturn() {
  _has_bits_[0] |= 0x00000200u;
}
void Packet::clear_has_hallreturn() {
  _has_bits_[0] &= ~0x00000200u;
}
void Packet::clear_hallreturn() {
  if (hallreturn_ != NULL) hallreturn_->::PBMessage::HallReturn::Clear();
  clear_has_hallreturn();
}
const ::PBMessage::HallReturn& Packet::hallreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.hallReturn)
  return hallreturn_ != NULL ? *hallreturn_
                         : *::PBMessage::HallReturn::internal_default_instance();
}
::PBMessage::HallReturn* Packet::mutable_hallreturn() {
  set_has_hallreturn();
  if (hallreturn_ == NULL) {
    hallreturn_ = new ::PBMessage::HallReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.hallReturn)
  return hallreturn_;
}
::PBMessage::HallReturn* Packet::release_hallreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.hallReturn)
  clear_has_hallreturn();
  ::PBMessage::HallReturn* temp = hallreturn_;
  hallreturn_ = NULL;
  return temp;
}
void Packet::set_allocated_hallreturn(::PBMessage::HallReturn* hallreturn) {
  delete hallreturn_;
  hallreturn_ = hallreturn;
  if (hallreturn) {
    set_has_hallreturn();
  } else {
    clear_has_hallreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.hallReturn)
}

// optional .PBMessage.GameMainRequest gameMainRequest = 13;
bool Packet::has_gamemainrequest() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Packet::set_has_gamemainrequest() {
  _has_bits_[0] |= 0x00000400u;
}
void Packet::clear_has_gamemainrequest() {
  _has_bits_[0] &= ~0x00000400u;
}
void Packet::clear_gamemainrequest() {
  if (gamemainrequest_ != NULL) gamemainrequest_->::PBMessage::GameMainRequest::Clear();
  clear_has_gamemainrequest();
}
const ::PBMessage::GameMainRequest& Packet::gamemainrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.gameMainRequest)
  return gamemainrequest_ != NULL ? *gamemainrequest_
                         : *::PBMessage::GameMainRequest::internal_default_instance();
}
::PBMessage::GameMainRequest* Packet::mutable_gamemainrequest() {
  set_has_gamemainrequest();
  if (gamemainrequest_ == NULL) {
    gamemainrequest_ = new ::PBMessage::GameMainRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.gameMainRequest)
  return gamemainrequest_;
}
::PBMessage::GameMainRequest* Packet::release_gamemainrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.gameMainRequest)
  clear_has_gamemainrequest();
  ::PBMessage::GameMainRequest* temp = gamemainrequest_;
  gamemainrequest_ = NULL;
  return temp;
}
void Packet::set_allocated_gamemainrequest(::PBMessage::GameMainRequest* gamemainrequest) {
  delete gamemainrequest_;
  gamemainrequest_ = gamemainrequest;
  if (gamemainrequest) {
    set_has_gamemainrequest();
  } else {
    clear_has_gamemainrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.gameMainRequest)
}

// optional .PBMessage.GameMainReturn gameMainReturn = 14;
bool Packet::has_gamemainreturn() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Packet::set_has_gamemainreturn() {
  _has_bits_[0] |= 0x00000800u;
}
void Packet::clear_has_gamemainreturn() {
  _has_bits_[0] &= ~0x00000800u;
}
void Packet::clear_gamemainreturn() {
  if (gamemainreturn_ != NULL) gamemainreturn_->::PBMessage::GameMainReturn::Clear();
  clear_has_gamemainreturn();
}
const ::PBMessage::GameMainReturn& Packet::gamemainreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.gameMainReturn)
  return gamemainreturn_ != NULL ? *gamemainreturn_
                         : *::PBMessage::GameMainReturn::internal_default_instance();
}
::PBMessage::GameMainReturn* Packet::mutable_gamemainreturn() {
  set_has_gamemainreturn();
  if (gamemainreturn_ == NULL) {
    gamemainreturn_ = new ::PBMessage::GameMainReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.gameMainReturn)
  return gamemainreturn_;
}
::PBMessage::GameMainReturn* Packet::release_gamemainreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.gameMainReturn)
  clear_has_gamemainreturn();
  ::PBMessage::GameMainReturn* temp = gamemainreturn_;
  gamemainreturn_ = NULL;
  return temp;
}
void Packet::set_allocated_gamemainreturn(::PBMessage::GameMainReturn* gamemainreturn) {
  delete gamemainreturn_;
  gamemainreturn_ = gamemainreturn;
  if (gamemainreturn) {
    set_has_gamemainreturn();
  } else {
    clear_has_gamemainreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.gameMainReturn)
}

// optional .PBMessage.KeepAliveMsg keepAlive = 15;
bool Packet::has_keepalive() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Packet::set_has_keepalive() {
  _has_bits_[0] |= 0x00001000u;
}
void Packet::clear_has_keepalive() {
  _has_bits_[0] &= ~0x00001000u;
}
void Packet::clear_keepalive() {
  if (keepalive_ != NULL) keepalive_->::PBMessage::KeepAliveMsg::Clear();
  clear_has_keepalive();
}
const ::PBMessage::KeepAliveMsg& Packet::keepalive() const {
  // @@protoc_insertion_point(field_get:PBMessage.Packet.keepAlive)
  return keepalive_ != NULL ? *keepalive_
                         : *::PBMessage::KeepAliveMsg::internal_default_instance();
}
::PBMessage::KeepAliveMsg* Packet::mutable_keepalive() {
  set_has_keepalive();
  if (keepalive_ == NULL) {
    keepalive_ = new ::PBMessage::KeepAliveMsg;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.Packet.keepAlive)
  return keepalive_;
}
::PBMessage::KeepAliveMsg* Packet::release_keepalive() {
  // @@protoc_insertion_point(field_release:PBMessage.Packet.keepAlive)
  clear_has_keepalive();
  ::PBMessage::KeepAliveMsg* temp = keepalive_;
  keepalive_ = NULL;
  return temp;
}
void Packet::set_allocated_keepalive(::PBMessage::KeepAliveMsg* keepalive) {
  delete keepalive_;
  keepalive_ = keepalive;
  if (keepalive) {
    set_has_keepalive();
  } else {
    clear_has_keepalive();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Packet.keepAlive)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int UnPacket::kCurSceneFieldNumber;
const int UnPacket::kMsgTypeFieldNumber;
const int UnPacket::kLoginRequestFieldNumber;
const int UnPacket::kLoginReturnFieldNumber;
const int UnPacket::kRegisterRequestFieldNumber;
const int UnPacket::kRegisterReturnFieldNumber;
const int UnPacket::kCreateRoleRequestFieldNumber;
const int UnPacket::kCreateRoleReturnFieldNumber;
const int UnPacket::kSelectRoleRequestFieldNumber;
const int UnPacket::kSelectRoleReturnFieldNumber;
const int UnPacket::kHallRequestFieldNumber;
const int UnPacket::kHallReturnFieldNumber;
const int UnPacket::kGameMainRequestFieldNumber;
const int UnPacket::kGameMainReturnFieldNumber;
const int UnPacket::kKeepAliveFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

UnPacket::UnPacket()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_command_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.UnPacket)
}
UnPacket::UnPacket(const UnPacket& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_loginrequest()) {
    loginrequest_ = new ::PBMessage::LoginRequest(*from.loginrequest_);
  } else {
    loginrequest_ = NULL;
  }
  if (from.has_loginreturn()) {
    loginreturn_ = new ::PBMessage::LoginReturn(*from.loginreturn_);
  } else {
    loginreturn_ = NULL;
  }
  if (from.has_registerrequest()) {
    registerrequest_ = new ::PBMessage::RegisterRequest(*from.registerrequest_);
  } else {
    registerrequest_ = NULL;
  }
  if (from.has_registerreturn()) {
    registerreturn_ = new ::PBMessage::RegisterReturn(*from.registerreturn_);
  } else {
    registerreturn_ = NULL;
  }
  if (from.has_createrolerequest()) {
    createrolerequest_ = new ::PBMessage::CreateRoleRequest(*from.createrolerequest_);
  } else {
    createrolerequest_ = NULL;
  }
  if (from.has_createrolereturn()) {
    createrolereturn_ = new ::PBMessage::CreateRoleReturn(*from.createrolereturn_);
  } else {
    createrolereturn_ = NULL;
  }
  if (from.has_selectrolerequest()) {
    selectrolerequest_ = new ::PBMessage::SelectRoleRequest(*from.selectrolerequest_);
  } else {
    selectrolerequest_ = NULL;
  }
  if (from.has_selectrolereturn()) {
    selectrolereturn_ = new ::PBMessage::SelectRoleReturn(*from.selectrolereturn_);
  } else {
    selectrolereturn_ = NULL;
  }
  if (from.has_hallrequest()) {
    hallrequest_ = new ::PBMessage::HallRequest(*from.hallrequest_);
  } else {
    hallrequest_ = NULL;
  }
  if (from.has_hallreturn()) {
    hallreturn_ = new ::PBMessage::HallReturn(*from.hallreturn_);
  } else {
    hallreturn_ = NULL;
  }
  if (from.has_gamemainrequest()) {
    gamemainrequest_ = new ::PBMessage::GameMainRequest(*from.gamemainrequest_);
  } else {
    gamemainrequest_ = NULL;
  }
  if (from.has_gamemainreturn()) {
    gamemainreturn_ = new ::PBMessage::GameMainReturn(*from.gamemainreturn_);
  } else {
    gamemainreturn_ = NULL;
  }
  if (from.has_keepalive()) {
    keepalive_ = new ::PBMessage::KeepAliveMsg(*from.keepalive_);
  } else {
    keepalive_ = NULL;
  }
  ::memcpy(&curscene_, &from.curscene_,
    reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&curscene_) + sizeof(msgtype_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.UnPacket)
}

void UnPacket::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&loginrequest_, 0, reinterpret_cast<char*>(&msgtype_) -
    reinterpret_cast<char*>(&loginrequest_) + sizeof(msgtype_));
}

UnPacket::~UnPacket() {
  // @@protoc_insertion_point(destructor:PBMessage.UnPacket)
  SharedDtor();
}

void UnPacket::SharedDtor() {
  if (this != internal_default_instance()) {
    delete loginrequest_;
  }
  if (this != internal_default_instance()) {
    delete loginreturn_;
  }
  if (this != internal_default_instance()) {
    delete registerrequest_;
  }
  if (this != internal_default_instance()) {
    delete registerreturn_;
  }
  if (this != internal_default_instance()) {
    delete createrolerequest_;
  }
  if (this != internal_default_instance()) {
    delete createrolereturn_;
  }
  if (this != internal_default_instance()) {
    delete selectrolerequest_;
  }
  if (this != internal_default_instance()) {
    delete selectrolereturn_;
  }
  if (this != internal_default_instance()) {
    delete hallrequest_;
  }
  if (this != internal_default_instance()) {
    delete hallreturn_;
  }
  if (this != internal_default_instance()) {
    delete gamemainrequest_;
  }
  if (this != internal_default_instance()) {
    delete gamemainreturn_;
  }
  if (this != internal_default_instance()) {
    delete keepalive_;
  }
}

void UnPacket::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* UnPacket::descriptor() {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const UnPacket& UnPacket::default_instance() {
  protobuf_command_2etxt::InitDefaults();
  return *internal_default_instance();
}

UnPacket* UnPacket::New(::google::protobuf::Arena* arena) const {
  UnPacket* n = new UnPacket;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void UnPacket::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.UnPacket)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_loginrequest()) {
      GOOGLE_DCHECK(loginrequest_ != NULL);
      loginrequest_->::PBMessage::LoginRequest::Clear();
    }
    if (has_loginreturn()) {
      GOOGLE_DCHECK(loginreturn_ != NULL);
      loginreturn_->::PBMessage::LoginReturn::Clear();
    }
    if (has_registerrequest()) {
      GOOGLE_DCHECK(registerrequest_ != NULL);
      registerrequest_->::PBMessage::RegisterRequest::Clear();
    }
    if (has_registerreturn()) {
      GOOGLE_DCHECK(registerreturn_ != NULL);
      registerreturn_->::PBMessage::RegisterReturn::Clear();
    }
    if (has_createrolerequest()) {
      GOOGLE_DCHECK(createrolerequest_ != NULL);
      createrolerequest_->::PBMessage::CreateRoleRequest::Clear();
    }
    if (has_createrolereturn()) {
      GOOGLE_DCHECK(createrolereturn_ != NULL);
      createrolereturn_->::PBMessage::CreateRoleReturn::Clear();
    }
    if (has_selectrolerequest()) {
      GOOGLE_DCHECK(selectrolerequest_ != NULL);
      selectrolerequest_->::PBMessage::SelectRoleRequest::Clear();
    }
    if (has_selectrolereturn()) {
      GOOGLE_DCHECK(selectrolereturn_ != NULL);
      selectrolereturn_->::PBMessage::SelectRoleReturn::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    if (has_hallrequest()) {
      GOOGLE_DCHECK(hallrequest_ != NULL);
      hallrequest_->::PBMessage::HallRequest::Clear();
    }
    if (has_hallreturn()) {
      GOOGLE_DCHECK(hallreturn_ != NULL);
      hallreturn_->::PBMessage::HallReturn::Clear();
    }
    if (has_gamemainrequest()) {
      GOOGLE_DCHECK(gamemainrequest_ != NULL);
      gamemainrequest_->::PBMessage::GameMainRequest::Clear();
    }
    if (has_gamemainreturn()) {
      GOOGLE_DCHECK(gamemainreturn_ != NULL);
      gamemainreturn_->::PBMessage::GameMainReturn::Clear();
    }
    if (has_keepalive()) {
      GOOGLE_DCHECK(keepalive_ != NULL);
      keepalive_->::PBMessage::KeepAliveMsg::Clear();
    }
  }
  if (_has_bits_[8 / 32] & 24576u) {
    ::memset(&curscene_, 0, reinterpret_cast<char*>(&msgtype_) -
      reinterpret_cast<char*>(&curscene_) + sizeof(msgtype_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool UnPacket::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.UnPacket)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBMessage.CurScene curScene = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::CurScene_IsValid(value)) {
            set_curscene(static_cast< ::PBMessage::CurScene >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.MessageType msgType = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::MessageType_IsValid(value)) {
            set_msgtype(static_cast< ::PBMessage::MessageType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.LoginRequest loginRequest = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.LoginReturn loginReturn = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_loginreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.RegisterRequest registerRequest = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registerrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.RegisterReturn registerReturn = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_registerreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createrolerequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_createrolereturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selectrolerequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_selectrolereturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.HallRequest hallRequest = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hallrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.HallReturn hallReturn = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_hallreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.GameMainRequest gameMainRequest = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamemainrequest()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.GameMainReturn gameMainReturn = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_gamemainreturn()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.KeepAliveMsg keepAlive = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_keepalive()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.UnPacket)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.UnPacket)
  return false;
#undef DO_
}

void UnPacket::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.UnPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CurScene curScene = 1;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->curscene(), output);
  }

  // optional .PBMessage.MessageType msgType = 2;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->msgtype(), output);
  }

  // optional .PBMessage.LoginRequest loginRequest = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->loginrequest_, output);
  }

  // optional .PBMessage.LoginReturn loginReturn = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->loginreturn_, output);
  }

  // optional .PBMessage.RegisterRequest registerRequest = 5;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->registerrequest_, output);
  }

  // optional .PBMessage.RegisterReturn registerReturn = 6;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->registerreturn_, output);
  }

  // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->createrolerequest_, output);
  }

  // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, *this->createrolereturn_, output);
  }

  // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, *this->selectrolerequest_, output);
  }

  // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, *this->selectrolereturn_, output);
  }

  // optional .PBMessage.HallRequest hallRequest = 11;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      11, *this->hallrequest_, output);
  }

  // optional .PBMessage.HallReturn hallReturn = 12;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, *this->hallreturn_, output);
  }

  // optional .PBMessage.GameMainRequest gameMainRequest = 13;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, *this->gamemainrequest_, output);
  }

  // optional .PBMessage.GameMainReturn gameMainReturn = 14;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      14, *this->gamemainreturn_, output);
  }

  // optional .PBMessage.KeepAliveMsg keepAlive = 15;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      15, *this->keepalive_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.UnPacket)
}

::google::protobuf::uint8* UnPacket::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.UnPacket)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .PBMessage.CurScene curScene = 1;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->curscene(), target);
  }

  // optional .PBMessage.MessageType msgType = 2;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->msgtype(), target);
  }

  // optional .PBMessage.LoginRequest loginRequest = 3;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->loginrequest_, deterministic, target);
  }

  // optional .PBMessage.LoginReturn loginReturn = 4;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->loginreturn_, deterministic, target);
  }

  // optional .PBMessage.RegisterRequest registerRequest = 5;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->registerrequest_, deterministic, target);
  }

  // optional .PBMessage.RegisterReturn registerReturn = 6;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->registerreturn_, deterministic, target);
  }

  // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->createrolerequest_, deterministic, target);
  }

  // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        8, *this->createrolereturn_, deterministic, target);
  }

  // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        9, *this->selectrolerequest_, deterministic, target);
  }

  // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, *this->selectrolereturn_, deterministic, target);
  }

  // optional .PBMessage.HallRequest hallRequest = 11;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        11, *this->hallrequest_, deterministic, target);
  }

  // optional .PBMessage.HallReturn hallReturn = 12;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        12, *this->hallreturn_, deterministic, target);
  }

  // optional .PBMessage.GameMainRequest gameMainRequest = 13;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        13, *this->gamemainrequest_, deterministic, target);
  }

  // optional .PBMessage.GameMainReturn gameMainReturn = 14;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        14, *this->gamemainreturn_, deterministic, target);
  }

  // optional .PBMessage.KeepAliveMsg keepAlive = 15;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        15, *this->keepalive_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.UnPacket)
  return target;
}

size_t UnPacket::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.UnPacket)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required .PBMessage.CurScene curScene = 1;
  if (has_curscene()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->curscene());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional .PBMessage.LoginRequest loginRequest = 3;
    if (has_loginrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->loginrequest_);
    }

    // optional .PBMessage.LoginReturn loginReturn = 4;
    if (has_loginreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->loginreturn_);
    }

    // optional .PBMessage.RegisterRequest registerRequest = 5;
    if (has_registerrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->registerrequest_);
    }

    // optional .PBMessage.RegisterReturn registerReturn = 6;
    if (has_registerreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->registerreturn_);
    }

    // optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
    if (has_createrolerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createrolerequest_);
    }

    // optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
    if (has_createrolereturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->createrolereturn_);
    }

    // optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
    if (has_selectrolerequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->selectrolerequest_);
    }

    // optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
    if (has_selectrolereturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->selectrolereturn_);
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional .PBMessage.HallRequest hallRequest = 11;
    if (has_hallrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hallrequest_);
    }

    // optional .PBMessage.HallReturn hallReturn = 12;
    if (has_hallreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->hallreturn_);
    }

    // optional .PBMessage.GameMainRequest gameMainRequest = 13;
    if (has_gamemainrequest()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamemainrequest_);
    }

    // optional .PBMessage.GameMainReturn gameMainReturn = 14;
    if (has_gamemainreturn()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->gamemainreturn_);
    }

    // optional .PBMessage.KeepAliveMsg keepAlive = 15;
    if (has_keepalive()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->keepalive_);
    }

  }
  // optional .PBMessage.MessageType msgType = 2;
  if (has_msgtype()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->msgtype());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void UnPacket::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.UnPacket)
  GOOGLE_DCHECK_NE(&from, this);
  const UnPacket* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const UnPacket>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.UnPacket)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.UnPacket)
    MergeFrom(*source);
  }
}

void UnPacket::MergeFrom(const UnPacket& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.UnPacket)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_loginrequest()->::PBMessage::LoginRequest::MergeFrom(from.loginrequest());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_loginreturn()->::PBMessage::LoginReturn::MergeFrom(from.loginreturn());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_registerrequest()->::PBMessage::RegisterRequest::MergeFrom(from.registerrequest());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_registerreturn()->::PBMessage::RegisterReturn::MergeFrom(from.registerreturn());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_createrolerequest()->::PBMessage::CreateRoleRequest::MergeFrom(from.createrolerequest());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_createrolereturn()->::PBMessage::CreateRoleReturn::MergeFrom(from.createrolereturn());
    }
    if (cached_has_bits & 0x00000040u) {
      mutable_selectrolerequest()->::PBMessage::SelectRoleRequest::MergeFrom(from.selectrolerequest());
    }
    if (cached_has_bits & 0x00000080u) {
      mutable_selectrolereturn()->::PBMessage::SelectRoleReturn::MergeFrom(from.selectrolereturn());
    }
  }
  if (cached_has_bits & 32512u) {
    if (cached_has_bits & 0x00000100u) {
      mutable_hallrequest()->::PBMessage::HallRequest::MergeFrom(from.hallrequest());
    }
    if (cached_has_bits & 0x00000200u) {
      mutable_hallreturn()->::PBMessage::HallReturn::MergeFrom(from.hallreturn());
    }
    if (cached_has_bits & 0x00000400u) {
      mutable_gamemainrequest()->::PBMessage::GameMainRequest::MergeFrom(from.gamemainrequest());
    }
    if (cached_has_bits & 0x00000800u) {
      mutable_gamemainreturn()->::PBMessage::GameMainReturn::MergeFrom(from.gamemainreturn());
    }
    if (cached_has_bits & 0x00001000u) {
      mutable_keepalive()->::PBMessage::KeepAliveMsg::MergeFrom(from.keepalive());
    }
    if (cached_has_bits & 0x00002000u) {
      curscene_ = from.curscene_;
    }
    if (cached_has_bits & 0x00004000u) {
      msgtype_ = from.msgtype_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void UnPacket::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.UnPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void UnPacket::CopyFrom(const UnPacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.UnPacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UnPacket::IsInitialized() const {
  if ((_has_bits_[0] & 0x00002000) != 0x00002000) return false;
  if (has_loginrequest()) {
    if (!this->loginrequest_->IsInitialized()) return false;
  }
  if (has_loginreturn()) {
    if (!this->loginreturn_->IsInitialized()) return false;
  }
  if (has_registerrequest()) {
    if (!this->registerrequest_->IsInitialized()) return false;
  }
  if (has_registerreturn()) {
    if (!this->registerreturn_->IsInitialized()) return false;
  }
  if (has_createrolerequest()) {
    if (!this->createrolerequest_->IsInitialized()) return false;
  }
  if (has_createrolereturn()) {
    if (!this->createrolereturn_->IsInitialized()) return false;
  }
  if (has_selectrolerequest()) {
    if (!this->selectrolerequest_->IsInitialized()) return false;
  }
  if (has_selectrolereturn()) {
    if (!this->selectrolereturn_->IsInitialized()) return false;
  }
  if (has_hallrequest()) {
    if (!this->hallrequest_->IsInitialized()) return false;
  }
  if (has_hallreturn()) {
    if (!this->hallreturn_->IsInitialized()) return false;
  }
  if (has_gamemainrequest()) {
    if (!this->gamemainrequest_->IsInitialized()) return false;
  }
  if (has_gamemainreturn()) {
    if (!this->gamemainreturn_->IsInitialized()) return false;
  }
  if (has_keepalive()) {
    if (!this->keepalive_->IsInitialized()) return false;
  }
  return true;
}

void UnPacket::Swap(UnPacket* other) {
  if (other == this) return;
  InternalSwap(other);
}
void UnPacket::InternalSwap(UnPacket* other) {
  std::swap(loginrequest_, other->loginrequest_);
  std::swap(loginreturn_, other->loginreturn_);
  std::swap(registerrequest_, other->registerrequest_);
  std::swap(registerreturn_, other->registerreturn_);
  std::swap(createrolerequest_, other->createrolerequest_);
  std::swap(createrolereturn_, other->createrolereturn_);
  std::swap(selectrolerequest_, other->selectrolerequest_);
  std::swap(selectrolereturn_, other->selectrolereturn_);
  std::swap(hallrequest_, other->hallrequest_);
  std::swap(hallreturn_, other->hallreturn_);
  std::swap(gamemainrequest_, other->gamemainrequest_);
  std::swap(gamemainreturn_, other->gamemainreturn_);
  std::swap(keepalive_, other->keepalive_);
  std::swap(curscene_, other->curscene_);
  std::swap(msgtype_, other->msgtype_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata UnPacket::GetMetadata() const {
  protobuf_command_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_command_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// UnPacket

// required .PBMessage.CurScene curScene = 1;
bool UnPacket::has_curscene() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void UnPacket::set_has_curscene() {
  _has_bits_[0] |= 0x00002000u;
}
void UnPacket::clear_has_curscene() {
  _has_bits_[0] &= ~0x00002000u;
}
void UnPacket::clear_curscene() {
  curscene_ = 0;
  clear_has_curscene();
}
::PBMessage::CurScene UnPacket::curscene() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.curScene)
  return static_cast< ::PBMessage::CurScene >(curscene_);
}
void UnPacket::set_curscene(::PBMessage::CurScene value) {
  assert(::PBMessage::CurScene_IsValid(value));
  set_has_curscene();
  curscene_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.UnPacket.curScene)
}

// optional .PBMessage.MessageType msgType = 2;
bool UnPacket::has_msgtype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void UnPacket::set_has_msgtype() {
  _has_bits_[0] |= 0x00004000u;
}
void UnPacket::clear_has_msgtype() {
  _has_bits_[0] &= ~0x00004000u;
}
void UnPacket::clear_msgtype() {
  msgtype_ = 0;
  clear_has_msgtype();
}
::PBMessage::MessageType UnPacket::msgtype() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.msgType)
  return static_cast< ::PBMessage::MessageType >(msgtype_);
}
void UnPacket::set_msgtype(::PBMessage::MessageType value) {
  assert(::PBMessage::MessageType_IsValid(value));
  set_has_msgtype();
  msgtype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.UnPacket.msgType)
}

// optional .PBMessage.LoginRequest loginRequest = 3;
bool UnPacket::has_loginrequest() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void UnPacket::set_has_loginrequest() {
  _has_bits_[0] |= 0x00000001u;
}
void UnPacket::clear_has_loginrequest() {
  _has_bits_[0] &= ~0x00000001u;
}
void UnPacket::clear_loginrequest() {
  if (loginrequest_ != NULL) loginrequest_->::PBMessage::LoginRequest::Clear();
  clear_has_loginrequest();
}
const ::PBMessage::LoginRequest& UnPacket::loginrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.loginRequest)
  return loginrequest_ != NULL ? *loginrequest_
                         : *::PBMessage::LoginRequest::internal_default_instance();
}
::PBMessage::LoginRequest* UnPacket::mutable_loginrequest() {
  set_has_loginrequest();
  if (loginrequest_ == NULL) {
    loginrequest_ = new ::PBMessage::LoginRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.loginRequest)
  return loginrequest_;
}
::PBMessage::LoginRequest* UnPacket::release_loginrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.loginRequest)
  clear_has_loginrequest();
  ::PBMessage::LoginRequest* temp = loginrequest_;
  loginrequest_ = NULL;
  return temp;
}
void UnPacket::set_allocated_loginrequest(::PBMessage::LoginRequest* loginrequest) {
  delete loginrequest_;
  loginrequest_ = loginrequest;
  if (loginrequest) {
    set_has_loginrequest();
  } else {
    clear_has_loginrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.loginRequest)
}

// optional .PBMessage.LoginReturn loginReturn = 4;
bool UnPacket::has_loginreturn() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void UnPacket::set_has_loginreturn() {
  _has_bits_[0] |= 0x00000002u;
}
void UnPacket::clear_has_loginreturn() {
  _has_bits_[0] &= ~0x00000002u;
}
void UnPacket::clear_loginreturn() {
  if (loginreturn_ != NULL) loginreturn_->::PBMessage::LoginReturn::Clear();
  clear_has_loginreturn();
}
const ::PBMessage::LoginReturn& UnPacket::loginreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.loginReturn)
  return loginreturn_ != NULL ? *loginreturn_
                         : *::PBMessage::LoginReturn::internal_default_instance();
}
::PBMessage::LoginReturn* UnPacket::mutable_loginreturn() {
  set_has_loginreturn();
  if (loginreturn_ == NULL) {
    loginreturn_ = new ::PBMessage::LoginReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.loginReturn)
  return loginreturn_;
}
::PBMessage::LoginReturn* UnPacket::release_loginreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.loginReturn)
  clear_has_loginreturn();
  ::PBMessage::LoginReturn* temp = loginreturn_;
  loginreturn_ = NULL;
  return temp;
}
void UnPacket::set_allocated_loginreturn(::PBMessage::LoginReturn* loginreturn) {
  delete loginreturn_;
  loginreturn_ = loginreturn;
  if (loginreturn) {
    set_has_loginreturn();
  } else {
    clear_has_loginreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.loginReturn)
}

// optional .PBMessage.RegisterRequest registerRequest = 5;
bool UnPacket::has_registerrequest() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void UnPacket::set_has_registerrequest() {
  _has_bits_[0] |= 0x00000004u;
}
void UnPacket::clear_has_registerrequest() {
  _has_bits_[0] &= ~0x00000004u;
}
void UnPacket::clear_registerrequest() {
  if (registerrequest_ != NULL) registerrequest_->::PBMessage::RegisterRequest::Clear();
  clear_has_registerrequest();
}
const ::PBMessage::RegisterRequest& UnPacket::registerrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.registerRequest)
  return registerrequest_ != NULL ? *registerrequest_
                         : *::PBMessage::RegisterRequest::internal_default_instance();
}
::PBMessage::RegisterRequest* UnPacket::mutable_registerrequest() {
  set_has_registerrequest();
  if (registerrequest_ == NULL) {
    registerrequest_ = new ::PBMessage::RegisterRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.registerRequest)
  return registerrequest_;
}
::PBMessage::RegisterRequest* UnPacket::release_registerrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.registerRequest)
  clear_has_registerrequest();
  ::PBMessage::RegisterRequest* temp = registerrequest_;
  registerrequest_ = NULL;
  return temp;
}
void UnPacket::set_allocated_registerrequest(::PBMessage::RegisterRequest* registerrequest) {
  delete registerrequest_;
  registerrequest_ = registerrequest;
  if (registerrequest) {
    set_has_registerrequest();
  } else {
    clear_has_registerrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.registerRequest)
}

// optional .PBMessage.RegisterReturn registerReturn = 6;
bool UnPacket::has_registerreturn() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void UnPacket::set_has_registerreturn() {
  _has_bits_[0] |= 0x00000008u;
}
void UnPacket::clear_has_registerreturn() {
  _has_bits_[0] &= ~0x00000008u;
}
void UnPacket::clear_registerreturn() {
  if (registerreturn_ != NULL) registerreturn_->::PBMessage::RegisterReturn::Clear();
  clear_has_registerreturn();
}
const ::PBMessage::RegisterReturn& UnPacket::registerreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.registerReturn)
  return registerreturn_ != NULL ? *registerreturn_
                         : *::PBMessage::RegisterReturn::internal_default_instance();
}
::PBMessage::RegisterReturn* UnPacket::mutable_registerreturn() {
  set_has_registerreturn();
  if (registerreturn_ == NULL) {
    registerreturn_ = new ::PBMessage::RegisterReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.registerReturn)
  return registerreturn_;
}
::PBMessage::RegisterReturn* UnPacket::release_registerreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.registerReturn)
  clear_has_registerreturn();
  ::PBMessage::RegisterReturn* temp = registerreturn_;
  registerreturn_ = NULL;
  return temp;
}
void UnPacket::set_allocated_registerreturn(::PBMessage::RegisterReturn* registerreturn) {
  delete registerreturn_;
  registerreturn_ = registerreturn;
  if (registerreturn) {
    set_has_registerreturn();
  } else {
    clear_has_registerreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.registerReturn)
}

// optional .PBMessage.CreateRoleRequest createRoleRequest = 7;
bool UnPacket::has_createrolerequest() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void UnPacket::set_has_createrolerequest() {
  _has_bits_[0] |= 0x00000010u;
}
void UnPacket::clear_has_createrolerequest() {
  _has_bits_[0] &= ~0x00000010u;
}
void UnPacket::clear_createrolerequest() {
  if (createrolerequest_ != NULL) createrolerequest_->::PBMessage::CreateRoleRequest::Clear();
  clear_has_createrolerequest();
}
const ::PBMessage::CreateRoleRequest& UnPacket::createrolerequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.createRoleRequest)
  return createrolerequest_ != NULL ? *createrolerequest_
                         : *::PBMessage::CreateRoleRequest::internal_default_instance();
}
::PBMessage::CreateRoleRequest* UnPacket::mutable_createrolerequest() {
  set_has_createrolerequest();
  if (createrolerequest_ == NULL) {
    createrolerequest_ = new ::PBMessage::CreateRoleRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.createRoleRequest)
  return createrolerequest_;
}
::PBMessage::CreateRoleRequest* UnPacket::release_createrolerequest() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.createRoleRequest)
  clear_has_createrolerequest();
  ::PBMessage::CreateRoleRequest* temp = createrolerequest_;
  createrolerequest_ = NULL;
  return temp;
}
void UnPacket::set_allocated_createrolerequest(::PBMessage::CreateRoleRequest* createrolerequest) {
  delete createrolerequest_;
  createrolerequest_ = createrolerequest;
  if (createrolerequest) {
    set_has_createrolerequest();
  } else {
    clear_has_createrolerequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.createRoleRequest)
}

// optional .PBMessage.CreateRoleReturn createRoleReturn = 8;
bool UnPacket::has_createrolereturn() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void UnPacket::set_has_createrolereturn() {
  _has_bits_[0] |= 0x00000020u;
}
void UnPacket::clear_has_createrolereturn() {
  _has_bits_[0] &= ~0x00000020u;
}
void UnPacket::clear_createrolereturn() {
  if (createrolereturn_ != NULL) createrolereturn_->::PBMessage::CreateRoleReturn::Clear();
  clear_has_createrolereturn();
}
const ::PBMessage::CreateRoleReturn& UnPacket::createrolereturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.createRoleReturn)
  return createrolereturn_ != NULL ? *createrolereturn_
                         : *::PBMessage::CreateRoleReturn::internal_default_instance();
}
::PBMessage::CreateRoleReturn* UnPacket::mutable_createrolereturn() {
  set_has_createrolereturn();
  if (createrolereturn_ == NULL) {
    createrolereturn_ = new ::PBMessage::CreateRoleReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.createRoleReturn)
  return createrolereturn_;
}
::PBMessage::CreateRoleReturn* UnPacket::release_createrolereturn() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.createRoleReturn)
  clear_has_createrolereturn();
  ::PBMessage::CreateRoleReturn* temp = createrolereturn_;
  createrolereturn_ = NULL;
  return temp;
}
void UnPacket::set_allocated_createrolereturn(::PBMessage::CreateRoleReturn* createrolereturn) {
  delete createrolereturn_;
  createrolereturn_ = createrolereturn;
  if (createrolereturn) {
    set_has_createrolereturn();
  } else {
    clear_has_createrolereturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.createRoleReturn)
}

// optional .PBMessage.SelectRoleRequest selectRoleRequest = 9;
bool UnPacket::has_selectrolerequest() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void UnPacket::set_has_selectrolerequest() {
  _has_bits_[0] |= 0x00000040u;
}
void UnPacket::clear_has_selectrolerequest() {
  _has_bits_[0] &= ~0x00000040u;
}
void UnPacket::clear_selectrolerequest() {
  if (selectrolerequest_ != NULL) selectrolerequest_->::PBMessage::SelectRoleRequest::Clear();
  clear_has_selectrolerequest();
}
const ::PBMessage::SelectRoleRequest& UnPacket::selectrolerequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.selectRoleRequest)
  return selectrolerequest_ != NULL ? *selectrolerequest_
                         : *::PBMessage::SelectRoleRequest::internal_default_instance();
}
::PBMessage::SelectRoleRequest* UnPacket::mutable_selectrolerequest() {
  set_has_selectrolerequest();
  if (selectrolerequest_ == NULL) {
    selectrolerequest_ = new ::PBMessage::SelectRoleRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.selectRoleRequest)
  return selectrolerequest_;
}
::PBMessage::SelectRoleRequest* UnPacket::release_selectrolerequest() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.selectRoleRequest)
  clear_has_selectrolerequest();
  ::PBMessage::SelectRoleRequest* temp = selectrolerequest_;
  selectrolerequest_ = NULL;
  return temp;
}
void UnPacket::set_allocated_selectrolerequest(::PBMessage::SelectRoleRequest* selectrolerequest) {
  delete selectrolerequest_;
  selectrolerequest_ = selectrolerequest;
  if (selectrolerequest) {
    set_has_selectrolerequest();
  } else {
    clear_has_selectrolerequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.selectRoleRequest)
}

// optional .PBMessage.SelectRoleReturn selectRoleReturn = 10;
bool UnPacket::has_selectrolereturn() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void UnPacket::set_has_selectrolereturn() {
  _has_bits_[0] |= 0x00000080u;
}
void UnPacket::clear_has_selectrolereturn() {
  _has_bits_[0] &= ~0x00000080u;
}
void UnPacket::clear_selectrolereturn() {
  if (selectrolereturn_ != NULL) selectrolereturn_->::PBMessage::SelectRoleReturn::Clear();
  clear_has_selectrolereturn();
}
const ::PBMessage::SelectRoleReturn& UnPacket::selectrolereturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.selectRoleReturn)
  return selectrolereturn_ != NULL ? *selectrolereturn_
                         : *::PBMessage::SelectRoleReturn::internal_default_instance();
}
::PBMessage::SelectRoleReturn* UnPacket::mutable_selectrolereturn() {
  set_has_selectrolereturn();
  if (selectrolereturn_ == NULL) {
    selectrolereturn_ = new ::PBMessage::SelectRoleReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.selectRoleReturn)
  return selectrolereturn_;
}
::PBMessage::SelectRoleReturn* UnPacket::release_selectrolereturn() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.selectRoleReturn)
  clear_has_selectrolereturn();
  ::PBMessage::SelectRoleReturn* temp = selectrolereturn_;
  selectrolereturn_ = NULL;
  return temp;
}
void UnPacket::set_allocated_selectrolereturn(::PBMessage::SelectRoleReturn* selectrolereturn) {
  delete selectrolereturn_;
  selectrolereturn_ = selectrolereturn;
  if (selectrolereturn) {
    set_has_selectrolereturn();
  } else {
    clear_has_selectrolereturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.selectRoleReturn)
}

// optional .PBMessage.HallRequest hallRequest = 11;
bool UnPacket::has_hallrequest() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void UnPacket::set_has_hallrequest() {
  _has_bits_[0] |= 0x00000100u;
}
void UnPacket::clear_has_hallrequest() {
  _has_bits_[0] &= ~0x00000100u;
}
void UnPacket::clear_hallrequest() {
  if (hallrequest_ != NULL) hallrequest_->::PBMessage::HallRequest::Clear();
  clear_has_hallrequest();
}
const ::PBMessage::HallRequest& UnPacket::hallrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.hallRequest)
  return hallrequest_ != NULL ? *hallrequest_
                         : *::PBMessage::HallRequest::internal_default_instance();
}
::PBMessage::HallRequest* UnPacket::mutable_hallrequest() {
  set_has_hallrequest();
  if (hallrequest_ == NULL) {
    hallrequest_ = new ::PBMessage::HallRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.hallRequest)
  return hallrequest_;
}
::PBMessage::HallRequest* UnPacket::release_hallrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.hallRequest)
  clear_has_hallrequest();
  ::PBMessage::HallRequest* temp = hallrequest_;
  hallrequest_ = NULL;
  return temp;
}
void UnPacket::set_allocated_hallrequest(::PBMessage::HallRequest* hallrequest) {
  delete hallrequest_;
  hallrequest_ = hallrequest;
  if (hallrequest) {
    set_has_hallrequest();
  } else {
    clear_has_hallrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.hallRequest)
}

// optional .PBMessage.HallReturn hallReturn = 12;
bool UnPacket::has_hallreturn() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void UnPacket::set_has_hallreturn() {
  _has_bits_[0] |= 0x00000200u;
}
void UnPacket::clear_has_hallreturn() {
  _has_bits_[0] &= ~0x00000200u;
}
void UnPacket::clear_hallreturn() {
  if (hallreturn_ != NULL) hallreturn_->::PBMessage::HallReturn::Clear();
  clear_has_hallreturn();
}
const ::PBMessage::HallReturn& UnPacket::hallreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.hallReturn)
  return hallreturn_ != NULL ? *hallreturn_
                         : *::PBMessage::HallReturn::internal_default_instance();
}
::PBMessage::HallReturn* UnPacket::mutable_hallreturn() {
  set_has_hallreturn();
  if (hallreturn_ == NULL) {
    hallreturn_ = new ::PBMessage::HallReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.hallReturn)
  return hallreturn_;
}
::PBMessage::HallReturn* UnPacket::release_hallreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.hallReturn)
  clear_has_hallreturn();
  ::PBMessage::HallReturn* temp = hallreturn_;
  hallreturn_ = NULL;
  return temp;
}
void UnPacket::set_allocated_hallreturn(::PBMessage::HallReturn* hallreturn) {
  delete hallreturn_;
  hallreturn_ = hallreturn;
  if (hallreturn) {
    set_has_hallreturn();
  } else {
    clear_has_hallreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.hallReturn)
}

// optional .PBMessage.GameMainRequest gameMainRequest = 13;
bool UnPacket::has_gamemainrequest() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void UnPacket::set_has_gamemainrequest() {
  _has_bits_[0] |= 0x00000400u;
}
void UnPacket::clear_has_gamemainrequest() {
  _has_bits_[0] &= ~0x00000400u;
}
void UnPacket::clear_gamemainrequest() {
  if (gamemainrequest_ != NULL) gamemainrequest_->::PBMessage::GameMainRequest::Clear();
  clear_has_gamemainrequest();
}
const ::PBMessage::GameMainRequest& UnPacket::gamemainrequest() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.gameMainRequest)
  return gamemainrequest_ != NULL ? *gamemainrequest_
                         : *::PBMessage::GameMainRequest::internal_default_instance();
}
::PBMessage::GameMainRequest* UnPacket::mutable_gamemainrequest() {
  set_has_gamemainrequest();
  if (gamemainrequest_ == NULL) {
    gamemainrequest_ = new ::PBMessage::GameMainRequest;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.gameMainRequest)
  return gamemainrequest_;
}
::PBMessage::GameMainRequest* UnPacket::release_gamemainrequest() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.gameMainRequest)
  clear_has_gamemainrequest();
  ::PBMessage::GameMainRequest* temp = gamemainrequest_;
  gamemainrequest_ = NULL;
  return temp;
}
void UnPacket::set_allocated_gamemainrequest(::PBMessage::GameMainRequest* gamemainrequest) {
  delete gamemainrequest_;
  gamemainrequest_ = gamemainrequest;
  if (gamemainrequest) {
    set_has_gamemainrequest();
  } else {
    clear_has_gamemainrequest();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.gameMainRequest)
}

// optional .PBMessage.GameMainReturn gameMainReturn = 14;
bool UnPacket::has_gamemainreturn() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void UnPacket::set_has_gamemainreturn() {
  _has_bits_[0] |= 0x00000800u;
}
void UnPacket::clear_has_gamemainreturn() {
  _has_bits_[0] &= ~0x00000800u;
}
void UnPacket::clear_gamemainreturn() {
  if (gamemainreturn_ != NULL) gamemainreturn_->::PBMessage::GameMainReturn::Clear();
  clear_has_gamemainreturn();
}
const ::PBMessage::GameMainReturn& UnPacket::gamemainreturn() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.gameMainReturn)
  return gamemainreturn_ != NULL ? *gamemainreturn_
                         : *::PBMessage::GameMainReturn::internal_default_instance();
}
::PBMessage::GameMainReturn* UnPacket::mutable_gamemainreturn() {
  set_has_gamemainreturn();
  if (gamemainreturn_ == NULL) {
    gamemainreturn_ = new ::PBMessage::GameMainReturn;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.gameMainReturn)
  return gamemainreturn_;
}
::PBMessage::GameMainReturn* UnPacket::release_gamemainreturn() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.gameMainReturn)
  clear_has_gamemainreturn();
  ::PBMessage::GameMainReturn* temp = gamemainreturn_;
  gamemainreturn_ = NULL;
  return temp;
}
void UnPacket::set_allocated_gamemainreturn(::PBMessage::GameMainReturn* gamemainreturn) {
  delete gamemainreturn_;
  gamemainreturn_ = gamemainreturn;
  if (gamemainreturn) {
    set_has_gamemainreturn();
  } else {
    clear_has_gamemainreturn();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.gameMainReturn)
}

// optional .PBMessage.KeepAliveMsg keepAlive = 15;
bool UnPacket::has_keepalive() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void UnPacket::set_has_keepalive() {
  _has_bits_[0] |= 0x00001000u;
}
void UnPacket::clear_has_keepalive() {
  _has_bits_[0] &= ~0x00001000u;
}
void UnPacket::clear_keepalive() {
  if (keepalive_ != NULL) keepalive_->::PBMessage::KeepAliveMsg::Clear();
  clear_has_keepalive();
}
const ::PBMessage::KeepAliveMsg& UnPacket::keepalive() const {
  // @@protoc_insertion_point(field_get:PBMessage.UnPacket.keepAlive)
  return keepalive_ != NULL ? *keepalive_
                         : *::PBMessage::KeepAliveMsg::internal_default_instance();
}
::PBMessage::KeepAliveMsg* UnPacket::mutable_keepalive() {
  set_has_keepalive();
  if (keepalive_ == NULL) {
    keepalive_ = new ::PBMessage::KeepAliveMsg;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.UnPacket.keepAlive)
  return keepalive_;
}
::PBMessage::KeepAliveMsg* UnPacket::release_keepalive() {
  // @@protoc_insertion_point(field_release:PBMessage.UnPacket.keepAlive)
  clear_has_keepalive();
  ::PBMessage::KeepAliveMsg* temp = keepalive_;
  keepalive_ = NULL;
  return temp;
}
void UnPacket::set_allocated_keepalive(::PBMessage::KeepAliveMsg* keepalive) {
  delete keepalive_;
  keepalive_ = keepalive;
  if (keepalive) {
    set_has_keepalive();
  } else {
    clear_has_keepalive();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.UnPacket.keepAlive)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace PBMessage

// @@protoc_insertion_point(global_scope)
