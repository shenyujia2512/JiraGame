// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene.txt

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "scene.txt.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PBMessage {
class Position2DDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Position2D> {
} _Position2D_default_instance_;
class Position3DDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Position3D> {
} _Position3D_default_instance_;
class PlayerInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<PlayerInfo> {
} _PlayerInfo_default_instance_;
class HallInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<HallInfo> {
} _HallInfo_default_instance_;
class RoomInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<RoomInfo> {
} _RoomInfo_default_instance_;
class InviteInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<InviteInfo> {
} _InviteInfo_default_instance_;

namespace protobuf_scene_2etxt {


namespace {

::google::protobuf::Metadata file_level_metadata[6];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position2D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position2D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position2D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position2D, y_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position3D, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position3D, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position3D, x_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position3D, y_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Position3D, z_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, socket_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, isroomctl_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, roleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, roletype_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, level_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, hp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, mp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, attack_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, movespeed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, roomstate_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, gamewaite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, pos_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, rot_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, scale_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PlayerInfo, playerstatus_),
  4,
  10,
  5,
  6,
  0,
  7,
  8,
  9,
  12,
  13,
  17,
  18,
  14,
  15,
  11,
  1,
  2,
  3,
  16,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HallInfo, roominfo_),
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, roomname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, personcount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, freepersoncount_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(RoomInfo, playerinfo_),
  1,
  0,
  2,
  3,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, requserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, requsername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, revuserid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, team_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(InviteInfo, teamid_),
  1,
  2,
  0,
  3,
  5,
  4,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 7, sizeof(Position2D)},
  { 9, 17, sizeof(Position3D)},
  { 20, 44, sizeof(PlayerInfo)},
  { 63, 69, sizeof(HallInfo)},
  { 70, 80, sizeof(RoomInfo)},
  { 85, 96, sizeof(InviteInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Position2D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Position3D_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_PlayerInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_HallInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_RoomInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_InviteInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "scene.txt", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 6);
}

}  // namespace

void TableStruct::Shutdown() {
  _Position2D_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Position3D_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _PlayerInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _HallInfo_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _RoomInfo_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _InviteInfo_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Position2D_default_instance_.DefaultConstruct();
  _Position3D_default_instance_.DefaultConstruct();
  _PlayerInfo_default_instance_.DefaultConstruct();
  _HallInfo_default_instance_.DefaultConstruct();
  _RoomInfo_default_instance_.DefaultConstruct();
  _InviteInfo_default_instance_.DefaultConstruct();
  _PlayerInfo_default_instance_.get_mutable()->pos_ = const_cast< ::PBMessage::Position3D*>(
      ::PBMessage::Position3D::internal_default_instance());
  _PlayerInfo_default_instance_.get_mutable()->rot_ = const_cast< ::PBMessage::Position3D*>(
      ::PBMessage::Position3D::internal_default_instance());
  _PlayerInfo_default_instance_.get_mutable()->scale_ = const_cast< ::PBMessage::Position3D*>(
      ::PBMessage::Position3D::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\tscene.txt\022\tPBMessage\"\"\n\nPosition2D\022\t\n\001"
      "x\030\001 \002(\t\022\t\n\001y\030\002 \002(\t\"-\n\nPosition3D\022\t\n\001x\030\001 "
      "\002(\t\022\t\n\001y\030\002 \002(\t\022\t\n\001z\030\003 \002(\t\"\304\003\n\nPlayerInfo"
      "\022\016\n\006socket\030\001 \001(\005\022\021\n\tisRoomCtl\030\002 \001(\010\022\016\n\006r"
      "oleId\030\003 \001(\005\022\020\n\010roleType\030\004 \001(\005\022\014\n\004name\030\005 "
      "\001(\t\022\r\n\005level\030\006 \001(\005\022\n\n\002hp\030\007 \001(\002\022\n\n\002mp\030\010 \001"
      "(\002\022\016\n\006attack\030\t \001(\002\022\021\n\tmoveSpeed\030\n \001(\002\022!\n"
      "\004team\030\013 \001(\0162\023.PBMessage.TeamType\022&\n\troom"
      "State\030\014 \001(\0162\023.PBMessage.RoomType\022\016\n\006room"
      "Id\030\r \001(\005\022\016\n\006teamId\030\016 \001(\005\022\021\n\tgameWaite\030\017 "
      "\001(\010\022\"\n\003Pos\030\020 \001(\0132\025.PBMessage.Position3D\022"
      "\"\n\003Rot\030\021 \001(\0132\025.PBMessage.Position3D\022$\n\005S"
      "cale\030\022 \001(\0132\025.PBMessage.Position3D\022-\n\014pla"
      "yerStatus\030\023 \001(\0162\027.PBMessage.PlayerStatus"
      "\"1\n\010HallInfo\022%\n\010roomInfo\030\001 \003(\0132\023.PBMessa"
      "ge.RoomInfo\"\205\001\n\010RoomInfo\022\016\n\006roomID\030\001 \001(\005"
      "\022\020\n\010roomName\030\002 \002(\t\022\023\n\013personCount\030\003 \002(\005\022"
      "\027\n\017freePersonCount\030\004 \002(\005\022)\n\nplayerInfo\030\005"
      " \003(\0132\025.PBMessage.PlayerInfo\"\212\001\n\nInviteIn"
      "fo\022\016\n\006roomID\030\001 \001(\005\022\021\n\treqUserId\030\002 \001(\005\022\023\n"
      "\013reqUserName\030\003 \001(\t\022\021\n\trevUserId\030\004 \001(\005\022!\n"
      "\004team\030\005 \001(\0162\023.PBMessage.TeamType\022\016\n\006team"
      "Id\030\006 \001(\005*\"\n\010TeamType\022\n\n\006Team_A\020\001\022\n\n\006Team"
      "_B\020\002*@\n\010RoomType\022\013\n\007RT_Idle\020\001\022\017\n\013RT_Join"
      "Room\020\002\022\013\n\007RT_Wait\020\003\022\t\n\005RT_OK\020\004*x\n\014Player"
      "Status\022\013\n\007PS_None\020\000\022\013\n\007PS_Idle\020\001\022\n\n\006PS_R"
      "un\020\002\022\010\n\004PS_Q\020\003\022\010\n\004PS_W\020\004\022\010\n\004PS_E\020\005\022\010\n\004PS"
      "_R\020\006\022\014\n\010PS_Death\020\007\022\014\n\010PS_CDing\020\010"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1112);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "scene.txt", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_scene_2etxt

const ::google::protobuf::EnumDescriptor* TeamType_descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_enum_descriptors[0];
}
bool TeamType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* RoomType_descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_enum_descriptors[1];
}
bool RoomType_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerStatus_descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_enum_descriptors[2];
}
bool PlayerStatus_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position2D::kXFieldNumber;
const int Position2D::kYFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position2D::Position2D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scene_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.Position2D)
}
Position2D::Position2D(const Position2D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x()) {
    x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
  }
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y()) {
    y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
  }
  // @@protoc_insertion_point(copy_constructor:PBMessage.Position2D)
}

void Position2D::SharedCtor() {
  _cached_size_ = 0;
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Position2D::~Position2D() {
  // @@protoc_insertion_point(destructor:PBMessage.Position2D)
  SharedDtor();
}

void Position2D::SharedDtor() {
  x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Position2D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position2D::descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position2D& Position2D::default_instance() {
  protobuf_scene_2etxt::InitDefaults();
  return *internal_default_instance();
}

Position2D* Position2D::New(::google::protobuf::Arena* arena) const {
  Position2D* n = new Position2D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position2D::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.Position2D)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_x()) {
      GOOGLE_DCHECK(!x_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*x_.UnsafeRawStringPointer())->clear();
    }
    if (has_y()) {
      GOOGLE_DCHECK(!y_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*y_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Position2D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.Position2D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_x()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->x().data(), this->x().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.Position2D.x");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->y().data(), this->y().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.Position2D.y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.Position2D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.Position2D)
  return false;
#undef DO_
}

void Position2D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.Position2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->x().data(), this->x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position2D.x");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->x(), output);
  }

  // required string y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->y().data(), this->y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position2D.y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->y(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.Position2D)
}

::google::protobuf::uint8* Position2D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.Position2D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->x().data(), this->x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position2D.x");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->x(), target);
  }

  // required string y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->y().data(), this->y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position2D.y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->y(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.Position2D)
  return target;
}

size_t Position2D::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.Position2D)
  size_t total_size = 0;

  if (has_x()) {
    // required string x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x());
  }

  if (has_y()) {
    // required string y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y());
  }

  return total_size;
}
size_t Position2D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.Position2D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x());

    // required string y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position2D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.Position2D)
  GOOGLE_DCHECK_NE(&from, this);
  const Position2D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position2D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.Position2D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.Position2D)
    MergeFrom(*source);
  }
}

void Position2D::MergeFrom(const Position2D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.Position2D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x();
      x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_y();
      y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
    }
  }
}

void Position2D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.Position2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position2D::CopyFrom(const Position2D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.Position2D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position2D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void Position2D::Swap(Position2D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position2D::InternalSwap(Position2D* other) {
  x_.Swap(&other->x_);
  y_.Swap(&other->y_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position2D::GetMetadata() const {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Position2D

// required string x = 1;
bool Position2D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Position2D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Position2D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Position2D::clear_x() {
  x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_x();
}
const ::std::string& Position2D::x() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position2D.x)
  return x_.GetNoArena();
}
void Position2D::set_x(const ::std::string& value) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position2D.x)
}
#if LANG_CXX11
void Position2D::set_x(::std::string&& value) {
  set_has_x();
  x_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position2D.x)
}
#endif
void Position2D::set_x(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position2D.x)
}
void Position2D::set_x(const char* value, size_t size) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position2D.x)
}
::std::string* Position2D::mutable_x() {
  set_has_x();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position2D.x)
  return x_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Position2D::release_x() {
  // @@protoc_insertion_point(field_release:PBMessage.Position2D.x)
  clear_has_x();
  return x_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Position2D::set_allocated_x(::std::string* x) {
  if (x != NULL) {
    set_has_x();
  } else {
    clear_has_x();
  }
  x_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), x);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position2D.x)
}

// required string y = 2;
bool Position2D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Position2D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Position2D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Position2D::clear_y() {
  y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_y();
}
const ::std::string& Position2D::y() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position2D.y)
  return y_.GetNoArena();
}
void Position2D::set_y(const ::std::string& value) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position2D.y)
}
#if LANG_CXX11
void Position2D::set_y(::std::string&& value) {
  set_has_y();
  y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position2D.y)
}
#endif
void Position2D::set_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position2D.y)
}
void Position2D::set_y(const char* value, size_t size) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position2D.y)
}
::std::string* Position2D::mutable_y() {
  set_has_y();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position2D.y)
  return y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Position2D::release_y() {
  // @@protoc_insertion_point(field_release:PBMessage.Position2D.y)
  clear_has_y();
  return y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Position2D::set_allocated_y(::std::string* y) {
  if (y != NULL) {
    set_has_y();
  } else {
    clear_has_y();
  }
  y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), y);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position2D.y)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Position3D::kXFieldNumber;
const int Position3D::kYFieldNumber;
const int Position3D::kZFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Position3D::Position3D()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scene_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.Position3D)
}
Position3D::Position3D(const Position3D& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_x()) {
    x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
  }
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_y()) {
    y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
  }
  z_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_z()) {
    z_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_);
  }
  // @@protoc_insertion_point(copy_constructor:PBMessage.Position3D)
}

void Position3D::SharedCtor() {
  _cached_size_ = 0;
  x_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Position3D::~Position3D() {
  // @@protoc_insertion_point(destructor:PBMessage.Position3D)
  SharedDtor();
}

void Position3D::SharedDtor() {
  x_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  y_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  z_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Position3D::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Position3D::descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Position3D& Position3D::default_instance() {
  protobuf_scene_2etxt::InitDefaults();
  return *internal_default_instance();
}

Position3D* Position3D::New(::google::protobuf::Arena* arena) const {
  Position3D* n = new Position3D;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Position3D::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.Position3D)
  if (_has_bits_[0 / 32] & 7u) {
    if (has_x()) {
      GOOGLE_DCHECK(!x_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*x_.UnsafeRawStringPointer())->clear();
    }
    if (has_y()) {
      GOOGLE_DCHECK(!y_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*y_.UnsafeRawStringPointer())->clear();
    }
    if (has_z()) {
      GOOGLE_DCHECK(!z_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*z_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Position3D::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.Position3D)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string x = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_x()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->x().data(), this->x().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.Position3D.x");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string y = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_y()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->y().data(), this->y().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.Position3D.y");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string z = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_z()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->z().data(), this->z().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.Position3D.z");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.Position3D)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.Position3D)
  return false;
#undef DO_
}

void Position3D::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.Position3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->x().data(), this->x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position3D.x");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->x(), output);
  }

  // required string y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->y().data(), this->y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position3D.y");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->y(), output);
  }

  // required string z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->z().data(), this->z().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position3D.z");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->z(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.Position3D)
}

::google::protobuf::uint8* Position3D::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.Position3D)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string x = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->x().data(), this->x().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position3D.x");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->x(), target);
  }

  // required string y = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->y().data(), this->y().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position3D.y");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->y(), target);
  }

  // required string z = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->z().data(), this->z().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.Position3D.z");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->z(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.Position3D)
  return target;
}

size_t Position3D::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.Position3D)
  size_t total_size = 0;

  if (has_x()) {
    // required string x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x());
  }

  if (has_y()) {
    // required string y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y());
  }

  if (has_z()) {
    // required string z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->z());
  }

  return total_size;
}
size_t Position3D::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.Position3D)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string x = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->x());

    // required string y = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->y());

    // required string z = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->z());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Position3D::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.Position3D)
  GOOGLE_DCHECK_NE(&from, this);
  const Position3D* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Position3D>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.Position3D)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.Position3D)
    MergeFrom(*source);
  }
}

void Position3D::MergeFrom(const Position3D& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.Position3D)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_x();
      x_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.x_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_y();
      y_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.y_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_z();
      z_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.z_);
    }
  }
}

void Position3D::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.Position3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Position3D::CopyFrom(const Position3D& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.Position3D)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Position3D::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  return true;
}

void Position3D::Swap(Position3D* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Position3D::InternalSwap(Position3D* other) {
  x_.Swap(&other->x_);
  y_.Swap(&other->y_);
  z_.Swap(&other->z_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Position3D::GetMetadata() const {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Position3D

// required string x = 1;
bool Position3D::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Position3D::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
void Position3D::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
void Position3D::clear_x() {
  x_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_x();
}
const ::std::string& Position3D::x() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position3D.x)
  return x_.GetNoArena();
}
void Position3D::set_x(const ::std::string& value) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position3D.x)
}
#if LANG_CXX11
void Position3D::set_x(::std::string&& value) {
  set_has_x();
  x_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position3D.x)
}
#endif
void Position3D::set_x(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position3D.x)
}
void Position3D::set_x(const char* value, size_t size) {
  set_has_x();
  x_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position3D.x)
}
::std::string* Position3D::mutable_x() {
  set_has_x();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position3D.x)
  return x_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Position3D::release_x() {
  // @@protoc_insertion_point(field_release:PBMessage.Position3D.x)
  clear_has_x();
  return x_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Position3D::set_allocated_x(::std::string* x) {
  if (x != NULL) {
    set_has_x();
  } else {
    clear_has_x();
  }
  x_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), x);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position3D.x)
}

// required string y = 2;
bool Position3D::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Position3D::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
void Position3D::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
void Position3D::clear_y() {
  y_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_y();
}
const ::std::string& Position3D::y() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position3D.y)
  return y_.GetNoArena();
}
void Position3D::set_y(const ::std::string& value) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position3D.y)
}
#if LANG_CXX11
void Position3D::set_y(::std::string&& value) {
  set_has_y();
  y_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position3D.y)
}
#endif
void Position3D::set_y(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position3D.y)
}
void Position3D::set_y(const char* value, size_t size) {
  set_has_y();
  y_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position3D.y)
}
::std::string* Position3D::mutable_y() {
  set_has_y();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position3D.y)
  return y_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Position3D::release_y() {
  // @@protoc_insertion_point(field_release:PBMessage.Position3D.y)
  clear_has_y();
  return y_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Position3D::set_allocated_y(::std::string* y) {
  if (y != NULL) {
    set_has_y();
  } else {
    clear_has_y();
  }
  y_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), y);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position3D.y)
}

// required string z = 3;
bool Position3D::has_z() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Position3D::set_has_z() {
  _has_bits_[0] |= 0x00000004u;
}
void Position3D::clear_has_z() {
  _has_bits_[0] &= ~0x00000004u;
}
void Position3D::clear_z() {
  z_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_z();
}
const ::std::string& Position3D::z() const {
  // @@protoc_insertion_point(field_get:PBMessage.Position3D.z)
  return z_.GetNoArena();
}
void Position3D::set_z(const ::std::string& value) {
  set_has_z();
  z_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.Position3D.z)
}
#if LANG_CXX11
void Position3D::set_z(::std::string&& value) {
  set_has_z();
  z_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.Position3D.z)
}
#endif
void Position3D::set_z(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_z();
  z_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.Position3D.z)
}
void Position3D::set_z(const char* value, size_t size) {
  set_has_z();
  z_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.Position3D.z)
}
::std::string* Position3D::mutable_z() {
  set_has_z();
  // @@protoc_insertion_point(field_mutable:PBMessage.Position3D.z)
  return z_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Position3D::release_z() {
  // @@protoc_insertion_point(field_release:PBMessage.Position3D.z)
  clear_has_z();
  return z_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Position3D::set_allocated_z(::std::string* z) {
  if (z != NULL) {
    set_has_z();
  } else {
    clear_has_z();
  }
  z_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), z);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.Position3D.z)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PlayerInfo::kSocketFieldNumber;
const int PlayerInfo::kIsRoomCtlFieldNumber;
const int PlayerInfo::kRoleIdFieldNumber;
const int PlayerInfo::kRoleTypeFieldNumber;
const int PlayerInfo::kNameFieldNumber;
const int PlayerInfo::kLevelFieldNumber;
const int PlayerInfo::kHpFieldNumber;
const int PlayerInfo::kMpFieldNumber;
const int PlayerInfo::kAttackFieldNumber;
const int PlayerInfo::kMoveSpeedFieldNumber;
const int PlayerInfo::kTeamFieldNumber;
const int PlayerInfo::kRoomStateFieldNumber;
const int PlayerInfo::kRoomIdFieldNumber;
const int PlayerInfo::kTeamIdFieldNumber;
const int PlayerInfo::kGameWaiteFieldNumber;
const int PlayerInfo::kPosFieldNumber;
const int PlayerInfo::kRotFieldNumber;
const int PlayerInfo::kScaleFieldNumber;
const int PlayerInfo::kPlayerStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PlayerInfo::PlayerInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scene_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.PlayerInfo)
}
PlayerInfo::PlayerInfo(const PlayerInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.has_pos()) {
    pos_ = new ::PBMessage::Position3D(*from.pos_);
  } else {
    pos_ = NULL;
  }
  if (from.has_rot()) {
    rot_ = new ::PBMessage::Position3D(*from.rot_);
  } else {
    rot_ = NULL;
  }
  if (from.has_scale()) {
    scale_ = new ::PBMessage::Position3D(*from.scale_);
  } else {
    scale_ = NULL;
  }
  ::memcpy(&socket_, &from.socket_,
    reinterpret_cast<char*>(&roomstate_) -
    reinterpret_cast<char*>(&socket_) + sizeof(roomstate_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.PlayerInfo)
}

void PlayerInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pos_, 0, reinterpret_cast<char*>(&playerstatus_) -
    reinterpret_cast<char*>(&pos_) + sizeof(playerstatus_));
  team_ = 1;
  roomstate_ = 1;
}

PlayerInfo::~PlayerInfo() {
  // @@protoc_insertion_point(destructor:PBMessage.PlayerInfo)
  SharedDtor();
}

void PlayerInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete pos_;
  }
  if (this != internal_default_instance()) {
    delete rot_;
  }
  if (this != internal_default_instance()) {
    delete scale_;
  }
}

void PlayerInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PlayerInfo::descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PlayerInfo& PlayerInfo::default_instance() {
  protobuf_scene_2etxt::InitDefaults();
  return *internal_default_instance();
}

PlayerInfo* PlayerInfo::New(::google::protobuf::Arena* arena) const {
  PlayerInfo* n = new PlayerInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PlayerInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.PlayerInfo)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_pos()) {
      GOOGLE_DCHECK(pos_ != NULL);
      pos_->::PBMessage::Position3D::Clear();
    }
    if (has_rot()) {
      GOOGLE_DCHECK(rot_ != NULL);
      rot_->::PBMessage::Position3D::Clear();
    }
    if (has_scale()) {
      GOOGLE_DCHECK(scale_ != NULL);
      scale_->::PBMessage::Position3D::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 240u) {
    ::memset(&socket_, 0, reinterpret_cast<char*>(&level_) -
      reinterpret_cast<char*>(&socket_) + sizeof(level_));
  }
  if (_has_bits_[8 / 32] & 65280u) {
    ::memset(&hp_, 0, reinterpret_cast<char*>(&teamid_) -
      reinterpret_cast<char*>(&hp_) + sizeof(teamid_));
  }
  if (_has_bits_[16 / 32] & 458752u) {
    playerstatus_ = 0;
    team_ = 1;
    roomstate_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool PlayerInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.PlayerInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 socket = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_socket();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &socket_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool isRoomCtl = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_isroomctl();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &isroomctl_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 roleId = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_roleid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 roleType = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_roletype();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roletype_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.PlayerInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 level = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_level();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float hp = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(61u)) {
          set_has_hp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &hp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float mp = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(69u)) {
          set_has_mp();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &mp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float attack = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u)) {
          set_has_attack();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &attack_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional float moveSpeed = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(85u)) {
          set_has_movespeed();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &movespeed_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.TeamType team = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::TeamType_IsValid(value)) {
            set_team(static_cast< ::PBMessage::TeamType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(11, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.RoomType roomState = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::RoomType_IsValid(value)) {
            set_roomstate(static_cast< ::PBMessage::RoomType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(12, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 roomId = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 teamId = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional bool gameWaite = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u)) {
          set_has_gamewaite();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &gamewaite_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.Position3D Pos = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.Position3D Rot = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_rot()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.Position3D Scale = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_scale()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.PlayerStatus playerStatus = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(152u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::PlayerStatus_IsValid(value)) {
            set_playerstatus(static_cast< ::PBMessage::PlayerStatus >(value));
          } else {
            mutable_unknown_fields()->AddVarint(19, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.PlayerInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.PlayerInfo)
  return false;
#undef DO_
}

void PlayerInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.PlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 socket = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->socket(), output);
  }

  // optional bool isRoomCtl = 2;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->isroomctl(), output);
  }

  // optional int32 roleId = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->roleid(), output);
  }

  // optional int32 roleType = 4;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->roletype(), output);
  }

  // optional string name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.PlayerInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->name(), output);
  }

  // optional int32 level = 6;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->level(), output);
  }

  // optional float hp = 7;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(7, this->hp(), output);
  }

  // optional float mp = 8;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(8, this->mp(), output);
  }

  // optional float attack = 9;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(9, this->attack(), output);
  }

  // optional float moveSpeed = 10;
  if (cached_has_bits & 0x00002000u) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(10, this->movespeed(), output);
  }

  // optional .PBMessage.TeamType team = 11;
  if (cached_has_bits & 0x00020000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      11, this->team(), output);
  }

  // optional .PBMessage.RoomType roomState = 12;
  if (cached_has_bits & 0x00040000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      12, this->roomstate(), output);
  }

  // optional int32 roomId = 13;
  if (cached_has_bits & 0x00004000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(13, this->roomid(), output);
  }

  // optional int32 teamId = 14;
  if (cached_has_bits & 0x00008000u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(14, this->teamid(), output);
  }

  // optional bool gameWaite = 15;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(15, this->gamewaite(), output);
  }

  // optional .PBMessage.Position3D Pos = 16;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      16, *this->pos_, output);
  }

  // optional .PBMessage.Position3D Rot = 17;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      17, *this->rot_, output);
  }

  // optional .PBMessage.Position3D Scale = 18;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      18, *this->scale_, output);
  }

  // optional .PBMessage.PlayerStatus playerStatus = 19;
  if (cached_has_bits & 0x00010000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      19, this->playerstatus(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.PlayerInfo)
}

::google::protobuf::uint8* PlayerInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.PlayerInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 socket = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->socket(), target);
  }

  // optional bool isRoomCtl = 2;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->isroomctl(), target);
  }

  // optional int32 roleId = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->roleid(), target);
  }

  // optional int32 roleType = 4;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->roletype(), target);
  }

  // optional string name = 5;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.PlayerInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->name(), target);
  }

  // optional int32 level = 6;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->level(), target);
  }

  // optional float hp = 7;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(7, this->hp(), target);
  }

  // optional float mp = 8;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(8, this->mp(), target);
  }

  // optional float attack = 9;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(9, this->attack(), target);
  }

  // optional float moveSpeed = 10;
  if (cached_has_bits & 0x00002000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(10, this->movespeed(), target);
  }

  // optional .PBMessage.TeamType team = 11;
  if (cached_has_bits & 0x00020000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      11, this->team(), target);
  }

  // optional .PBMessage.RoomType roomState = 12;
  if (cached_has_bits & 0x00040000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      12, this->roomstate(), target);
  }

  // optional int32 roomId = 13;
  if (cached_has_bits & 0x00004000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(13, this->roomid(), target);
  }

  // optional int32 teamId = 14;
  if (cached_has_bits & 0x00008000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(14, this->teamid(), target);
  }

  // optional bool gameWaite = 15;
  if (cached_has_bits & 0x00000800u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(15, this->gamewaite(), target);
  }

  // optional .PBMessage.Position3D Pos = 16;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        16, *this->pos_, deterministic, target);
  }

  // optional .PBMessage.Position3D Rot = 17;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        17, *this->rot_, deterministic, target);
  }

  // optional .PBMessage.Position3D Scale = 18;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        18, *this->scale_, deterministic, target);
  }

  // optional .PBMessage.PlayerStatus playerStatus = 19;
  if (cached_has_bits & 0x00010000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      19, this->playerstatus(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.PlayerInfo)
  return target;
}

size_t PlayerInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.PlayerInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 5;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional .PBMessage.Position3D Pos = 16;
    if (has_pos()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pos_);
    }

    // optional .PBMessage.Position3D Rot = 17;
    if (has_rot()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->rot_);
    }

    // optional .PBMessage.Position3D Scale = 18;
    if (has_scale()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->scale_);
    }

    // optional int32 socket = 1;
    if (has_socket()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->socket());
    }

    // optional int32 roleId = 3;
    if (has_roleid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roleid());
    }

    // optional int32 roleType = 4;
    if (has_roletype()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roletype());
    }

    // optional int32 level = 6;
    if (has_level()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->level());
    }

  }
  if (_has_bits_[8 / 32] & 65280u) {
    // optional float hp = 7;
    if (has_hp()) {
      total_size += 1 + 4;
    }

    // optional float mp = 8;
    if (has_mp()) {
      total_size += 1 + 4;
    }

    // optional bool isRoomCtl = 2;
    if (has_isroomctl()) {
      total_size += 1 + 1;
    }

    // optional bool gameWaite = 15;
    if (has_gamewaite()) {
      total_size += 1 + 1;
    }

    // optional float attack = 9;
    if (has_attack()) {
      total_size += 1 + 4;
    }

    // optional float moveSpeed = 10;
    if (has_movespeed()) {
      total_size += 1 + 4;
    }

    // optional int32 roomId = 13;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomid());
    }

    // optional int32 teamId = 14;
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->teamid());
    }

  }
  if (_has_bits_[16 / 32] & 458752u) {
    // optional .PBMessage.PlayerStatus playerStatus = 19;
    if (has_playerstatus()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->playerstatus());
    }

    // optional .PBMessage.TeamType team = 11;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->team());
    }

    // optional .PBMessage.RoomType roomState = 12;
    if (has_roomstate()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->roomstate());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PlayerInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.PlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const PlayerInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PlayerInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.PlayerInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.PlayerInfo)
    MergeFrom(*source);
  }
}

void PlayerInfo::MergeFrom(const PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.PlayerInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pos()->::PBMessage::Position3D::MergeFrom(from.pos());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_rot()->::PBMessage::Position3D::MergeFrom(from.rot());
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_scale()->::PBMessage::Position3D::MergeFrom(from.scale());
    }
    if (cached_has_bits & 0x00000010u) {
      socket_ = from.socket_;
    }
    if (cached_has_bits & 0x00000020u) {
      roleid_ = from.roleid_;
    }
    if (cached_has_bits & 0x00000040u) {
      roletype_ = from.roletype_;
    }
    if (cached_has_bits & 0x00000080u) {
      level_ = from.level_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 65280u) {
    if (cached_has_bits & 0x00000100u) {
      hp_ = from.hp_;
    }
    if (cached_has_bits & 0x00000200u) {
      mp_ = from.mp_;
    }
    if (cached_has_bits & 0x00000400u) {
      isroomctl_ = from.isroomctl_;
    }
    if (cached_has_bits & 0x00000800u) {
      gamewaite_ = from.gamewaite_;
    }
    if (cached_has_bits & 0x00001000u) {
      attack_ = from.attack_;
    }
    if (cached_has_bits & 0x00002000u) {
      movespeed_ = from.movespeed_;
    }
    if (cached_has_bits & 0x00004000u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00008000u) {
      teamid_ = from.teamid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 458752u) {
    if (cached_has_bits & 0x00010000u) {
      playerstatus_ = from.playerstatus_;
    }
    if (cached_has_bits & 0x00020000u) {
      team_ = from.team_;
    }
    if (cached_has_bits & 0x00040000u) {
      roomstate_ = from.roomstate_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PlayerInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PlayerInfo::CopyFrom(const PlayerInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.PlayerInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PlayerInfo::IsInitialized() const {
  if (has_pos()) {
    if (!this->pos_->IsInitialized()) return false;
  }
  if (has_rot()) {
    if (!this->rot_->IsInitialized()) return false;
  }
  if (has_scale()) {
    if (!this->scale_->IsInitialized()) return false;
  }
  return true;
}

void PlayerInfo::Swap(PlayerInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PlayerInfo::InternalSwap(PlayerInfo* other) {
  name_.Swap(&other->name_);
  std::swap(pos_, other->pos_);
  std::swap(rot_, other->rot_);
  std::swap(scale_, other->scale_);
  std::swap(socket_, other->socket_);
  std::swap(roleid_, other->roleid_);
  std::swap(roletype_, other->roletype_);
  std::swap(level_, other->level_);
  std::swap(hp_, other->hp_);
  std::swap(mp_, other->mp_);
  std::swap(isroomctl_, other->isroomctl_);
  std::swap(gamewaite_, other->gamewaite_);
  std::swap(attack_, other->attack_);
  std::swap(movespeed_, other->movespeed_);
  std::swap(roomid_, other->roomid_);
  std::swap(teamid_, other->teamid_);
  std::swap(playerstatus_, other->playerstatus_);
  std::swap(team_, other->team_);
  std::swap(roomstate_, other->roomstate_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PlayerInfo::GetMetadata() const {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PlayerInfo

// optional int32 socket = 1;
bool PlayerInfo::has_socket() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PlayerInfo::set_has_socket() {
  _has_bits_[0] |= 0x00000010u;
}
void PlayerInfo::clear_has_socket() {
  _has_bits_[0] &= ~0x00000010u;
}
void PlayerInfo::clear_socket() {
  socket_ = 0;
  clear_has_socket();
}
::google::protobuf::int32 PlayerInfo::socket() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.socket)
  return socket_;
}
void PlayerInfo::set_socket(::google::protobuf::int32 value) {
  set_has_socket();
  socket_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.socket)
}

// optional bool isRoomCtl = 2;
bool PlayerInfo::has_isroomctl() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void PlayerInfo::set_has_isroomctl() {
  _has_bits_[0] |= 0x00000400u;
}
void PlayerInfo::clear_has_isroomctl() {
  _has_bits_[0] &= ~0x00000400u;
}
void PlayerInfo::clear_isroomctl() {
  isroomctl_ = false;
  clear_has_isroomctl();
}
bool PlayerInfo::isroomctl() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.isRoomCtl)
  return isroomctl_;
}
void PlayerInfo::set_isroomctl(bool value) {
  set_has_isroomctl();
  isroomctl_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.isRoomCtl)
}

// optional int32 roleId = 3;
bool PlayerInfo::has_roleid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PlayerInfo::set_has_roleid() {
  _has_bits_[0] |= 0x00000020u;
}
void PlayerInfo::clear_has_roleid() {
  _has_bits_[0] &= ~0x00000020u;
}
void PlayerInfo::clear_roleid() {
  roleid_ = 0;
  clear_has_roleid();
}
::google::protobuf::int32 PlayerInfo::roleid() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roleId)
  return roleid_;
}
void PlayerInfo::set_roleid(::google::protobuf::int32 value) {
  set_has_roleid();
  roleid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roleId)
}

// optional int32 roleType = 4;
bool PlayerInfo::has_roletype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void PlayerInfo::set_has_roletype() {
  _has_bits_[0] |= 0x00000040u;
}
void PlayerInfo::clear_has_roletype() {
  _has_bits_[0] &= ~0x00000040u;
}
void PlayerInfo::clear_roletype() {
  roletype_ = 0;
  clear_has_roletype();
}
::google::protobuf::int32 PlayerInfo::roletype() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roleType)
  return roletype_;
}
void PlayerInfo::set_roletype(::google::protobuf::int32 value) {
  set_has_roletype();
  roletype_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roleType)
}

// optional string name = 5;
bool PlayerInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PlayerInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void PlayerInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void PlayerInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& PlayerInfo::name() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.name)
  return name_.GetNoArena();
}
void PlayerInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.name)
}
#if LANG_CXX11
void PlayerInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.PlayerInfo.name)
}
#endif
void PlayerInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.PlayerInfo.name)
}
void PlayerInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.PlayerInfo.name)
}
::std::string* PlayerInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* PlayerInfo::release_name() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void PlayerInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.name)
}

// optional int32 level = 6;
bool PlayerInfo::has_level() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void PlayerInfo::set_has_level() {
  _has_bits_[0] |= 0x00000080u;
}
void PlayerInfo::clear_has_level() {
  _has_bits_[0] &= ~0x00000080u;
}
void PlayerInfo::clear_level() {
  level_ = 0;
  clear_has_level();
}
::google::protobuf::int32 PlayerInfo::level() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.level)
  return level_;
}
void PlayerInfo::set_level(::google::protobuf::int32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.level)
}

// optional float hp = 7;
bool PlayerInfo::has_hp() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void PlayerInfo::set_has_hp() {
  _has_bits_[0] |= 0x00000100u;
}
void PlayerInfo::clear_has_hp() {
  _has_bits_[0] &= ~0x00000100u;
}
void PlayerInfo::clear_hp() {
  hp_ = 0;
  clear_has_hp();
}
float PlayerInfo::hp() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.hp)
  return hp_;
}
void PlayerInfo::set_hp(float value) {
  set_has_hp();
  hp_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.hp)
}

// optional float mp = 8;
bool PlayerInfo::has_mp() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void PlayerInfo::set_has_mp() {
  _has_bits_[0] |= 0x00000200u;
}
void PlayerInfo::clear_has_mp() {
  _has_bits_[0] &= ~0x00000200u;
}
void PlayerInfo::clear_mp() {
  mp_ = 0;
  clear_has_mp();
}
float PlayerInfo::mp() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.mp)
  return mp_;
}
void PlayerInfo::set_mp(float value) {
  set_has_mp();
  mp_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.mp)
}

// optional float attack = 9;
bool PlayerInfo::has_attack() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void PlayerInfo::set_has_attack() {
  _has_bits_[0] |= 0x00001000u;
}
void PlayerInfo::clear_has_attack() {
  _has_bits_[0] &= ~0x00001000u;
}
void PlayerInfo::clear_attack() {
  attack_ = 0;
  clear_has_attack();
}
float PlayerInfo::attack() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.attack)
  return attack_;
}
void PlayerInfo::set_attack(float value) {
  set_has_attack();
  attack_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.attack)
}

// optional float moveSpeed = 10;
bool PlayerInfo::has_movespeed() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
void PlayerInfo::set_has_movespeed() {
  _has_bits_[0] |= 0x00002000u;
}
void PlayerInfo::clear_has_movespeed() {
  _has_bits_[0] &= ~0x00002000u;
}
void PlayerInfo::clear_movespeed() {
  movespeed_ = 0;
  clear_has_movespeed();
}
float PlayerInfo::movespeed() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.moveSpeed)
  return movespeed_;
}
void PlayerInfo::set_movespeed(float value) {
  set_has_movespeed();
  movespeed_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.moveSpeed)
}

// optional .PBMessage.TeamType team = 11;
bool PlayerInfo::has_team() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
void PlayerInfo::set_has_team() {
  _has_bits_[0] |= 0x00020000u;
}
void PlayerInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00020000u;
}
void PlayerInfo::clear_team() {
  team_ = 1;
  clear_has_team();
}
::PBMessage::TeamType PlayerInfo::team() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.team)
  return static_cast< ::PBMessage::TeamType >(team_);
}
void PlayerInfo::set_team(::PBMessage::TeamType value) {
  assert(::PBMessage::TeamType_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.team)
}

// optional .PBMessage.RoomType roomState = 12;
bool PlayerInfo::has_roomstate() const {
  return (_has_bits_[0] & 0x00040000u) != 0;
}
void PlayerInfo::set_has_roomstate() {
  _has_bits_[0] |= 0x00040000u;
}
void PlayerInfo::clear_has_roomstate() {
  _has_bits_[0] &= ~0x00040000u;
}
void PlayerInfo::clear_roomstate() {
  roomstate_ = 1;
  clear_has_roomstate();
}
::PBMessage::RoomType PlayerInfo::roomstate() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roomState)
  return static_cast< ::PBMessage::RoomType >(roomstate_);
}
void PlayerInfo::set_roomstate(::PBMessage::RoomType value) {
  assert(::PBMessage::RoomType_IsValid(value));
  set_has_roomstate();
  roomstate_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roomState)
}

// optional int32 roomId = 13;
bool PlayerInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
void PlayerInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00004000u;
}
void PlayerInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00004000u;
}
void PlayerInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
::google::protobuf::int32 PlayerInfo::roomid() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.roomId)
  return roomid_;
}
void PlayerInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.roomId)
}

// optional int32 teamId = 14;
bool PlayerInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
void PlayerInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00008000u;
}
void PlayerInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00008000u;
}
void PlayerInfo::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
::google::protobuf::int32 PlayerInfo::teamid() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.teamId)
  return teamid_;
}
void PlayerInfo::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.teamId)
}

// optional bool gameWaite = 15;
bool PlayerInfo::has_gamewaite() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void PlayerInfo::set_has_gamewaite() {
  _has_bits_[0] |= 0x00000800u;
}
void PlayerInfo::clear_has_gamewaite() {
  _has_bits_[0] &= ~0x00000800u;
}
void PlayerInfo::clear_gamewaite() {
  gamewaite_ = false;
  clear_has_gamewaite();
}
bool PlayerInfo::gamewaite() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.gameWaite)
  return gamewaite_;
}
void PlayerInfo::set_gamewaite(bool value) {
  set_has_gamewaite();
  gamewaite_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.gameWaite)
}

// optional .PBMessage.Position3D Pos = 16;
bool PlayerInfo::has_pos() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PlayerInfo::set_has_pos() {
  _has_bits_[0] |= 0x00000002u;
}
void PlayerInfo::clear_has_pos() {
  _has_bits_[0] &= ~0x00000002u;
}
void PlayerInfo::clear_pos() {
  if (pos_ != NULL) pos_->::PBMessage::Position3D::Clear();
  clear_has_pos();
}
const ::PBMessage::Position3D& PlayerInfo::pos() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.Pos)
  return pos_ != NULL ? *pos_
                         : *::PBMessage::Position3D::internal_default_instance();
}
::PBMessage::Position3D* PlayerInfo::mutable_pos() {
  set_has_pos();
  if (pos_ == NULL) {
    pos_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.Pos)
  return pos_;
}
::PBMessage::Position3D* PlayerInfo::release_pos() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.Pos)
  clear_has_pos();
  ::PBMessage::Position3D* temp = pos_;
  pos_ = NULL;
  return temp;
}
void PlayerInfo::set_allocated_pos(::PBMessage::Position3D* pos) {
  delete pos_;
  pos_ = pos;
  if (pos) {
    set_has_pos();
  } else {
    clear_has_pos();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.Pos)
}

// optional .PBMessage.Position3D Rot = 17;
bool PlayerInfo::has_rot() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PlayerInfo::set_has_rot() {
  _has_bits_[0] |= 0x00000004u;
}
void PlayerInfo::clear_has_rot() {
  _has_bits_[0] &= ~0x00000004u;
}
void PlayerInfo::clear_rot() {
  if (rot_ != NULL) rot_->::PBMessage::Position3D::Clear();
  clear_has_rot();
}
const ::PBMessage::Position3D& PlayerInfo::rot() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.Rot)
  return rot_ != NULL ? *rot_
                         : *::PBMessage::Position3D::internal_default_instance();
}
::PBMessage::Position3D* PlayerInfo::mutable_rot() {
  set_has_rot();
  if (rot_ == NULL) {
    rot_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.Rot)
  return rot_;
}
::PBMessage::Position3D* PlayerInfo::release_rot() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.Rot)
  clear_has_rot();
  ::PBMessage::Position3D* temp = rot_;
  rot_ = NULL;
  return temp;
}
void PlayerInfo::set_allocated_rot(::PBMessage::Position3D* rot) {
  delete rot_;
  rot_ = rot;
  if (rot) {
    set_has_rot();
  } else {
    clear_has_rot();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.Rot)
}

// optional .PBMessage.Position3D Scale = 18;
bool PlayerInfo::has_scale() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PlayerInfo::set_has_scale() {
  _has_bits_[0] |= 0x00000008u;
}
void PlayerInfo::clear_has_scale() {
  _has_bits_[0] &= ~0x00000008u;
}
void PlayerInfo::clear_scale() {
  if (scale_ != NULL) scale_->::PBMessage::Position3D::Clear();
  clear_has_scale();
}
const ::PBMessage::Position3D& PlayerInfo::scale() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.Scale)
  return scale_ != NULL ? *scale_
                         : *::PBMessage::Position3D::internal_default_instance();
}
::PBMessage::Position3D* PlayerInfo::mutable_scale() {
  set_has_scale();
  if (scale_ == NULL) {
    scale_ = new ::PBMessage::Position3D;
  }
  // @@protoc_insertion_point(field_mutable:PBMessage.PlayerInfo.Scale)
  return scale_;
}
::PBMessage::Position3D* PlayerInfo::release_scale() {
  // @@protoc_insertion_point(field_release:PBMessage.PlayerInfo.Scale)
  clear_has_scale();
  ::PBMessage::Position3D* temp = scale_;
  scale_ = NULL;
  return temp;
}
void PlayerInfo::set_allocated_scale(::PBMessage::Position3D* scale) {
  delete scale_;
  scale_ = scale;
  if (scale) {
    set_has_scale();
  } else {
    clear_has_scale();
  }
  // @@protoc_insertion_point(field_set_allocated:PBMessage.PlayerInfo.Scale)
}

// optional .PBMessage.PlayerStatus playerStatus = 19;
bool PlayerInfo::has_playerstatus() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
void PlayerInfo::set_has_playerstatus() {
  _has_bits_[0] |= 0x00010000u;
}
void PlayerInfo::clear_has_playerstatus() {
  _has_bits_[0] &= ~0x00010000u;
}
void PlayerInfo::clear_playerstatus() {
  playerstatus_ = 0;
  clear_has_playerstatus();
}
::PBMessage::PlayerStatus PlayerInfo::playerstatus() const {
  // @@protoc_insertion_point(field_get:PBMessage.PlayerInfo.playerStatus)
  return static_cast< ::PBMessage::PlayerStatus >(playerstatus_);
}
void PlayerInfo::set_playerstatus(::PBMessage::PlayerStatus value) {
  assert(::PBMessage::PlayerStatus_IsValid(value));
  set_has_playerstatus();
  playerstatus_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.PlayerInfo.playerStatus)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HallInfo::kRoomInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HallInfo::HallInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scene_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.HallInfo)
}
HallInfo::HallInfo(const HallInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      roominfo_(from.roominfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:PBMessage.HallInfo)
}

void HallInfo::SharedCtor() {
  _cached_size_ = 0;
}

HallInfo::~HallInfo() {
  // @@protoc_insertion_point(destructor:PBMessage.HallInfo)
  SharedDtor();
}

void HallInfo::SharedDtor() {
}

void HallInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HallInfo::descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const HallInfo& HallInfo::default_instance() {
  protobuf_scene_2etxt::InitDefaults();
  return *internal_default_instance();
}

HallInfo* HallInfo::New(::google::protobuf::Arena* arena) const {
  HallInfo* n = new HallInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HallInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.HallInfo)
  roominfo_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool HallInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.HallInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBMessage.RoomInfo roomInfo = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_roominfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.HallInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.HallInfo)
  return false;
#undef DO_
}

void HallInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.HallInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBMessage.RoomInfo roomInfo = 1;
  for (unsigned int i = 0, n = this->roominfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->roominfo(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.HallInfo)
}

::google::protobuf::uint8* HallInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.HallInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .PBMessage.RoomInfo roomInfo = 1;
  for (unsigned int i = 0, n = this->roominfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->roominfo(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.HallInfo)
  return target;
}

size_t HallInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.HallInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .PBMessage.RoomInfo roomInfo = 1;
  {
    unsigned int count = this->roominfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->roominfo(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HallInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.HallInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const HallInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const HallInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.HallInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.HallInfo)
    MergeFrom(*source);
  }
}

void HallInfo::MergeFrom(const HallInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.HallInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  roominfo_.MergeFrom(from.roominfo_);
}

void HallInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.HallInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HallInfo::CopyFrom(const HallInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.HallInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HallInfo::IsInitialized() const {
  if (!::google::protobuf::internal::AllAreInitialized(this->roominfo())) return false;
  return true;
}

void HallInfo::Swap(HallInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HallInfo::InternalSwap(HallInfo* other) {
  roominfo_.InternalSwap(&other->roominfo_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HallInfo::GetMetadata() const {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HallInfo

// repeated .PBMessage.RoomInfo roomInfo = 1;
int HallInfo::roominfo_size() const {
  return roominfo_.size();
}
void HallInfo::clear_roominfo() {
  roominfo_.Clear();
}
const ::PBMessage::RoomInfo& HallInfo::roominfo(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.HallInfo.roomInfo)
  return roominfo_.Get(index);
}
::PBMessage::RoomInfo* HallInfo::mutable_roominfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.HallInfo.roomInfo)
  return roominfo_.Mutable(index);
}
::PBMessage::RoomInfo* HallInfo::add_roominfo() {
  // @@protoc_insertion_point(field_add:PBMessage.HallInfo.roomInfo)
  return roominfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBMessage::RoomInfo >*
HallInfo::mutable_roominfo() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.HallInfo.roomInfo)
  return &roominfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBMessage::RoomInfo >&
HallInfo::roominfo() const {
  // @@protoc_insertion_point(field_list:PBMessage.HallInfo.roomInfo)
  return roominfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int RoomInfo::kRoomIDFieldNumber;
const int RoomInfo::kRoomNameFieldNumber;
const int RoomInfo::kPersonCountFieldNumber;
const int RoomInfo::kFreePersonCountFieldNumber;
const int RoomInfo::kPlayerInfoFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

RoomInfo::RoomInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scene_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.RoomInfo)
}
RoomInfo::RoomInfo(const RoomInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      playerinfo_(from.playerinfo_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_roomname()) {
    roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    reinterpret_cast<char*>(&freepersoncount_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(freepersoncount_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.RoomInfo)
}

void RoomInfo::SharedCtor() {
  _cached_size_ = 0;
  roomname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&freepersoncount_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(freepersoncount_));
}

RoomInfo::~RoomInfo() {
  // @@protoc_insertion_point(destructor:PBMessage.RoomInfo)
  SharedDtor();
}

void RoomInfo::SharedDtor() {
  roomname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void RoomInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* RoomInfo::descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const RoomInfo& RoomInfo::default_instance() {
  protobuf_scene_2etxt::InitDefaults();
  return *internal_default_instance();
}

RoomInfo* RoomInfo::New(::google::protobuf::Arena* arena) const {
  RoomInfo* n = new RoomInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void RoomInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.RoomInfo)
  playerinfo_.Clear();
  if (has_roomname()) {
    GOOGLE_DCHECK(!roomname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*roomname_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&roomid_, 0, reinterpret_cast<char*>(&freepersoncount_) -
      reinterpret_cast<char*>(&roomid_) + sizeof(freepersoncount_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool RoomInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.RoomInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roomID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string roomName = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_roomname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->roomname().data(), this->roomname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.RoomInfo.roomName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 personCount = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_personcount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &personcount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required int32 freePersonCount = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_freepersoncount();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &freepersoncount_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .PBMessage.PlayerInfo playerInfo = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_playerinfo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.RoomInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.RoomInfo)
  return false;
#undef DO_
}

void RoomInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roomID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomid(), output);
  }

  // required string roomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.RoomInfo.roomName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->roomname(), output);
  }

  // required int32 personCount = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->personcount(), output);
  }

  // required int32 freePersonCount = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->freepersoncount(), output);
  }

  // repeated .PBMessage.PlayerInfo playerInfo = 5;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->playerinfo(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.RoomInfo)
}

::google::protobuf::uint8* RoomInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.RoomInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roomID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomid(), target);
  }

  // required string roomName = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->roomname().data(), this->roomname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.RoomInfo.roomName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->roomname(), target);
  }

  // required int32 personCount = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->personcount(), target);
  }

  // required int32 freePersonCount = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->freepersoncount(), target);
  }

  // repeated .PBMessage.PlayerInfo playerInfo = 5;
  for (unsigned int i = 0, n = this->playerinfo_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, this->playerinfo(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.RoomInfo)
  return target;
}

size_t RoomInfo::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:PBMessage.RoomInfo)
  size_t total_size = 0;

  if (has_roomname()) {
    // required string roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());
  }

  if (has_personcount()) {
    // required int32 personCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->personcount());
  }

  if (has_freepersoncount()) {
    // required int32 freePersonCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->freepersoncount());
  }

  return total_size;
}
size_t RoomInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.RoomInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000d) ^ 0x0000000d) == 0) {  // All required fields are present.
    // required string roomName = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->roomname());

    // required int32 personCount = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->personcount());

    // required int32 freePersonCount = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->freepersoncount());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // repeated .PBMessage.PlayerInfo playerInfo = 5;
  {
    unsigned int count = this->playerinfo_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->playerinfo(i));
    }
  }

  // optional int32 roomID = 1;
  if (has_roomid()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void RoomInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const RoomInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const RoomInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.RoomInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.RoomInfo)
    MergeFrom(*source);
  }
}

void RoomInfo::MergeFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.RoomInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerinfo_.MergeFrom(from.playerinfo_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_roomname();
      roomname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.roomname_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000004u) {
      personcount_ = from.personcount_;
    }
    if (cached_has_bits & 0x00000008u) {
      freepersoncount_ = from.freepersoncount_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void RoomInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RoomInfo::CopyFrom(const RoomInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.RoomInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RoomInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000d) != 0x0000000d) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->playerinfo())) return false;
  return true;
}

void RoomInfo::Swap(RoomInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void RoomInfo::InternalSwap(RoomInfo* other) {
  playerinfo_.InternalSwap(&other->playerinfo_);
  roomname_.Swap(&other->roomname_);
  std::swap(roomid_, other->roomid_);
  std::swap(personcount_, other->personcount_);
  std::swap(freepersoncount_, other->freepersoncount_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata RoomInfo::GetMetadata() const {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// RoomInfo

// optional int32 roomID = 1;
bool RoomInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void RoomInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
void RoomInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
void RoomInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
::google::protobuf::int32 RoomInfo::roomid() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.roomID)
  return roomid_;
}
void RoomInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.roomID)
}

// required string roomName = 2;
bool RoomInfo::has_roomname() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void RoomInfo::set_has_roomname() {
  _has_bits_[0] |= 0x00000001u;
}
void RoomInfo::clear_has_roomname() {
  _has_bits_[0] &= ~0x00000001u;
}
void RoomInfo::clear_roomname() {
  roomname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_roomname();
}
const ::std::string& RoomInfo::roomname() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.roomName)
  return roomname_.GetNoArena();
}
void RoomInfo::set_roomname(const ::std::string& value) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.roomName)
}
#if LANG_CXX11
void RoomInfo::set_roomname(::std::string&& value) {
  set_has_roomname();
  roomname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.RoomInfo.roomName)
}
#endif
void RoomInfo::set_roomname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.RoomInfo.roomName)
}
void RoomInfo::set_roomname(const char* value, size_t size) {
  set_has_roomname();
  roomname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.RoomInfo.roomName)
}
::std::string* RoomInfo::mutable_roomname() {
  set_has_roomname();
  // @@protoc_insertion_point(field_mutable:PBMessage.RoomInfo.roomName)
  return roomname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* RoomInfo::release_roomname() {
  // @@protoc_insertion_point(field_release:PBMessage.RoomInfo.roomName)
  clear_has_roomname();
  return roomname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void RoomInfo::set_allocated_roomname(::std::string* roomname) {
  if (roomname != NULL) {
    set_has_roomname();
  } else {
    clear_has_roomname();
  }
  roomname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), roomname);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.RoomInfo.roomName)
}

// required int32 personCount = 3;
bool RoomInfo::has_personcount() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void RoomInfo::set_has_personcount() {
  _has_bits_[0] |= 0x00000004u;
}
void RoomInfo::clear_has_personcount() {
  _has_bits_[0] &= ~0x00000004u;
}
void RoomInfo::clear_personcount() {
  personcount_ = 0;
  clear_has_personcount();
}
::google::protobuf::int32 RoomInfo::personcount() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.personCount)
  return personcount_;
}
void RoomInfo::set_personcount(::google::protobuf::int32 value) {
  set_has_personcount();
  personcount_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.personCount)
}

// required int32 freePersonCount = 4;
bool RoomInfo::has_freepersoncount() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void RoomInfo::set_has_freepersoncount() {
  _has_bits_[0] |= 0x00000008u;
}
void RoomInfo::clear_has_freepersoncount() {
  _has_bits_[0] &= ~0x00000008u;
}
void RoomInfo::clear_freepersoncount() {
  freepersoncount_ = 0;
  clear_has_freepersoncount();
}
::google::protobuf::int32 RoomInfo::freepersoncount() const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.freePersonCount)
  return freepersoncount_;
}
void RoomInfo::set_freepersoncount(::google::protobuf::int32 value) {
  set_has_freepersoncount();
  freepersoncount_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.RoomInfo.freePersonCount)
}

// repeated .PBMessage.PlayerInfo playerInfo = 5;
int RoomInfo::playerinfo_size() const {
  return playerinfo_.size();
}
void RoomInfo::clear_playerinfo() {
  playerinfo_.Clear();
}
const ::PBMessage::PlayerInfo& RoomInfo::playerinfo(int index) const {
  // @@protoc_insertion_point(field_get:PBMessage.RoomInfo.playerInfo)
  return playerinfo_.Get(index);
}
::PBMessage::PlayerInfo* RoomInfo::mutable_playerinfo(int index) {
  // @@protoc_insertion_point(field_mutable:PBMessage.RoomInfo.playerInfo)
  return playerinfo_.Mutable(index);
}
::PBMessage::PlayerInfo* RoomInfo::add_playerinfo() {
  // @@protoc_insertion_point(field_add:PBMessage.RoomInfo.playerInfo)
  return playerinfo_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >*
RoomInfo::mutable_playerinfo() {
  // @@protoc_insertion_point(field_mutable_list:PBMessage.RoomInfo.playerInfo)
  return &playerinfo_;
}
const ::google::protobuf::RepeatedPtrField< ::PBMessage::PlayerInfo >&
RoomInfo::playerinfo() const {
  // @@protoc_insertion_point(field_list:PBMessage.RoomInfo.playerInfo)
  return playerinfo_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int InviteInfo::kRoomIDFieldNumber;
const int InviteInfo::kReqUserIdFieldNumber;
const int InviteInfo::kReqUserNameFieldNumber;
const int InviteInfo::kRevUserIdFieldNumber;
const int InviteInfo::kTeamFieldNumber;
const int InviteInfo::kTeamIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

InviteInfo::InviteInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_scene_2etxt::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBMessage.InviteInfo)
}
InviteInfo::InviteInfo(const InviteInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  requsername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_requsername()) {
    requsername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requsername_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    reinterpret_cast<char*>(&team_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(team_));
  // @@protoc_insertion_point(copy_constructor:PBMessage.InviteInfo)
}

void InviteInfo::SharedCtor() {
  _cached_size_ = 0;
  requsername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, reinterpret_cast<char*>(&teamid_) -
    reinterpret_cast<char*>(&roomid_) + sizeof(teamid_));
  team_ = 1;
}

InviteInfo::~InviteInfo() {
  // @@protoc_insertion_point(destructor:PBMessage.InviteInfo)
  SharedDtor();
}

void InviteInfo::SharedDtor() {
  requsername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void InviteInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* InviteInfo::descriptor() {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages].descriptor;
}

const InviteInfo& InviteInfo::default_instance() {
  protobuf_scene_2etxt::InitDefaults();
  return *internal_default_instance();
}

InviteInfo* InviteInfo::New(::google::protobuf::Arena* arena) const {
  InviteInfo* n = new InviteInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void InviteInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:PBMessage.InviteInfo)
  if (has_requsername()) {
    GOOGLE_DCHECK(!requsername_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*requsername_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 62u) {
    ::memset(&roomid_, 0, reinterpret_cast<char*>(&teamid_) -
      reinterpret_cast<char*>(&roomid_) + sizeof(teamid_));
    team_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool InviteInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBMessage.InviteInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 roomID = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_roomid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 reqUserId = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_requserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &requserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string reqUserName = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_requsername()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->requsername().data(), this->requsername().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBMessage.InviteInfo.reqUserName");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 revUserId = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_revuserid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &revuserid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .PBMessage.TeamType team = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBMessage::TeamType_IsValid(value)) {
            set_team(static_cast< ::PBMessage::TeamType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(5, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 teamId = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          set_has_teamid();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBMessage.InviteInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBMessage.InviteInfo)
  return false;
#undef DO_
}

void InviteInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBMessage.InviteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roomID = 1;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->roomid(), output);
  }

  // optional int32 reqUserId = 2;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->requserid(), output);
  }

  // optional string reqUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requsername().data(), this->requsername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.InviteInfo.reqUserName");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->requsername(), output);
  }

  // optional int32 revUserId = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->revuserid(), output);
  }

  // optional .PBMessage.TeamType team = 5;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      5, this->team(), output);
  }

  // optional int32 teamId = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->teamid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBMessage.InviteInfo)
}

::google::protobuf::uint8* InviteInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBMessage.InviteInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 roomID = 1;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->roomid(), target);
  }

  // optional int32 reqUserId = 2;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->requserid(), target);
  }

  // optional string reqUserName = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->requsername().data(), this->requsername().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBMessage.InviteInfo.reqUserName");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->requsername(), target);
  }

  // optional int32 revUserId = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->revuserid(), target);
  }

  // optional .PBMessage.TeamType team = 5;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      5, this->team(), target);
  }

  // optional int32 teamId = 6;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->teamid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBMessage.InviteInfo)
  return target;
}

size_t InviteInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:PBMessage.InviteInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 63u) {
    // optional string reqUserName = 3;
    if (has_requsername()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->requsername());
    }

    // optional int32 roomID = 1;
    if (has_roomid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->roomid());
    }

    // optional int32 reqUserId = 2;
    if (has_requserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->requserid());
    }

    // optional int32 revUserId = 4;
    if (has_revuserid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->revuserid());
    }

    // optional int32 teamId = 6;
    if (has_teamid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->teamid());
    }

    // optional .PBMessage.TeamType team = 5;
    if (has_team()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->team());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void InviteInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:PBMessage.InviteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const InviteInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const InviteInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:PBMessage.InviteInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:PBMessage.InviteInfo)
    MergeFrom(*source);
  }
}

void InviteInfo::MergeFrom(const InviteInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:PBMessage.InviteInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_requsername();
      requsername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.requsername_);
    }
    if (cached_has_bits & 0x00000002u) {
      roomid_ = from.roomid_;
    }
    if (cached_has_bits & 0x00000004u) {
      requserid_ = from.requserid_;
    }
    if (cached_has_bits & 0x00000008u) {
      revuserid_ = from.revuserid_;
    }
    if (cached_has_bits & 0x00000010u) {
      teamid_ = from.teamid_;
    }
    if (cached_has_bits & 0x00000020u) {
      team_ = from.team_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void InviteInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:PBMessage.InviteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InviteInfo::CopyFrom(const InviteInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:PBMessage.InviteInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InviteInfo::IsInitialized() const {
  return true;
}

void InviteInfo::Swap(InviteInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void InviteInfo::InternalSwap(InviteInfo* other) {
  requsername_.Swap(&other->requsername_);
  std::swap(roomid_, other->roomid_);
  std::swap(requserid_, other->requserid_);
  std::swap(revuserid_, other->revuserid_);
  std::swap(teamid_, other->teamid_);
  std::swap(team_, other->team_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata InviteInfo::GetMetadata() const {
  protobuf_scene_2etxt::protobuf_AssignDescriptorsOnce();
  return protobuf_scene_2etxt::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// InviteInfo

// optional int32 roomID = 1;
bool InviteInfo::has_roomid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void InviteInfo::set_has_roomid() {
  _has_bits_[0] |= 0x00000002u;
}
void InviteInfo::clear_has_roomid() {
  _has_bits_[0] &= ~0x00000002u;
}
void InviteInfo::clear_roomid() {
  roomid_ = 0;
  clear_has_roomid();
}
::google::protobuf::int32 InviteInfo::roomid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.roomID)
  return roomid_;
}
void InviteInfo::set_roomid(::google::protobuf::int32 value) {
  set_has_roomid();
  roomid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.roomID)
}

// optional int32 reqUserId = 2;
bool InviteInfo::has_requserid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void InviteInfo::set_has_requserid() {
  _has_bits_[0] |= 0x00000004u;
}
void InviteInfo::clear_has_requserid() {
  _has_bits_[0] &= ~0x00000004u;
}
void InviteInfo::clear_requserid() {
  requserid_ = 0;
  clear_has_requserid();
}
::google::protobuf::int32 InviteInfo::requserid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.reqUserId)
  return requserid_;
}
void InviteInfo::set_requserid(::google::protobuf::int32 value) {
  set_has_requserid();
  requserid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.reqUserId)
}

// optional string reqUserName = 3;
bool InviteInfo::has_requsername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void InviteInfo::set_has_requsername() {
  _has_bits_[0] |= 0x00000001u;
}
void InviteInfo::clear_has_requsername() {
  _has_bits_[0] &= ~0x00000001u;
}
void InviteInfo::clear_requsername() {
  requsername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_requsername();
}
const ::std::string& InviteInfo::requsername() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.reqUserName)
  return requsername_.GetNoArena();
}
void InviteInfo::set_requsername(const ::std::string& value) {
  set_has_requsername();
  requsername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.reqUserName)
}
#if LANG_CXX11
void InviteInfo::set_requsername(::std::string&& value) {
  set_has_requsername();
  requsername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:PBMessage.InviteInfo.reqUserName)
}
#endif
void InviteInfo::set_requsername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_requsername();
  requsername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBMessage.InviteInfo.reqUserName)
}
void InviteInfo::set_requsername(const char* value, size_t size) {
  set_has_requsername();
  requsername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBMessage.InviteInfo.reqUserName)
}
::std::string* InviteInfo::mutable_requsername() {
  set_has_requsername();
  // @@protoc_insertion_point(field_mutable:PBMessage.InviteInfo.reqUserName)
  return requsername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* InviteInfo::release_requsername() {
  // @@protoc_insertion_point(field_release:PBMessage.InviteInfo.reqUserName)
  clear_has_requsername();
  return requsername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void InviteInfo::set_allocated_requsername(::std::string* requsername) {
  if (requsername != NULL) {
    set_has_requsername();
  } else {
    clear_has_requsername();
  }
  requsername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), requsername);
  // @@protoc_insertion_point(field_set_allocated:PBMessage.InviteInfo.reqUserName)
}

// optional int32 revUserId = 4;
bool InviteInfo::has_revuserid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void InviteInfo::set_has_revuserid() {
  _has_bits_[0] |= 0x00000008u;
}
void InviteInfo::clear_has_revuserid() {
  _has_bits_[0] &= ~0x00000008u;
}
void InviteInfo::clear_revuserid() {
  revuserid_ = 0;
  clear_has_revuserid();
}
::google::protobuf::int32 InviteInfo::revuserid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.revUserId)
  return revuserid_;
}
void InviteInfo::set_revuserid(::google::protobuf::int32 value) {
  set_has_revuserid();
  revuserid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.revUserId)
}

// optional .PBMessage.TeamType team = 5;
bool InviteInfo::has_team() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void InviteInfo::set_has_team() {
  _has_bits_[0] |= 0x00000020u;
}
void InviteInfo::clear_has_team() {
  _has_bits_[0] &= ~0x00000020u;
}
void InviteInfo::clear_team() {
  team_ = 1;
  clear_has_team();
}
::PBMessage::TeamType InviteInfo::team() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.team)
  return static_cast< ::PBMessage::TeamType >(team_);
}
void InviteInfo::set_team(::PBMessage::TeamType value) {
  assert(::PBMessage::TeamType_IsValid(value));
  set_has_team();
  team_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.team)
}

// optional int32 teamId = 6;
bool InviteInfo::has_teamid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void InviteInfo::set_has_teamid() {
  _has_bits_[0] |= 0x00000010u;
}
void InviteInfo::clear_has_teamid() {
  _has_bits_[0] &= ~0x00000010u;
}
void InviteInfo::clear_teamid() {
  teamid_ = 0;
  clear_has_teamid();
}
::google::protobuf::int32 InviteInfo::teamid() const {
  // @@protoc_insertion_point(field_get:PBMessage.InviteInfo.teamId)
  return teamid_;
}
void InviteInfo::set_teamid(::google::protobuf::int32 value) {
  set_has_teamid();
  teamid_ = value;
  // @@protoc_insertion_point(field_set:PBMessage.InviteInfo.teamId)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace PBMessage

// @@protoc_insertion_point(global_scope)
